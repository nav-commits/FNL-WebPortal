{"ast":null,"code":"var _jsxFileName = \"/Users/biomacbook/Documents/fnl-web-portal/src/Views/Game.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport Button from '../Atoms/Button/Button';\nimport MatchResults from './MatchResults';\nimport PlayerInput from '../Molecules/PlayerInput/PlayerInput';\nimport Input from '../Atoms/Input/Input';\nimport { fnlPlayers } from '../Utils';\nimport Dropdown from '../Molecules/Dropdown/Dropdown';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Game = () => {\n  _s();\n  const [formDataArray, setFormDataArray] = useState([]);\n  const [teamWhiteGoalie, setTeamWhiteGoalie] = useState('');\n  const [teamBlackGoalie, setTeamBlackGoalie] = useState('');\n  const [teamWhitePlayers, setTeamWhitePlayers] = useState([{\n    name: ''\n  }]);\n  const [teamBlackPlayers, setTeamBlackPlayers] = useState([{\n    name: ''\n  }]);\n  const [monthToMonth, setmonthToMonth] = useState([{\n    name: ''\n  }]);\n  const [irAndOut, setIRAndOut] = useState([{\n    name: ''\n  }]);\n  const [weekToWeek, setWeekToWeek] = useState([{\n    name: ''\n  }]);\n  const [showDropdown, setShowDropdown] = useState(false);\n  const [formData, setFormData] = useState({\n    game: {\n      teamWhite: {\n        Team: 'White',\n        players: [{}],\n        goalie: ''\n      },\n      teamBlack: {\n        Team: 'Black',\n        players: [{}],\n        goalie: ''\n      },\n      irAndOut: {\n        Team: 'irAndOut',\n        players: [{}]\n      },\n      monthToMonth: {\n        Team: 'monthToMonth',\n        players: [{}]\n      },\n      weekToWeek: {\n        Team: 'weekToWeek',\n        players: [{}]\n      }\n    }\n  });\n  const filterPlayersDropdown = (name, typeofPlayer, team) => {\n    if (typeofPlayer === 'goalie' && team === 'teamWhite') {\n      const filtered = fnlPlayers.filter(player => player.name.toLowerCase().includes(name));\n      setFilteredPlayers(filtered);\n      setShowDropdown(true);\n      console.log(name, typeofPlayer, team);\n    } else if (typeofPlayer === 'goalie' && team === 'teamBlack') {\n      const filtered = fnlPlayers.filter(player => player.name.toLowerCase().includes(name));\n      setFilteredPlayers(filtered);\n      setShowDropdown(true);\n      console.log(name, typeofPlayer, team);\n    } else if (typeofPlayer === 'player' && team === 'teamWhite') {\n      const filtered = fnlPlayers.filter(player => player.name.toLowerCase().includes(name));\n      setFilteredPlayers(filtered);\n      setShowDropdown(true);\n      console.log(name, typeofPlayer, team);\n    } else if (typeofPlayer === 'player' && team === 'teamBlack') {\n      const filtered = fnlPlayers.filter(player => player.name.toLowerCase().includes(name));\n      setFilteredPlayers(filtered);\n      setShowDropdown(true);\n      console.log(name, typeofPlayer, team);\n    } else if (typeofPlayer === 'player' && team === 'irAndOut') {\n      const filtered = fnlPlayers.filter(player => player.name.toLowerCase().includes(name));\n      setFilteredPlayers(filtered);\n      setShowDropdown(true);\n      console.log(name, typeofPlayer, team);\n    } else if (typeofPlayer === 'player' && team === 'monthToMonth') {\n      const filtered = fnlPlayers.filter(player => player.name.toLowerCase().includes(name));\n      setFilteredPlayers(filtered);\n      setShowDropdown(true);\n      console.log(name, typeofPlayer, team);\n    }\n  };\n  const handlePlayerNameChange = (team, playerIndex, newName, playerType) => {\n    filterPlayersDropdown(newName.toLowerCase(), playerType, team);\n\n    // Update the form data with the new name\n    setFormData(prevData => {\n      const updatedData = {\n        ...prevData\n      };\n      if (playerType === 'goalie') {\n        updatedData.game[team].goalie = newName;\n      } else {\n        updatedData.game[team].players = updatedData.game[team].players.map((player, index) => {\n          if (index === playerIndex) {\n            player.name = newName;\n          }\n          return player;\n        });\n      }\n      return updatedData;\n    });\n  };\n  const handleAddPlayer = team => {\n    const newPlayer = {\n      name: ''\n    };\n    switch (team) {\n      case 'teamWhite':\n        setTeamWhitePlayers(prevPlayers => [...prevPlayers, newPlayer]);\n        break;\n      case 'irAndOut':\n        setIRAndOut(prevPlayers => [...prevPlayers, newPlayer]);\n        break;\n      case 'monthToMonth':\n        setmonthToMonth(prevPlayers => [...prevPlayers, newPlayer]);\n        break;\n      case 'weekToWeek':\n        setWeekToWeek(prevPlayers => [...prevPlayers, newPlayer]);\n        break;\n      default:\n        setTeamBlackPlayers(prevPlayers => [...prevPlayers, newPlayer]);\n        break;\n    }\n    setFormData(prevData => {\n      const updatedData = {\n        ...prevData\n      };\n      updatedData.game[team].players.push({});\n      return updatedData;\n    });\n  };\n  const removePlayer = (team, playerIndex) => {\n    switch (team) {\n      case 'teamWhite':\n        if (teamWhitePlayers.length === 1) return;\n        setTeamWhitePlayers(prevPlayers => prevPlayers.filter((player, index) => index !== playerIndex));\n        break;\n      case 'irAndOut':\n        if (irAndOut.length === 1) return;\n        setIRAndOut(prevPlayers => prevPlayers.filter((player, index) => index !== playerIndex));\n        break;\n      case 'weekToWeek':\n        if (weekToWeek.length === 1) return;\n        setWeekToWeek(prevPlayers => prevPlayers.filter((player, index) => index !== playerIndex));\n        break;\n      case 'monthToMonth':\n        if (monthToMonth.length === 1) return;\n        setmonthToMonth(prevPlayers => prevPlayers.filter((player, index) => index !== playerIndex));\n        break;\n      default:\n        if (teamBlackPlayers.length === 1) return;\n        setTeamBlackPlayers(prevPlayers => prevPlayers.filter((player, index) => index !== playerIndex));\n        break;\n    }\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    // Add the current date to the form data\n    const currentDate = new Date().toLocaleDateString();\n    const formDataArray = JSON.parse(localStorage.getItem('formDataArray')) || [];\n    const weekNumber = formDataArray.length === 0 ? 1 : formDataArray.length + 1;\n    const updatedFormData = {\n      ...formData,\n      date: currentDate,\n      week: weekNumber\n    };\n    // Save the form data to local storage\n    localStorage.setItem('formDataArray', JSON.stringify(updatedFormData));\n    // Push the form data into the array\n    setFormDataArray(prevDataArray => [...prevDataArray, updatedFormData]);\n  };\n  useEffect(() => {\n    // Load the form data array from local storage\n    const savedFormDataArray = JSON.parse(localStorage.getItem('formDataArray')) || [];\n    if (savedFormDataArray.length > 0) {\n      setFormDataArray(savedFormDataArray);\n    }\n  }, []);\n\n  // set the input value to the name of the player selected\n  const handleNameSelect = (name, inputType, playerIndex) => {\n    switch (inputType) {\n      case 'teamWhiteGoalie':\n        setTeamWhiteGoalie(name);\n        handlePlayerNameChange('teamWhite', null, name, 'goalie');\n        setFilteredPlayers([]);\n        break;\n      case 'teamBlackGoalie':\n        setTeamBlackGoalie(name);\n        handlePlayerNameChange('teamBlack', null, name, 'goalie');\n        setFilteredPlayers([]);\n        break;\n      case 'teamWhitePlayer':\n        const newTeamWhitePlayers = [...teamWhitePlayers];\n        newTeamWhitePlayers[playerIndex] = {\n          ...newTeamWhitePlayers[playerIndex],\n          name\n        };\n        handlePlayerNameChange('teamWhite', playerIndex, name, 'player');\n        setTeamWhitePlayers(newTeamWhitePlayers);\n        setFilteredPlayers([]);\n        break;\n      case 'teamBlackPlayer':\n        const newTeamBlackPlayers = [...teamBlackPlayers];\n        newTeamBlackPlayers[playerIndex] = {\n          ...newTeamBlackPlayers[playerIndex],\n          name\n        };\n        handlePlayerNameChange('teamBlack', playerIndex, name, 'player');\n        setTeamBlackPlayers(newTeamBlackPlayers);\n        setFilteredPlayers([]);\n        break;\n      case 'irAndOut':\n        const newIRAndOut = [...irAndOut];\n        newIRAndOut[playerIndex] = {\n          ...newIRAndOut[playerIndex],\n          name\n        };\n        handlePlayerNameChange('irAndOut', playerIndex, name, 'player');\n        setIRAndOut(newIRAndOut);\n        setFilteredPlayers([]);\n        break;\n      case 'monthToMonth':\n        const newMonthToMonth = [...monthToMonth];\n        newMonthToMonth[playerIndex] = {\n          ...newMonthToMonth[playerIndex],\n          name\n        };\n        handlePlayerNameChange('monthToMonth', playerIndex, name, 'player');\n        setmonthToMonth(newMonthToMonth);\n        setFilteredPlayers([]);\n        break;\n      case 'weekToWeek':\n        const newWeekToWeek = [...weekToWeek];\n        newWeekToWeek[playerIndex] = {\n          ...newWeekToWeek[playerIndex],\n          name\n        };\n        handlePlayerNameChange('weekToWeek', playerIndex, name, 'player');\n        setWeekToWeek(newWeekToWeek);\n        setFilteredPlayers([]);\n        break;\n      default:\n        break;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        textAlign: 'center'\n      },\n      children: \"FNL Roll Call\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'center'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            flexDirection: 'row',\n            gap: '20px',\n            justifyContent: 'space-around'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex',\n              flexDirection: 'column',\n              gap: '20px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: [\"Team White\", ' ', /*#__PURE__*/_jsxDEV(\"span\", {\n                role: \"img\",\n                \"aria-label\": \"White Flag\",\n                children: \"\\uD83C\\uDFF3\\uFE0F\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 274,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 272,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              value: teamWhiteGoalie,\n              onChange: e => {\n                setTeamWhiteGoalie(e.target.value);\n                handlePlayerNameChange('teamWhite', null, e.target.value, 'goalie');\n              },\n              placeholder: \"Goalie\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 278,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n              data: filteredPlayers,\n              handleNameSelect: handleNameSelect,\n              index: null,\n              nameType: 'teamWhiteGoalie',\n              showDropdown: showDropdown\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 292,\n              columnNumber: 29\n            }, this), teamWhitePlayers.map((player, index) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(PlayerInput, {\n                value: player.name,\n                onChange: e => {\n                  const newPlayers = [...teamWhitePlayers];\n                  newPlayers[index].name = e.target.value;\n                  setTeamWhitePlayers(newPlayers);\n                  handlePlayerNameChange('teamWhite', index, e.target.value, 'player');\n                },\n                placeholder: `Player ${index + 1}`,\n                onAdd: () => handleAddPlayer('teamWhite'),\n                onRemove: () => removePlayer('teamWhite', index)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 302,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n                data: filteredPlayers,\n                handleNameSelect: handleNameSelect,\n                index: index,\n                nameType: 'teamWhitePlayer',\n                showDropdown: showDropdown\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 320,\n                columnNumber: 37\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 301,\n              columnNumber: 33\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex',\n              flexDirection: 'column',\n              gap: '20px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: [\"Team Black\", ' ', /*#__PURE__*/_jsxDEV(\"span\", {\n                role: \"img\",\n                \"aria-label\": \"Black Flag\",\n                children: \"\\uD83C\\uDFF4\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 334,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 332,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              value: teamBlackGoalie,\n              onChange: e => {\n                setTeamBlackGoalie(e.target.value);\n                handlePlayerNameChange('teamBlack', null, e.target.value, 'goalie');\n              },\n              placeholder: \"Goalie\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 338,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n              data: filteredPlayers,\n              handleNameSelect: handleNameSelect,\n              index: null,\n              nameType: 'teamBlackGoalie',\n              showDropdown: showDropdown\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 352,\n              columnNumber: 29\n            }, this), teamBlackPlayers.map((player, index) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(PlayerInput, {\n                value: player.name,\n                onChange: e => {\n                  const newPlayers = [...teamBlackPlayers];\n                  newPlayers[index].name = e.target.value;\n                  setTeamBlackPlayers(newPlayers);\n                  handlePlayerNameChange('teamBlack', index, e.target.value, 'player');\n                },\n                placeholder: `Player ${index + 1}`,\n                onAdd: () => handleAddPlayer('teamBlack'),\n                onRemove: () => removePlayer('teamBlack', index)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 362,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n                data: filteredPlayers,\n                handleNameSelect: handleNameSelect,\n                index: index,\n                nameType: 'teamBlackPlayer',\n                showDropdown: showDropdown\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 380,\n                columnNumber: 37\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 361,\n              columnNumber: 33\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 331,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            flexDirection: 'row',\n            gap: '20px',\n            justifyContent: 'center'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex',\n              flexDirection: 'column',\n              gap: '20px',\n              marginTop: '50px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"IR/Out\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 408,\n              columnNumber: 29\n            }, this), irAndOut.map((player, index) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(PlayerInput, {\n                value: player.name,\n                onChange: e => {\n                  const newPlayers = [...irAndOut];\n                  newPlayers[index].name = e.target.value;\n                  setIRAndOut(newPlayers);\n                  handlePlayerNameChange('irAndOut', index, e.target.value, 'player');\n                },\n                placeholder: `Player ${index + 1}`,\n                onAdd: () => handleAddPlayer('irAndOut'),\n                onRemove: () => removePlayer('irAndOut', index)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 411,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n                data: filteredPlayers,\n                handleNameSelect: handleNameSelect,\n                index: index,\n                nameType: 'irAndOut'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 428,\n                columnNumber: 37\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 410,\n              columnNumber: 33\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 400,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex',\n              flexDirection: 'column',\n              gap: '20px',\n              marginTop: '50px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Month to Month\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 446,\n              columnNumber: 29\n            }, this), monthToMonth.map((player, index) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(PlayerInput, {\n                value: player.name,\n                onChange: e => {\n                  const newPlayers = [...monthToMonth];\n                  newPlayers[index].name = e.target.value;\n                  setmonthToMonth(newPlayers);\n                  handlePlayerNameChange('monthToMonth', index, e.target.value, 'player');\n                },\n                placeholder: `Player ${index + 1}`,\n                onAdd: () => handleAddPlayer('monthToMonth'),\n                onRemove: () => removePlayer('monthToMonth', index)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 449,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n                data: filteredPlayers,\n                handleNameSelect: handleNameSelect,\n                index: index,\n                nameType: 'monthToMonth'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 466,\n                columnNumber: 37\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 448,\n              columnNumber: 33\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 438,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex',\n              flexDirection: 'column',\n              gap: '20px',\n              marginTop: '50px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Week to week\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 483,\n              columnNumber: 29\n            }, this), weekToWeek.map((player, index) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(PlayerInput, {\n                value: player.name,\n                onChange: e => {\n                  const newPlayers = [...weekToWeek];\n                  newPlayers[index].name = e.target.value;\n                  setWeekToWeek(newPlayers);\n                  handlePlayerNameChange('weekToWeek', index, e.target.value, 'player');\n                },\n                placeholder: `Player ${index + 1}`,\n                onAdd: () => handleAddPlayer('weekToWeek'),\n                onRemove: () => removePlayer('weekToWeek', index)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 486,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n                data: filteredPlayers,\n                handleNameSelect: handleNameSelect,\n                index: index,\n                nameType: 'weekToWeek'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 503,\n                columnNumber: 37\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 485,\n              columnNumber: 33\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 475,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 392,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            marginTop: '50px'\n          },\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            title: \"Submit\",\n            type: \"submit\",\n            color: \"#2196f3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 514,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 513,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(MatchResults, {\n      formDataArray: formDataArray\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 518,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_s(Game, \"g5X18ZFGASVR+KDbulgnFtb2hKQ=\");\n_c = Game;\nexport default Game;\nvar _c;\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["React","useEffect","useState","Button","MatchResults","PlayerInput","Input","fnlPlayers","Dropdown","jsxDEV","_jsxDEV","Fragment","_Fragment","Game","_s","formDataArray","setFormDataArray","teamWhiteGoalie","setTeamWhiteGoalie","teamBlackGoalie","setTeamBlackGoalie","teamWhitePlayers","setTeamWhitePlayers","name","teamBlackPlayers","setTeamBlackPlayers","monthToMonth","setmonthToMonth","irAndOut","setIRAndOut","weekToWeek","setWeekToWeek","showDropdown","setShowDropdown","formData","setFormData","game","teamWhite","Team","players","goalie","teamBlack","filterPlayersDropdown","typeofPlayer","team","filtered","filter","player","toLowerCase","includes","setFilteredPlayers","console","log","handlePlayerNameChange","playerIndex","newName","playerType","prevData","updatedData","map","index","handleAddPlayer","newPlayer","prevPlayers","push","removePlayer","length","handleSubmit","e","preventDefault","currentDate","Date","toLocaleDateString","JSON","parse","localStorage","getItem","weekNumber","updatedFormData","date","week","setItem","stringify","prevDataArray","savedFormDataArray","handleNameSelect","inputType","newTeamWhitePlayers","newTeamBlackPlayers","newIRAndOut","newMonthToMonth","newWeekToWeek","children","style","textAlign","fileName","_jsxFileName","lineNumber","columnNumber","display","justifyContent","onSubmit","flexDirection","gap","role","value","onChange","target","placeholder","data","filteredPlayers","nameType","newPlayers","onAdd","onRemove","marginTop","title","type","color","_c","$RefreshReg$"],"sources":["/Users/biomacbook/Documents/fnl-web-portal/src/Views/Game.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport Button from '../Atoms/Button/Button';\nimport MatchResults from './MatchResults';\nimport PlayerInput from '../Molecules/PlayerInput/PlayerInput';\nimport Input from '../Atoms/Input/Input';\nimport { fnlPlayers } from '../Utils';\nimport Dropdown from '../Molecules/Dropdown/Dropdown';\n\nconst Game = () => {\n    const [formDataArray, setFormDataArray] = useState([]);\n    const [teamWhiteGoalie, setTeamWhiteGoalie] = useState('');\n    const [teamBlackGoalie, setTeamBlackGoalie] = useState('');\n    const [teamWhitePlayers, setTeamWhitePlayers] = useState([{ name: '' }]);\n    const [teamBlackPlayers, setTeamBlackPlayers] = useState([{ name: '' }]);\n    const [monthToMonth, setmonthToMonth] = useState([{ name: '' }]);\n    const [irAndOut, setIRAndOut] = useState([{ name: '' }]);\n    const [weekToWeek, setWeekToWeek] = useState([{ name: '' }]);\n    \n    const [showDropdown, setShowDropdown] = useState(false);\n    const [formData, setFormData] = useState({\n        game: {\n            teamWhite: {\n                Team: 'White',\n                players: [{}],\n                goalie: '',\n            },\n            teamBlack: {\n                Team: 'Black',\n                players: [{}],\n                goalie: '',\n            },\n            irAndOut: {\n                Team: 'irAndOut',\n                players: [{}],\n            },\n            monthToMonth: {\n                Team: 'monthToMonth',\n                players: [{}],\n            },\n            weekToWeek: {\n                Team: 'weekToWeek',\n                players: [{}],\n            },\n        },\n    });\n    const filterPlayersDropdown = (name, typeofPlayer, team) => {\n        \n        if (typeofPlayer === 'goalie' && team === 'teamWhite') {\n            const filtered = fnlPlayers.filter((player) => player.name.toLowerCase().includes(name));\n            setFilteredPlayers(filtered);\n            setShowDropdown(true);\n            console.log(name, typeofPlayer, team,)\n        }\n        else if (typeofPlayer === 'goalie' && team === 'teamBlack') {\n            const filtered = fnlPlayers.filter((player) => player.name.toLowerCase().includes(name));\n            setFilteredPlayers(filtered);\n            setShowDropdown(true);\n            console.log(name, typeofPlayer, team,)\n        }\n        else if (typeofPlayer === 'player' && team === 'teamWhite') {\n            const filtered = fnlPlayers.filter((player) => player.name.toLowerCase().includes(name));\n            setFilteredPlayers(filtered);\n            setShowDropdown(true);\n            console.log(name, typeofPlayer, team,)\n        }\n        else if (typeofPlayer === 'player' && team === 'teamBlack') {\n            const filtered = fnlPlayers.filter((player) => player.name.toLowerCase().includes(name));\n            setFilteredPlayers(filtered);\n            setShowDropdown(true);\n            console.log(name, typeofPlayer, team,)\n        }\n        else if (typeofPlayer === 'player' && team === 'irAndOut') {\n            const filtered = fnlPlayers.filter((player) => player.name.toLowerCase().includes(name));\n            setFilteredPlayers(filtered);\n            setShowDropdown(true);\n            console.log(name, typeofPlayer, team,)\n        }\n        else if (typeofPlayer === 'player' && team === 'monthToMonth') {\n            const filtered = fnlPlayers.filter((player) => player.name.toLowerCase().includes(name));\n            setFilteredPlayers(filtered);\n            setShowDropdown(true);\n            console.log(name, typeofPlayer, team,)\n        }\n    }\n\n    const handlePlayerNameChange = (team, playerIndex, newName, playerType) => {\n      \n        filterPlayersDropdown(newName.toLowerCase(), playerType, team);\n        \n     \n\n       \n        // Update the form data with the new name\n        setFormData((prevData) => {\n            const updatedData = { ...prevData };\n            if (playerType === 'goalie') {\n                updatedData.game[team].goalie = newName;\n            } else {\n                updatedData.game[team].players = updatedData.game[team].players.map(\n                    (player, index) => {\n                        if (index === playerIndex) {\n                            player.name = newName;\n                        }\n                        return player;\n                    }\n                );\n            }\n            return updatedData;\n        });\n\n    };\n\n    const handleAddPlayer = (team) => {\n        const newPlayer = { name: '' };\n        switch (team) {\n            case 'teamWhite':\n                setTeamWhitePlayers((prevPlayers) => [...prevPlayers, newPlayer]);\n                break;\n            case 'irAndOut':\n                setIRAndOut((prevPlayers) => [...prevPlayers, newPlayer]);\n                break;\n            case 'monthToMonth':\n                setmonthToMonth((prevPlayers) => [...prevPlayers, newPlayer]);\n                break;\n            case 'weekToWeek':\n                setWeekToWeek((prevPlayers) => [...prevPlayers, newPlayer]);\n                break;\n            default:\n                setTeamBlackPlayers((prevPlayers) => [...prevPlayers, newPlayer]);\n                break;\n        }\n        setFormData((prevData) => {\n            const updatedData = { ...prevData };\n            updatedData.game[team].players.push({});\n            return updatedData;\n        });\n    };\n    const removePlayer = (team, playerIndex) => {\n        switch (team) {\n            case 'teamWhite':\n                if (teamWhitePlayers.length === 1) return;\n                setTeamWhitePlayers((prevPlayers) =>\n                    prevPlayers.filter((player, index) => index !== playerIndex)\n                );\n                break;\n            case 'irAndOut':\n                if (irAndOut.length === 1) return;\n                setIRAndOut((prevPlayers) =>\n                    prevPlayers.filter((player, index) => index !== playerIndex)\n                );\n                break;\n            case 'weekToWeek':\n                if (weekToWeek.length === 1) return;\n                setWeekToWeek((prevPlayers) =>\n                    prevPlayers.filter((player, index) => index !== playerIndex)\n                );\n                break;\n            case 'monthToMonth':\n                if (monthToMonth.length === 1) return;\n                setmonthToMonth((prevPlayers) =>\n                    prevPlayers.filter((player, index) => index !== playerIndex)\n                );\n                break;\n            default:\n                if (teamBlackPlayers.length === 1) return;\n                setTeamBlackPlayers((prevPlayers) =>\n                    prevPlayers.filter((player, index) => index !== playerIndex)\n                );\n                break;\n        }\n    };\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        // Add the current date to the form data\n        const currentDate = new Date().toLocaleDateString();\n        const formDataArray = JSON.parse(localStorage.getItem('formDataArray')) || [];\n        const weekNumber = formDataArray.length === 0 ? 1 : formDataArray.length + 1;\n        const updatedFormData = {\n            ...formData,\n            date: currentDate,\n            week: weekNumber,\n        };\n        // Save the form data to local storage\n        localStorage.setItem('formDataArray', JSON.stringify(updatedFormData));\n        // Push the form data into the array\n        setFormDataArray((prevDataArray) => [...prevDataArray, updatedFormData]);\n\n    };\n\n    useEffect(() => {\n        // Load the form data array from local storage\n        const savedFormDataArray = JSON.parse(localStorage.getItem('formDataArray')) || [];\n        if (savedFormDataArray.length > 0) {\n            setFormDataArray(savedFormDataArray);\n        }\n    }, []);\n\n    // set the input value to the name of the player selected\n    const handleNameSelect = (name, inputType, playerIndex) => {\n        switch (inputType) {\n            case 'teamWhiteGoalie':\n                setTeamWhiteGoalie(name);\n                handlePlayerNameChange('teamWhite', null, name, 'goalie');\n                setFilteredPlayers([]);\n                break;\n\n            case 'teamBlackGoalie':\n                setTeamBlackGoalie(name);\n                handlePlayerNameChange('teamBlack', null, name, 'goalie');\n                setFilteredPlayers([]);\n                break;\n\n            case 'teamWhitePlayer':\n                const newTeamWhitePlayers = [...teamWhitePlayers];\n                newTeamWhitePlayers[playerIndex] = { ...newTeamWhitePlayers[playerIndex], name };\n                handlePlayerNameChange('teamWhite', playerIndex, name, 'player');\n                setTeamWhitePlayers(newTeamWhitePlayers);\n                setFilteredPlayers([]);\n                break;\n\n            case 'teamBlackPlayer':\n                const newTeamBlackPlayers = [...teamBlackPlayers];\n                newTeamBlackPlayers[playerIndex] = { ...newTeamBlackPlayers[playerIndex], name };\n                handlePlayerNameChange('teamBlack', playerIndex, name, 'player');\n                setTeamBlackPlayers(newTeamBlackPlayers);\n                setFilteredPlayers([]);\n                break;\n\n            case 'irAndOut':\n                const newIRAndOut = [...irAndOut];\n                newIRAndOut[playerIndex] = { ...newIRAndOut[playerIndex], name };\n                handlePlayerNameChange('irAndOut', playerIndex, name, 'player');\n                setIRAndOut(newIRAndOut);\n                setFilteredPlayers([]);\n                break;\n\n            case 'monthToMonth':\n                const newMonthToMonth = [...monthToMonth];\n                newMonthToMonth[playerIndex] = { ...newMonthToMonth[playerIndex], name };\n                handlePlayerNameChange('monthToMonth', playerIndex, name, 'player');\n                setmonthToMonth(newMonthToMonth);\n                setFilteredPlayers([]);\n\n                break;\n            case 'weekToWeek':\n                const newWeekToWeek = [...weekToWeek];\n                newWeekToWeek[playerIndex] = { ...newWeekToWeek[playerIndex], name };\n                handlePlayerNameChange('weekToWeek', playerIndex, name, 'player');\n                setWeekToWeek(newWeekToWeek);\n                setFilteredPlayers([]);\n                break;\n            default:\n                break;\n        }\n    };\n\n    return (\n        <>\n            <h1 style={{ textAlign: 'center' }}>FNL Roll Call</h1>\n            <div style={{ display: 'flex', justifyContent: 'center' }}>\n                <form onSubmit={handleSubmit}>\n                    <div\n                        style={{\n                            display: 'flex',\n                            flexDirection: 'row',\n                            gap: '20px',\n                            justifyContent: 'space-around',\n                        }}\n                    >\n                        <div style={{ display: 'flex', flexDirection: 'column', gap: '20px' }}>\n                            <h3>\n                                Team White{' '}\n                                <span role='img' aria-label='White Flag'>\n                                    🏳️\n                                </span>\n                            </h3>\n                            <Input\n                                value={teamWhiteGoalie}\n                                onChange={(e) => {\n                                    setTeamWhiteGoalie(e.target.value);\n                                    handlePlayerNameChange(\n                                        'teamWhite',\n                                        null,\n                                        e.target.value,\n                                        'goalie'\n                                    );\n                                }}\n                                placeholder='Goalie'\n                            />\n                            {/* dropdown */}\n                            <Dropdown\n                                data={filteredPlayers}\n                                handleNameSelect={handleNameSelect}\n                                index={null}\n                                nameType={'teamWhiteGoalie'}\n                                showDropdown={showDropdown}\n                            />\n\n                            {teamWhitePlayers.map((player, index) => (\n                                <React.Fragment key={index}>\n                                    <PlayerInput\n                                        value={player.name}\n                                        onChange={(e) => {\n                                            const newPlayers = [...teamWhitePlayers];\n                                            newPlayers[index].name = e.target.value;\n                                            setTeamWhitePlayers(newPlayers);\n                                            handlePlayerNameChange(\n                                                'teamWhite',\n                                                index,\n                                                e.target.value,\n                                                'player'\n                                            );\n                                        }}\n                                        placeholder={`Player ${index + 1}`}\n                                        onAdd={() => handleAddPlayer('teamWhite')}\n                                        onRemove={() => removePlayer('teamWhite', index)}\n                                    />\n                                    {/* dropdown */}\n                                    <Dropdown\n                                        data={filteredPlayers}\n                                        handleNameSelect={handleNameSelect}\n                                        index={index}\n                                        nameType={'teamWhitePlayer'}\n                                        showDropdown={showDropdown}\n                                    />\n                                </React.Fragment>\n                            ))}\n                        </div>\n\n                        <div style={{ display: 'flex', flexDirection: 'column', gap: '20px' }}>\n                            <h3>\n                                Team Black{' '}\n                                <span role='img' aria-label='Black Flag'>\n                                    🏴\n                                </span>\n                            </h3>\n                            <Input\n                                value={teamBlackGoalie}\n                                onChange={(e) => {\n                                    setTeamBlackGoalie(e.target.value);\n                                    handlePlayerNameChange(\n                                        'teamBlack',\n                                        null,\n                                        e.target.value,\n                                        'goalie'\n                                    );\n                                }}\n                                placeholder='Goalie'\n                            />\n                            {/* dropdown */}\n                            <Dropdown\n                                data={filteredPlayers}\n                                handleNameSelect={handleNameSelect}\n                                index={null}\n                                nameType={'teamBlackGoalie'}\n                                showDropdown={showDropdown}\n                            />\n\n                            {teamBlackPlayers.map((player, index) => (\n                                <React.Fragment key={index}>\n                                    <PlayerInput\n                                        value={player.name}\n                                        onChange={(e) => {\n                                            const newPlayers = [...teamBlackPlayers];\n                                            newPlayers[index].name = e.target.value;\n                                            setTeamBlackPlayers(newPlayers);\n                                            handlePlayerNameChange(\n                                                'teamBlack',\n                                                index,\n                                                e.target.value,\n                                                'player'\n                                            );\n                                        }}\n                                        placeholder={`Player ${index + 1}`}\n                                        onAdd={() => handleAddPlayer('teamBlack')}\n                                        onRemove={() => removePlayer('teamBlack', index)}\n                                    />\n                                    {/* dropdown */}\n                                    <Dropdown\n                                        data={filteredPlayers}\n                                        handleNameSelect={handleNameSelect}\n                                        index={index}\n                                        nameType={'teamBlackPlayer'}\n                                        showDropdown={showDropdown}\n                                    />\n                                </React.Fragment>\n                            ))}\n                        </div>\n                    </div>\n\n                    <div\n                        style={{\n                            display: 'flex',\n                            flexDirection: 'row',\n                            gap: '20px',\n                            justifyContent: 'center',\n                        }}\n                    >\n                        <div\n                            style={{\n                                display: 'flex',\n                                flexDirection: 'column',\n                                gap: '20px',\n                                marginTop: '50px',\n                            }}\n                        >\n                            <h3>IR/Out</h3>\n                            {irAndOut.map((player, index) => (\n                                <React.Fragment key={index}>\n                                    <PlayerInput\n                                        value={player.name}\n                                        onChange={(e) => {\n                                            const newPlayers = [...irAndOut];\n                                            newPlayers[index].name = e.target.value;\n                                            setIRAndOut(newPlayers);\n                                            handlePlayerNameChange(\n                                                'irAndOut',\n                                                index,\n                                                e.target.value,\n                                                'player'\n                                            );\n                                        }}\n                                        placeholder={`Player ${index + 1}`}\n                                        onAdd={() => handleAddPlayer('irAndOut')}\n                                        onRemove={() => removePlayer('irAndOut', index)}\n                                    />\n                                    <Dropdown\n                                        data={filteredPlayers}\n                                        handleNameSelect={handleNameSelect}\n                                        index={index}\n                                        nameType={'irAndOut'}\n                                    />\n                                </React.Fragment>\n                            ))}\n                        </div>\n\n                        <div\n                            style={{\n                                display: 'flex',\n                                flexDirection: 'column',\n                                gap: '20px',\n                                marginTop: '50px',\n                            }}\n                        >\n                            <h3>Month to Month</h3>\n                            {monthToMonth.map((player, index) => (\n                                <React.Fragment key={index}>\n                                    <PlayerInput\n                                        value={player.name}\n                                        onChange={(e) => {\n                                            const newPlayers = [...monthToMonth];\n                                            newPlayers[index].name = e.target.value;\n                                            setmonthToMonth(newPlayers);\n                                            handlePlayerNameChange(\n                                                'monthToMonth',\n                                                index,\n                                                e.target.value,\n                                                'player'\n                                            );\n                                        }}\n                                        placeholder={`Player ${index + 1}`}\n                                        onAdd={() => handleAddPlayer('monthToMonth')}\n                                        onRemove={() => removePlayer('monthToMonth', index)}\n                                    />\n                                    <Dropdown\n                                        data={filteredPlayers}\n                                        handleNameSelect={handleNameSelect}\n                                        index={index}\n                                        nameType={'monthToMonth'}\n                                    />\n                                </React.Fragment>\n                            ))}\n                        </div>\n                        <div\n                            style={{\n                                display: 'flex',\n                                flexDirection: 'column',\n                                gap: '20px',\n                                marginTop: '50px',\n                            }}\n                        >\n                            <h3>Week to week</h3>\n                            {weekToWeek.map((player, index) => (\n                                <React.Fragment key={index}>\n                                    <PlayerInput\n                                        value={player.name}\n                                        onChange={(e) => {\n                                            const newPlayers = [...weekToWeek];\n                                            newPlayers[index].name = e.target.value;\n                                            setWeekToWeek(newPlayers);\n                                            handlePlayerNameChange(\n                                                'weekToWeek',\n                                                index,\n                                                e.target.value,\n                                                'player'\n                                            );\n                                        }}\n                                        placeholder={`Player ${index + 1}`}\n                                        onAdd={() => handleAddPlayer('weekToWeek')}\n                                        onRemove={() => removePlayer('weekToWeek', index)}\n                                    />\n                                    <Dropdown\n                                        data={filteredPlayers}\n                                        handleNameSelect={handleNameSelect}\n                                        index={index}\n                                        nameType={'weekToWeek'}\n                                    />\n                                </React.Fragment>\n                            ))}\n                        </div>\n                    </div>\n                    <div style={{ display: 'flex', marginTop: '50px' }}>\n                        <Button title='Submit' type='submit' color='#2196f3' />\n                    </div>\n                </form>\n            </div>\n            <MatchResults formDataArray={formDataArray} />\n        </>\n    );\n};\n\nexport default Game;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}