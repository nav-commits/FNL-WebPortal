{"ast":null,"code":"var _jsxFileName = \"/Users/biomacbook/Documents/fnl-web-portal/src/Views/Game.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport Button from '../Atoms/Button/Button';\nimport MatchResults from './MatchResults';\nimport PlayerInput from '../Molecules/PlayerInput/PlayerInput';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Game = () => {\n  _s();\n  const [formDataArray, setFormDataArray] = useState([]);\n  const [teamWhiteGoalie, setTeamWhiteGoalie] = useState('');\n  const [teamBlackGoalie, setTeamBlackGoalie] = useState('');\n  const [teamWhitePlayers, setTeamWhitePlayers] = useState([{\n    name: ''\n  }]);\n  const [teamBlackPlayers, setTeamBlackPlayers] = useState([{\n    name: ''\n  }]);\n  const [monthToMonth, setmonthToMonth] = useState([{\n    name: ''\n  }]);\n  const [irAndOut, setIRAndOut] = useState([{\n    name: ''\n  }]);\n  const [weekToWeek, setWeekToWeek] = useState([{\n    name: ''\n  }]);\n  const [formData, setFormData] = useState({\n    game: {\n      teamWhite: {\n        Team: 'White',\n        players: [{}],\n        goalie: ''\n      },\n      teamBlack: {\n        Team: 'Black',\n        players: [{}],\n        goalie: ''\n      },\n      irAndOut: {\n        Team: 'irAndOut',\n        players: [{}]\n      },\n      monthToMonth: {\n        Team: 'monthToMonth',\n        players: [{}]\n      },\n      weekToWeek: {\n        Team: 'weekToWeek',\n        players: [{}]\n      }\n    }\n  });\n  const handlePlayerNameChange = (team, playerIndex, newName, playerType) => {\n    setFormData(prevData => {\n      const updatedData = {\n        ...prevData\n      };\n      if (playerType === 'goalie') {\n        updatedData.game[team].goalie = newName;\n      } else {\n        updatedData.game[team].players = updatedData.game[team].players.map((player, index) => {\n          if (index === playerIndex) {\n            player.name = newName;\n          }\n          return player;\n        });\n      }\n      return updatedData;\n    });\n  };\n  const handleAddPlayer = team => {\n    const newPlayer = {\n      name: ''\n    };\n    switch (team) {\n      case 'teamWhite':\n        setTeamWhitePlayers(prevPlayers => [...prevPlayers, newPlayer]);\n        break;\n      case 'irAndOut':\n        setIRAndOut(prevPlayers => [...prevPlayers, newPlayer]);\n        break;\n      case 'monthToMonth':\n        setmonthToMonth(prevPlayers => [...prevPlayers, newPlayer]);\n        break;\n      case 'weekToWeek':\n        setWeekToWeek(prevPlayers => [...prevPlayers, newPlayer]);\n        break;\n      default:\n        setTeamBlackPlayers(prevPlayers => [...prevPlayers, newPlayer]);\n        break;\n    }\n    setFormData(prevData => {\n      const updatedData = {\n        ...prevData\n      };\n      updatedData.game[team].players.push({});\n      return updatedData;\n    });\n  };\n  const removePlayer = (team, playerIndex) => {\n    switch (team) {\n      case 'teamWhite':\n        if (teamWhitePlayers.length === 1) return;\n        setTeamWhitePlayers(prevPlayers => prevPlayers.filter((player, index) => index !== playerIndex));\n        break;\n      case 'irAndOut':\n        if (irAndOut.length === 1) return;\n        setIRAndOut(prevPlayers => prevPlayers.filter((player, index) => index !== playerIndex));\n        break;\n      case 'weekToWeek':\n        if (weekToWeek.length === 1) return;\n        setWeekToWeek(prevPlayers => prevPlayers.filter((player, index) => index !== playerIndex));\n        break;\n      case 'monthToMonth':\n        if (monthToMonth.length === 1) return;\n        setmonthToMonth(prevPlayers => prevPlayers.filter((player, index) => index !== playerIndex));\n        break;\n      default:\n        if (teamBlackPlayers.length === 1) return;\n        setTeamBlackPlayers(prevPlayers => prevPlayers.filter((player, index) => index !== playerIndex));\n        break;\n    }\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    // Add the current date to the form data\n    const currentDate = new Date().toLocaleDateString();\n    const formDataArray = JSON.parse(localStorage.getItem('formDataArray')) || [];\n    const weekNumber = formDataArray.length === 0 ? 1 : formDataArray.length + 1;\n    const updatedFormData = {\n      ...formData,\n      date: currentDate,\n      week: weekNumber\n    };\n    // Save the form data to local storage\n    localStorage.setItem('formDataArray', JSON.stringify(updatedFormData));\n    // Push the form data into the array\n    setFormDataArray(prevDataArray => [...prevDataArray, updatedFormData]);\n  };\n  useEffect(() => {\n    // Load the form data array from local storage\n    const savedFormDataArray = JSON.parse(localStorage.getItem('formDataArray')) || [];\n    if (savedFormDataArray.length > 0) {\n      setFormDataArray(savedFormDataArray);\n    }\n  }, []);\n  console.log(formDataArray);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        textAlign: 'center'\n      },\n      children: \"FNL Roll Call\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'center'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Team White\", ' ', /*#__PURE__*/_jsxDEV(\"span\", {\n            role: \"img\",\n            \"aria-label\": \"White Flag\",\n            children: \"\\uD83C\\uDFF3\\uFE0F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            flexDirection: 'column',\n            gap: '20px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(PlayerInput, {\n            value: teamWhiteGoalie,\n            onChange: e => {\n              setTeamWhiteGoalie(e.target.value);\n              handlePlayerNameChange('teamWhite', null, e.target.value, 'goalie');\n            },\n            placeholder: \"Goalie\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 29\n          }, this), teamWhitePlayers.map((player, index) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n            children: /*#__PURE__*/_jsxDEV(PlayerInput, {\n              value: player.name,\n              onChange: e => {\n                const newPlayers = [...teamWhitePlayers];\n                newPlayers[index].name = e.target.value;\n                setTeamWhitePlayers(newPlayers);\n                handlePlayerNameChange('teamWhite', index, e.target.value, 'player');\n              },\n              placeholder: `Player ${index + 1}`,\n              onAdd: () => handleAddPlayer('teamWhite'),\n              onRemove: () => removePlayer('teamWhite', index)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 37\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 33\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Team Black\", ' ', /*#__PURE__*/_jsxDEV(\"span\", {\n            role: \"img\",\n            \"aria-label\": \"Black Flag\",\n            children: \"\\uD83C\\uDFF4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            flexDirection: 'column',\n            gap: '20px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(PlayerInput, {\n            value: teamBlackGoalie,\n            onChange: e => {\n              setTeamBlackGoalie(e.target.value);\n              handlePlayerNameChange('teamBlack', null, e.target.value, 'goalie');\n            },\n            placeholder: \"Goalie\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 29\n          }, this), teamBlackPlayers.map((player, index) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n            children: /*#__PURE__*/_jsxDEV(PlayerInput, {\n              value: player.name,\n              onChange: e => {\n                const newPlayers = [...teamBlackPlayers];\n                newPlayers[index].name = e.target.value;\n                setTeamBlackPlayers(newPlayers);\n                handlePlayerNameChange('teamBlack', index, e.target.value, 'player');\n              },\n              placeholder: `Player ${index + 1}`,\n              onAdd: () => handleAddPlayer('teamBlack'),\n              onRemove: () => removePlayer('teamBlack', index)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 37\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 33\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            flexDirection: 'row',\n            gap: '20px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex',\n              flexDirection: 'column',\n              gap: '20px',\n              marginTop: '50px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"IR and Out\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 263,\n              columnNumber: 29\n            }, this), irAndOut.map((player, index) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n              children: /*#__PURE__*/_jsxDEV(PlayerInput, {\n                value: player.name,\n                onChange: e => {\n                  const newPlayers = [...irAndOut];\n                  newPlayers[index].name = e.target.value;\n                  setIRAndOut(newPlayers);\n                  handlePlayerNameChange('irAndOut', index, e.target.value, 'player');\n                },\n                placeholder: `Player ${index + 1}`,\n                onAdd: () => handleAddPlayer('irAndOut'),\n                onRemove: () => removePlayer('irAndOut', index)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 266,\n                columnNumber: 37\n              }, this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 265,\n              columnNumber: 33\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex',\n              flexDirection: 'column',\n              gap: '20px',\n              marginTop: '50px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Month to Month\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 295,\n              columnNumber: 29\n            }, this), monthToMonth.map((player, index) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n              children: /*#__PURE__*/_jsxDEV(PlayerInput, {\n                value: player.name,\n                onChange: e => {\n                  const newPlayers = [...teamWhitePlayers];\n                  newPlayers[index].name = e.target.value;\n                  setmonthToMonth(newPlayers);\n                  handlePlayerNameChange('monthToMonth', index, e.target.value, 'player');\n                },\n                placeholder: `Player ${index + 1}`,\n                onAdd: () => handleAddPlayer('monthToMonth'),\n                onRemove: () => removePlayer('monthToMonth', index)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 298,\n                columnNumber: 37\n              }, this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 297,\n              columnNumber: 33\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 287,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex',\n              flexDirection: 'column',\n              gap: '20px',\n              marginTop: '50px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Week to week\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 326,\n              columnNumber: 29\n            }, this), weekToWeek.map((player, index) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n              children: /*#__PURE__*/_jsxDEV(PlayerInput, {\n                value: player.name,\n                onChange: e => {\n                  const newPlayers = [...weekToWeek];\n                  newPlayers[index].name = e.target.value;\n                  setWeekToWeek(newPlayers);\n                  handlePlayerNameChange('weekToWeek', index, e.target.value, 'player');\n                },\n                placeholder: `Player ${index + 1}`,\n                onAdd: () => handleAddPlayer('weekToWeek'),\n                onRemove: () => removePlayer('weekToWeek', index)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 329,\n                columnNumber: 37\n              }, this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 328,\n              columnNumber: 33\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 318,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          title: \"Submit\",\n          type: \"submit\",\n          color: \"#007BFF\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 351,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(MatchResults, {\n      formDataArray: formDataArray\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 354,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_s(Game, \"q9wjtHh6149uY2pzG+3Kz0oni4M=\");\n_c = Game;\nexport default Game;\nvar _c;\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["React","useEffect","useState","Button","MatchResults","PlayerInput","jsxDEV","_jsxDEV","Fragment","_Fragment","Game","_s","formDataArray","setFormDataArray","teamWhiteGoalie","setTeamWhiteGoalie","teamBlackGoalie","setTeamBlackGoalie","teamWhitePlayers","setTeamWhitePlayers","name","teamBlackPlayers","setTeamBlackPlayers","monthToMonth","setmonthToMonth","irAndOut","setIRAndOut","weekToWeek","setWeekToWeek","formData","setFormData","game","teamWhite","Team","players","goalie","teamBlack","handlePlayerNameChange","team","playerIndex","newName","playerType","prevData","updatedData","map","player","index","handleAddPlayer","newPlayer","prevPlayers","push","removePlayer","length","filter","handleSubmit","e","preventDefault","currentDate","Date","toLocaleDateString","JSON","parse","localStorage","getItem","weekNumber","updatedFormData","date","week","setItem","stringify","prevDataArray","savedFormDataArray","console","log","children","style","textAlign","fileName","_jsxFileName","lineNumber","columnNumber","display","justifyContent","onSubmit","role","flexDirection","gap","value","onChange","target","placeholder","newPlayers","onAdd","onRemove","marginTop","title","type","color","_c","$RefreshReg$"],"sources":["/Users/biomacbook/Documents/fnl-web-portal/src/Views/Game.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport Button from '../Atoms/Button/Button';\nimport MatchResults from './MatchResults';\nimport PlayerInput from '../Molecules/PlayerInput/PlayerInput';\n\nconst Game = () => {\n    const [formDataArray, setFormDataArray] = useState([]);\n    const [teamWhiteGoalie, setTeamWhiteGoalie] = useState('');\n    const [teamBlackGoalie, setTeamBlackGoalie] = useState('');\n    const [teamWhitePlayers, setTeamWhitePlayers] = useState([{ name: '' }]);\n    const [teamBlackPlayers, setTeamBlackPlayers] = useState([{ name: '' }]);\n    const [monthToMonth, setmonthToMonth] = useState([{ name: '' }]);\n    const [irAndOut, setIRAndOut] = useState([{ name: '' }]);\n    const [weekToWeek, setWeekToWeek] = useState([{ name: '' }]);\n\n    const [formData, setFormData] = useState({\n        game: {\n            teamWhite: {\n                Team: 'White',\n                players: [{}],\n                goalie: '',\n            },\n            teamBlack: {\n                Team: 'Black',\n                players: [{}],\n                goalie: '',\n            },\n            irAndOut: {\n                Team: 'irAndOut',\n                players: [{}],\n            },\n            monthToMonth: {\n                Team: 'monthToMonth',\n                players: [{}],\n            },\n            weekToWeek: {\n                Team: 'weekToWeek',\n                players: [{}],\n            },\n        },\n    });\n\n    const handlePlayerNameChange = (team, playerIndex, newName, playerType) => {\n        setFormData((prevData) => {\n            const updatedData = { ...prevData };\n            if (playerType === 'goalie') {\n                updatedData.game[team].goalie = newName;\n            } else {\n                updatedData.game[team].players = updatedData.game[team].players.map(\n                    (player, index) => {\n                        if (index === playerIndex) {\n                            player.name = newName;\n                        }\n                        return player;\n                    }\n                );\n            }\n            return updatedData;\n        });\n    };\n\n    const handleAddPlayer = (team) => {\n        const newPlayer = { name: '' };\n        switch (team) {\n            case 'teamWhite':\n                setTeamWhitePlayers((prevPlayers) => [...prevPlayers, newPlayer]);\n                break;\n            case 'irAndOut':\n                setIRAndOut((prevPlayers) => [...prevPlayers, newPlayer]);\n                break;\n            case 'monthToMonth':\n                setmonthToMonth((prevPlayers) => [...prevPlayers, newPlayer]);\n                break;\n            case 'weekToWeek':\n                setWeekToWeek((prevPlayers) => [...prevPlayers, newPlayer]);\n                break;\n            default:\n                setTeamBlackPlayers((prevPlayers) => [...prevPlayers, newPlayer]);\n                break;\n        }\n        setFormData((prevData) => {\n            const updatedData = { ...prevData };\n            updatedData.game[team].players.push({});\n            return updatedData;\n        });\n    };\n    const removePlayer = (team, playerIndex) => {\n        switch (team) {\n            case 'teamWhite':\n                if (teamWhitePlayers.length === 1) return;\n                setTeamWhitePlayers((prevPlayers) =>\n                    prevPlayers.filter((player, index) => index !== playerIndex)\n                );\n                break;\n            case 'irAndOut':\n                if (irAndOut.length === 1) return;\n                setIRAndOut((prevPlayers) =>\n                    prevPlayers.filter((player, index) => index !== playerIndex)\n                );\n                break;\n            case 'weekToWeek':\n                if (weekToWeek.length === 1) return;\n                setWeekToWeek((prevPlayers) =>\n                    prevPlayers.filter((player, index) => index !== playerIndex)\n                );\n                break;\n            case 'monthToMonth':\n                if (monthToMonth.length === 1) return;\n                setmonthToMonth((prevPlayers) =>\n                    prevPlayers.filter((player, index) => index !== playerIndex)\n                );\n                break;\n            default:\n                if (teamBlackPlayers.length === 1) return;\n                setTeamBlackPlayers((prevPlayers) =>\n                    prevPlayers.filter((player, index) => index !== playerIndex)\n                );\n                break;\n        }\n    };\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        // Add the current date to the form data\n        const currentDate = new Date().toLocaleDateString();\n        const formDataArray = JSON.parse(localStorage.getItem('formDataArray')) || [];\n        const weekNumber = formDataArray.length === 0 ? 1 : formDataArray.length + 1;\n        const updatedFormData = {\n            ...formData,\n            date: currentDate,\n            week: weekNumber,\n        };\n        // Save the form data to local storage\n        localStorage.setItem('formDataArray', JSON.stringify(updatedFormData));\n        // Push the form data into the array\n        setFormDataArray((prevDataArray) => [...prevDataArray, updatedFormData]);\n    };\n\n    useEffect(() => {\n        // Load the form data array from local storage\n        const savedFormDataArray = JSON.parse(localStorage.getItem('formDataArray')) || [];\n        if (savedFormDataArray.length > 0) {\n            setFormDataArray(savedFormDataArray);\n        }\n    }, []);\n\n    console.log(formDataArray);\n\n    return (\n        <>\n            <h1 style={{ textAlign: 'center' }}>FNL Roll Call</h1>\n            <div style={{ display: 'flex', justifyContent: 'center' }}>\n                <form onSubmit={handleSubmit}>\n                  \n                    <div>\n                        \n                    </div>\n                        <h3>\n                            Team White{' '}\n                            <span role='img' aria-label='White Flag'>\n                                🏳️\n                            </span>\n                        </h3>\n                        <div style={{ display: 'flex', flexDirection: 'column', gap: '20px' }}>\n                            <PlayerInput\n                                value={teamWhiteGoalie}\n                                onChange={(e) => {\n                                    setTeamWhiteGoalie(e.target.value);\n                                    handlePlayerNameChange(\n                                        'teamWhite',\n                                        null,\n                                        e.target.value,\n                                        'goalie'\n                                    );\n                                }}\n                                placeholder='Goalie'\n                            />\n\n                            {teamWhitePlayers.map((player, index) => (\n                                <React.Fragment key={index}>\n                                    <PlayerInput\n                                        value={player.name}\n                                        onChange={(e) => {\n                                            const newPlayers = [...teamWhitePlayers];\n                                            newPlayers[index].name = e.target.value;\n                                            setTeamWhitePlayers(newPlayers);\n                                            handlePlayerNameChange(\n                                                'teamWhite',\n                                                index,\n                                                e.target.value,\n                                                'player'\n                                            );\n                                        }}\n                                        placeholder={`Player ${index + 1}`}\n                                        onAdd={() => handleAddPlayer('teamWhite')}\n                                        onRemove={() => removePlayer('teamWhite', index)}\n                                    />\n                                </React.Fragment>\n                            ))}\n                        </div>\n                    \n                 \n                        <h3>\n                            Team Black{' '}\n                            <span role='img' aria-label='Black Flag'>\n                                🏴\n                            </span>\n                        </h3>\n                        <div style={{ display: 'flex', flexDirection: 'column', gap: '20px' }}>\n                            <PlayerInput\n                                value={teamBlackGoalie}\n                                onChange={(e) => {\n                                    setTeamBlackGoalie(e.target.value);\n                                    handlePlayerNameChange(\n                                        'teamBlack',\n                                        null,\n                                        e.target.value,\n                                        'goalie'\n                                    );\n                                }}\n                                placeholder='Goalie'\n                            />\n\n                            {teamBlackPlayers.map((player, index) => (\n                                <React.Fragment key={index}>\n                                    <PlayerInput\n                                        value={player.name}\n                                        onChange={(e) => {\n                                            const newPlayers = [...teamBlackPlayers];\n                                            newPlayers[index].name = e.target.value;\n                                            setTeamBlackPlayers(newPlayers);\n                                            handlePlayerNameChange(\n                                                'teamBlack',\n                                                index,\n                                                e.target.value,\n                                                'player'\n                                            );\n                                        }}\n                                        placeholder={`Player ${index + 1}`}\n                                        onAdd={() => handleAddPlayer('teamBlack')}\n                                        onRemove={() => removePlayer('teamBlack', index)}\n                                    />\n                                </React.Fragment>\n                            ))}\n                        </div>\n                    \n\n                    <div\n                        style={{\n                            display: 'flex',\n                            flexDirection: 'row',\n                            gap: '20px',\n                        }}\n                    >\n                        <div\n                            style={{\n                                display: 'flex',\n                                flexDirection: 'column',\n                                gap: '20px',\n                                marginTop: '50px',\n                            }}\n                        >\n                            <h2>IR and Out</h2>\n                            {irAndOut.map((player, index) => (\n                                <React.Fragment key={index}>\n                                    <PlayerInput\n                                        value={player.name}\n                                        onChange={(e) => {\n                                            const newPlayers = [...irAndOut];\n                                            newPlayers[index].name = e.target.value;\n                                            setIRAndOut(newPlayers);\n                                            handlePlayerNameChange(\n                                                'irAndOut',\n                                                index,\n                                                e.target.value,\n                                                'player'\n                                            );\n                                        }}\n                                        placeholder={`Player ${index + 1}`}\n                                        onAdd={() => handleAddPlayer('irAndOut')}\n                                        onRemove={() => removePlayer('irAndOut', index)}\n                                    />\n                                </React.Fragment>\n                            ))}\n                        </div>\n\n                        <div\n                            style={{\n                                display: 'flex',\n                                flexDirection: 'column',\n                                gap: '20px',\n                                marginTop: '50px',\n                            }}\n                        >\n                            <h2>Month to Month</h2>\n                            {monthToMonth.map((player, index) => (\n                                <React.Fragment key={index}>\n                                    <PlayerInput\n                                        value={player.name}\n                                        onChange={(e) => {\n                                            const newPlayers = [...teamWhitePlayers];\n                                            newPlayers[index].name = e.target.value;\n                                            setmonthToMonth(newPlayers);\n                                            handlePlayerNameChange(\n                                                'monthToMonth',\n                                                index,\n                                                e.target.value,\n                                                'player'\n                                            );\n                                        }}\n                                        placeholder={`Player ${index + 1}`}\n                                        onAdd={() => handleAddPlayer('monthToMonth')}\n                                        onRemove={() => removePlayer('monthToMonth', index)}\n                                    />\n                                </React.Fragment>\n                            ))}\n                        </div>\n                        <div\n                            style={{\n                                display: 'flex',\n                                flexDirection: 'column',\n                                gap: '20px',\n                                marginTop: '50px',\n                            }}\n                        >\n                            <h2>Week to week</h2>\n                            {weekToWeek.map((player, index) => (\n                                <React.Fragment key={index}>\n                                    <PlayerInput\n                                        value={player.name}\n                                        onChange={(e) => {\n                                            const newPlayers = [...weekToWeek];\n                                            newPlayers[index].name = e.target.value;\n                                            setWeekToWeek(newPlayers);\n                                            handlePlayerNameChange(\n                                                'weekToWeek',\n                                                index,\n                                                e.target.value,\n                                                'player'\n                                            );\n                                        }}\n                                        placeholder={`Player ${index + 1}`}\n                                        onAdd={() => handleAddPlayer('weekToWeek')}\n                                        onRemove={() => removePlayer('weekToWeek', index)}\n                                    />\n                                </React.Fragment>\n                            ))}\n                        </div>\n                    </div>\n\n                    <Button title='Submit' type='submit' color='#007BFF' />\n                </form>\n            </div>\n            <MatchResults formDataArray={formDataArray} />\n        </>\n    );\n};\n\nexport default Game;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}