{"ast":null,"code":"var _jsxFileName = \"/Users/biomacbook/Documents/fnl-web-portal/client/src/Views/MatchUp.jsx\",\n  _s = $RefreshSig$();\nimport React, { useContext, useEffect, useState } from 'react';\nimport Button from '../Atoms/Button/Button';\nimport InputAndButtons from '../Molecules/InputAndButtons/InputAndButtons';\nimport Input from '../Atoms/Input/Input';\nimport { fnlPlayers } from '../Utils';\nimport Dropdown from '../Molecules/Dropdown/Dropdown';\nimport FormDataContext from '../Context';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst MatchUp = () => {\n  _s();\n  const {\n    setFormDataArray\n  } = useContext(FormDataContext);\n  const [teamWhiteGoalie, setTeamWhiteGoalie] = useState('');\n  const [teamBlackGoalie, setTeamBlackGoalie] = useState('');\n  const [teamWhitePlayers, setTeamWhitePlayers] = useState([{\n    name: ''\n  }]);\n  const [teamBlackPlayers, setTeamBlackPlayers] = useState([{\n    name: ''\n  }]);\n  const [monthToMonth, setmonthToMonth] = useState([{\n    name: ''\n  }]);\n  const [irAndOut, setIRAndOut] = useState([{\n    name: ''\n  }]);\n  const [weekToWeek, setWeekToWeek] = useState([{\n    name: ''\n  }]);\n  const [filteredPlayers, setFilteredPlayers] = useState([]);\n  const [activeField, setActiveField] = useState(null);\n  const [weekNumber, setWeekNumber] = useState(1);\n  const [formData, setFormData] = useState({\n    game: {\n      teamWhite: {\n        Team: 'White',\n        players: [{}],\n        goalie: ''\n      },\n      teamBlack: {\n        Team: 'Black',\n        players: [{}],\n        goalie: ''\n      },\n      irAndOut: {\n        Team: 'irAndOut',\n        players: [{}]\n      },\n      monthToMonth: {\n        Team: 'monthToMonth',\n        players: [{}]\n      },\n      weekToWeek: {\n        Team: 'weekToWeek',\n        players: [{}]\n      }\n    }\n  });\n  const filterPlayersDropdown = name => {\n    const filtered = fnlPlayers.filter(player => player.name.toLowerCase().includes(name));\n    setFilteredPlayers(filtered);\n  };\n  const handlePlayerNameChange = (team, playerIndex, newName, playerType) => {\n    filterPlayersDropdown(newName);\n    setFormData(prevData => {\n      const updatedData = {\n        ...prevData\n      };\n      if (playerType === 'goalie') {\n        updatedData.game[team].goalie = newName;\n      } else {\n        updatedData.game[team].players = updatedData.game[team].players.map((player, index) => {\n          if (index === playerIndex) {\n            player.name = newName;\n          }\n          return player;\n        });\n      }\n      return updatedData;\n    });\n  };\n  const handleAddPlayer = team => {\n    const newPlayer = {\n      name: ''\n    };\n    switch (team) {\n      case 'teamWhite':\n        setTeamWhitePlayers(prevPlayers => [...prevPlayers, newPlayer]);\n        break;\n      case 'irAndOut':\n        setIRAndOut(prevPlayers => [...prevPlayers, newPlayer]);\n        break;\n      case 'monthToMonth':\n        setmonthToMonth(prevPlayers => [...prevPlayers, newPlayer]);\n        break;\n      case 'weekToWeek':\n        setWeekToWeek(prevPlayers => [...prevPlayers, newPlayer]);\n        break;\n      default:\n        setTeamBlackPlayers(prevPlayers => [...prevPlayers, newPlayer]);\n        break;\n    }\n    setFormData(prevData => {\n      const updatedData = {\n        ...prevData\n      };\n      updatedData.game[team].players.push({});\n      return updatedData;\n    });\n  };\n  const removePlayer = (team, playerIndex) => {\n    switch (team) {\n      case 'teamWhite':\n        if (teamWhitePlayers.length === 1) return;\n        setTeamWhitePlayers(prevPlayers => prevPlayers.filter((player, index) => index !== playerIndex));\n        break;\n      case 'irAndOut':\n        if (irAndOut.length === 1) return;\n        setIRAndOut(prevPlayers => prevPlayers.filter((player, index) => index !== playerIndex));\n        break;\n      case 'weekToWeek':\n        if (weekToWeek.length === 1) return;\n        setWeekToWeek(prevPlayers => prevPlayers.filter((player, index) => index !== playerIndex));\n        break;\n      case 'monthToMonth':\n        if (monthToMonth.length === 1) return;\n        setmonthToMonth(prevPlayers => prevPlayers.filter((player, index) => index !== playerIndex));\n        break;\n      default:\n        if (teamBlackPlayers.length === 1) return;\n        setTeamBlackPlayers(prevPlayers => prevPlayers.filter((player, index) => index !== playerIndex));\n        break;\n    }\n  };\n\n  // set the input value to the name of the player selected\n  const handleNameSelect = (name, inputType, playerIndex) => {\n    switch (inputType) {\n      case 'teamWhiteGoalie':\n        setTeamWhiteGoalie(name);\n        handlePlayerNameChange('teamWhite', null, name, 'goalie');\n        setFilteredPlayers([]);\n        break;\n      case 'teamBlackGoalie':\n        setTeamBlackGoalie(name);\n        handlePlayerNameChange('teamBlack', null, name, 'goalie');\n        setFilteredPlayers([]);\n        break;\n      case `teamWhitePlayer-${playerIndex}`:\n        const newTeamWhitePlayers = [...teamWhitePlayers];\n        newTeamWhitePlayers[playerIndex] = {\n          ...newTeamWhitePlayers[playerIndex],\n          name\n        };\n        handlePlayerNameChange('teamWhite', playerIndex, name, 'player');\n        setTeamWhitePlayers(newTeamWhitePlayers);\n        setFilteredPlayers([]);\n        break;\n      case `teamBlackPlayer-${playerIndex}`:\n        const newTeamBlackPlayers = [...teamBlackPlayers];\n        newTeamBlackPlayers[playerIndex] = {\n          ...newTeamBlackPlayers[playerIndex],\n          name\n        };\n        handlePlayerNameChange('teamBlack', playerIndex, name, 'player');\n        setTeamBlackPlayers(newTeamBlackPlayers);\n        setFilteredPlayers([]);\n        break;\n      case `irAndOut-${playerIndex}`:\n        const newIRAndOut = [...irAndOut];\n        newIRAndOut[playerIndex] = {\n          ...newIRAndOut[playerIndex],\n          name\n        };\n        handlePlayerNameChange('irAndOut', playerIndex, name, 'player');\n        setIRAndOut(newIRAndOut);\n        setFilteredPlayers([]);\n        break;\n      case `monthToMonth-${playerIndex}`:\n        const newMonthToMonth = [...monthToMonth];\n        newMonthToMonth[playerIndex] = {\n          ...newMonthToMonth[playerIndex],\n          name\n        };\n        handlePlayerNameChange('monthToMonth', playerIndex, name, 'player');\n        setmonthToMonth(newMonthToMonth);\n        setFilteredPlayers([]);\n        break;\n      case `weekToWeek-${playerIndex}`:\n        const newWeekToWeek = [...weekToWeek];\n        newWeekToWeek[playerIndex] = {\n          ...newWeekToWeek[playerIndex],\n          name\n        };\n        handlePlayerNameChange('weekToWeek', playerIndex, name, 'player');\n        setWeekToWeek(newWeekToWeek);\n        setFilteredPlayers([]);\n        break;\n      default:\n        break;\n    }\n  };\n  const handleFocus = (fieldName, indexFound) => {\n    let fieldIndex;\n    switch (fieldName) {\n      case 'teamWhiteGoalie':\n      case 'teamBlackGoalie':\n        setActiveField(fieldName);\n        break;\n      case 'teamWhitePlayer':\n        fieldIndex = `teamWhitePlayer-${indexFound}`;\n        setActiveField(fieldIndex);\n        break;\n      case 'teamBlackPlayer':\n        fieldIndex = `teamBlackPlayer-${indexFound}`;\n        setActiveField(fieldIndex);\n        break;\n      case 'irAndOut':\n        fieldIndex = `irAndOut-${indexFound}`;\n        setActiveField(fieldIndex);\n        break;\n      case 'monthToMonth':\n        fieldIndex = `monthToMonth-${indexFound}`;\n        setActiveField(fieldIndex);\n        break;\n      case 'weekToWeek':\n        fieldIndex = `weekToWeek-${indexFound}`;\n        setActiveField(fieldIndex);\n        break;\n      default:\n        break;\n    }\n  };\n  const handleBlur = () => {\n    setActiveField(null);\n  };\n  const handleSubmit = e => {\n    const url = 'https://example.com/api/endpoint'; // Replace with your API endpoint\n    const data = {\n      key: 'value'\n    }; // Replace with your POST data\n\n    fetch(url, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(data)\n    }).then(response => {\n      if (response.ok) {\n        return response.json();\n      } else {\n        throw new Error('POST request failed');\n      }\n    }).then(responseData => {\n      setFormDataArray(prevDataArray => [...prevDataArray, responseData]);\n    }).catch(error => {\n      console.error('Error:', error);\n    });\n    // e.preventDefault();\n    // let newWeekNumber = weekNumber >= 1 ? weekNumber + 1 : 1;\n    // setWeekNumber(newWeekNumber);\n    // localStorage.setItem('weekNumber', newWeekNumber.toString());\n\n    // // Add the current date to the form data\n    // const currentDate = new Date().toLocaleDateString();\n    // console.log(weekNumber)\n    // const updatedFormData = {\n    //     ...formData,\n    //     date: currentDate,\n    //     week: weekNumber,\n    // };\n    // // Save the form data to local storage\n    // localStorage.setItem('formDataArray', JSON.stringify(updatedFormData));\n    // Push the form data into the array\n    setFormDataArray(prevDataArray => [...prevDataArray, updatedFormData]);\n  };\n  useEffect(() => {\n    const savedWeekNumber = localStorage.getItem('weekNumber');\n    if (savedWeekNumber) {\n      setWeekNumber(Number(savedWeekNumber));\n    }\n  }, []);\n  useEffect(() => {\n    // Load the form data array from local storage\n    const savedFormDataArray = JSON.parse(localStorage.getItem('formDataArray')) || [];\n    if (savedFormDataArray.length > 0) {\n      setFormDataArray(savedFormDataArray);\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        textAlign: 'center'\n      },\n      children: \"FNL Roll Call\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'center'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            flexDirection: 'row',\n            gap: '20px',\n            justifyContent: 'space-around'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex',\n              flexDirection: 'column',\n              gap: '20px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: [\"Team White\", ' ', /*#__PURE__*/_jsxDEV(\"span\", {\n                role: \"img\",\n                \"aria-label\": \"White Flag\",\n                children: \"\\uD83C\\uDFF3\\uFE0F\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 305,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 303,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              value: teamWhiteGoalie,\n              onChange: e => {\n                setTeamWhiteGoalie(e.target.value);\n                handlePlayerNameChange('teamWhite', null, e.target.value, 'goalie');\n              },\n              placeholder: \"Goalie\",\n              onFocus: () => handleFocus('teamWhiteGoalie'),\n              onBlur: handleBlur\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 309,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n              data: filteredPlayers,\n              handleNameSelect: handleNameSelect,\n              index: null,\n              nameType: 'teamWhiteGoalie',\n              activeField: activeField\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 325,\n              columnNumber: 29\n            }, this), teamWhitePlayers.map((player, index) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(InputAndButtons, {\n                value: player.name,\n                onChange: e => {\n                  const newPlayers = [...teamWhitePlayers];\n                  newPlayers[index].name = e.target.value;\n                  setTeamWhitePlayers(newPlayers);\n                  handlePlayerNameChange('teamWhite', index, e.target.value, 'player');\n                },\n                placeholder: `Player ${index + 1}`,\n                onAdd: () => handleAddPlayer('teamWhite'),\n                onRemove: () => removePlayer('teamWhite', index),\n                onFocus: () => handleFocus('teamWhitePlayer', index),\n                onBlur: handleBlur\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 335,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n                data: filteredPlayers,\n                handleNameSelect: handleNameSelect,\n                index: index,\n                nameType: `teamWhitePlayer-${index}`,\n                activeField: activeField\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 355,\n                columnNumber: 37\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 334,\n              columnNumber: 33\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 302,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex',\n              flexDirection: 'column',\n              gap: '20px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: [\"Team Black\", ' ', /*#__PURE__*/_jsxDEV(\"span\", {\n                role: \"img\",\n                \"aria-label\": \"Black Flag\",\n                children: \"\\uD83C\\uDFF4\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 369,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 367,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              value: teamBlackGoalie,\n              onChange: e => {\n                setTeamBlackGoalie(e.target.value);\n                handlePlayerNameChange('teamBlack', null, e.target.value, 'goalie');\n              },\n              placeholder: \"Goalie\",\n              onFocus: () => handleFocus('teamBlackGoalie'),\n              onBlur: handleBlur\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 373,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n              data: filteredPlayers,\n              handleNameSelect: handleNameSelect,\n              index: null,\n              nameType: 'teamBlackGoalie',\n              activeField: activeField\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 389,\n              columnNumber: 29\n            }, this), teamBlackPlayers.map((player, index) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(InputAndButtons, {\n                value: player.name,\n                onChange: e => {\n                  const newPlayers = [...teamBlackPlayers];\n                  newPlayers[index].name = e.target.value;\n                  setTeamBlackPlayers(newPlayers);\n                  handlePlayerNameChange('teamBlack', index, e.target.value, 'player');\n                },\n                placeholder: `Player ${index + 1}`,\n                onAdd: () => handleAddPlayer('teamBlack'),\n                onRemove: () => removePlayer('teamBlack', index),\n                onFocus: () => handleFocus('teamBlackPlayer', index),\n                onBlur: handleBlur\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 399,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n                data: filteredPlayers,\n                handleNameSelect: handleNameSelect,\n                index: index,\n                nameType: `teamBlackPlayer-${index}`,\n                activeField: activeField\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 419,\n                columnNumber: 37\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 398,\n              columnNumber: 33\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 366,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            flexDirection: 'row',\n            gap: '20px',\n            justifyContent: 'center'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex',\n              flexDirection: 'column',\n              gap: '20px',\n              marginTop: '50px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"IR/Out\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 447,\n              columnNumber: 29\n            }, this), irAndOut.map((player, index) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(InputAndButtons, {\n                value: player.name,\n                onChange: e => {\n                  const newPlayers = [...irAndOut];\n                  newPlayers[index].name = e.target.value;\n                  setIRAndOut(newPlayers);\n                  handlePlayerNameChange('irAndOut', index, e.target.value, 'player');\n                },\n                placeholder: `Player ${index + 1}`,\n                onAdd: () => handleAddPlayer('irAndOut'),\n                onRemove: () => removePlayer('irAndOut', index),\n                onFocus: () => handleFocus('irAndOut', index),\n                onBlur: handleBlur\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 450,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n                data: filteredPlayers,\n                handleNameSelect: handleNameSelect,\n                index: index,\n                activeField: activeField,\n                nameType: `irAndOut-${index}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 469,\n                columnNumber: 37\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 449,\n              columnNumber: 33\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 439,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex',\n              flexDirection: 'column',\n              gap: '20px',\n              marginTop: '50px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Month to Month\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 488,\n              columnNumber: 29\n            }, this), monthToMonth.map((player, index) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(InputAndButtons, {\n                value: player.name,\n                onChange: e => {\n                  const newPlayers = [...monthToMonth];\n                  newPlayers[index].name = e.target.value;\n                  setmonthToMonth(newPlayers);\n                  handlePlayerNameChange('monthToMonth', index, e.target.value, 'player');\n                },\n                placeholder: `Player ${index + 1}`,\n                onAdd: () => handleAddPlayer('monthToMonth'),\n                onRemove: () => removePlayer('monthToMonth', index),\n                onFocus: () => handleFocus('monthToMonth', index),\n                onBlur: handleBlur\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 491,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n                data: filteredPlayers,\n                handleNameSelect: handleNameSelect,\n                index: index,\n                nameType: `monthToMonth-${index}`,\n                activeField: activeField\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 510,\n                columnNumber: 37\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 490,\n              columnNumber: 33\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 480,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex',\n              flexDirection: 'column',\n              gap: '20px',\n              marginTop: '50px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Week to week\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 528,\n              columnNumber: 29\n            }, this), weekToWeek.map((player, index) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(InputAndButtons, {\n                value: player.name,\n                onChange: e => {\n                  const newPlayers = [...weekToWeek];\n                  newPlayers[index].name = e.target.value;\n                  setWeekToWeek(newPlayers);\n                  handlePlayerNameChange('weekToWeek', index, e.target.value, 'player');\n                },\n                placeholder: `Player ${index + 1}`,\n                onAdd: () => handleAddPlayer('weekToWeek'),\n                onRemove: () => removePlayer('weekToWeek', index),\n                onFocus: () => handleFocus('weekToWeek', index),\n                onBlur: handleBlur\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 531,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n                data: filteredPlayers,\n                handleNameSelect: handleNameSelect,\n                index: index,\n                nameType: `weekToWeek-${index}`,\n                activeField: activeField\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 550,\n                columnNumber: 37\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 530,\n              columnNumber: 33\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 520,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 431,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            marginTop: '50px'\n          },\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            title: \"Submit\",\n            type: \"submit\",\n            color: \"#2196f3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 562,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 561,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_s(MatchUp, \"poETaKZVwXxiFAyKBBemxL5kmrM=\");\n_c = MatchUp;\nexport default MatchUp;\nvar _c;\n$RefreshReg$(_c, \"MatchUp\");","map":{"version":3,"names":["React","useContext","useEffect","useState","Button","InputAndButtons","Input","fnlPlayers","Dropdown","FormDataContext","jsxDEV","_jsxDEV","Fragment","_Fragment","MatchUp","_s","setFormDataArray","teamWhiteGoalie","setTeamWhiteGoalie","teamBlackGoalie","setTeamBlackGoalie","teamWhitePlayers","setTeamWhitePlayers","name","teamBlackPlayers","setTeamBlackPlayers","monthToMonth","setmonthToMonth","irAndOut","setIRAndOut","weekToWeek","setWeekToWeek","filteredPlayers","setFilteredPlayers","activeField","setActiveField","weekNumber","setWeekNumber","formData","setFormData","game","teamWhite","Team","players","goalie","teamBlack","filterPlayersDropdown","filtered","filter","player","toLowerCase","includes","handlePlayerNameChange","team","playerIndex","newName","playerType","prevData","updatedData","map","index","handleAddPlayer","newPlayer","prevPlayers","push","removePlayer","length","handleNameSelect","inputType","newTeamWhitePlayers","newTeamBlackPlayers","newIRAndOut","newMonthToMonth","newWeekToWeek","handleFocus","fieldName","indexFound","fieldIndex","handleBlur","handleSubmit","e","url","data","key","fetch","method","headers","body","JSON","stringify","then","response","ok","json","Error","responseData","prevDataArray","catch","error","console","updatedFormData","savedWeekNumber","localStorage","getItem","Number","savedFormDataArray","parse","children","style","textAlign","fileName","_jsxFileName","lineNumber","columnNumber","display","justifyContent","onSubmit","flexDirection","gap","role","value","onChange","target","placeholder","onFocus","onBlur","nameType","newPlayers","onAdd","onRemove","marginTop","title","type","color","_c","$RefreshReg$"],"sources":["/Users/biomacbook/Documents/fnl-web-portal/client/src/Views/MatchUp.jsx"],"sourcesContent":["import React, { useContext, useEffect, useState } from 'react';\nimport Button from '../Atoms/Button/Button';\nimport InputAndButtons from '../Molecules/InputAndButtons/InputAndButtons';\nimport Input from '../Atoms/Input/Input';\nimport { fnlPlayers } from '../Utils';\nimport Dropdown from '../Molecules/Dropdown/Dropdown';\nimport FormDataContext from '../Context';\n\nconst MatchUp = () => {\n    const {setFormDataArray } = useContext(FormDataContext);\n    const [teamWhiteGoalie, setTeamWhiteGoalie] = useState('');\n    const [teamBlackGoalie, setTeamBlackGoalie] = useState('');\n    const [teamWhitePlayers, setTeamWhitePlayers] = useState([{ name: '' }]);\n    const [teamBlackPlayers, setTeamBlackPlayers] = useState([{ name: '' }]);\n    const [monthToMonth, setmonthToMonth] = useState([{ name: '' }]);\n    const [irAndOut, setIRAndOut] = useState([{ name: '' }]);\n    const [weekToWeek, setWeekToWeek] = useState([{ name: '' }]);\n    const [filteredPlayers, setFilteredPlayers] = useState([]);\n    const [activeField, setActiveField] = useState(null);\n    const [weekNumber, setWeekNumber] = useState(1);\n    const [formData, setFormData] = useState({\n        game: {\n            teamWhite: {\n                Team: 'White',\n                players: [{}],\n                goalie: '',\n            },\n            teamBlack: {\n                Team: 'Black',\n                players: [{}],\n                goalie: '',\n            },\n            irAndOut: {\n                Team: 'irAndOut',\n                players: [{}],\n            },\n            monthToMonth: {\n                Team: 'monthToMonth',\n                players: [{}],\n            },\n            weekToWeek: {\n                Team: 'weekToWeek',\n                players: [{}],\n            },\n        },\n    });\n    const filterPlayersDropdown = (name) => {\n        const filtered = fnlPlayers.filter((player) => player.name.toLowerCase().includes(name));\n        setFilteredPlayers(filtered);\n    };\n\n    const handlePlayerNameChange = (team, playerIndex, newName, playerType) => {\n        filterPlayersDropdown(newName);\n        setFormData((prevData) => {\n            const updatedData = { ...prevData };\n            if (playerType === 'goalie') {\n                updatedData.game[team].goalie = newName;\n            } else {\n                updatedData.game[team].players = updatedData.game[team].players.map(\n                    (player, index) => {\n                        if (index === playerIndex) {\n                            player.name = newName;\n                        }\n                        return player;\n                    }\n                );\n            }\n            return updatedData;\n        });\n    };\n\n    const handleAddPlayer = (team) => {\n        const newPlayer = { name: '' };\n        switch (team) {\n            case 'teamWhite':\n                setTeamWhitePlayers((prevPlayers) => [...prevPlayers, newPlayer]);\n                break;\n            case 'irAndOut':\n                setIRAndOut((prevPlayers) => [...prevPlayers, newPlayer]);\n                break;\n            case 'monthToMonth':\n                setmonthToMonth((prevPlayers) => [...prevPlayers, newPlayer]);\n                break;\n            case 'weekToWeek':\n                setWeekToWeek((prevPlayers) => [...prevPlayers, newPlayer]);\n                break;\n            default:\n                setTeamBlackPlayers((prevPlayers) => [...prevPlayers, newPlayer]);\n                break;\n        }\n        setFormData((prevData) => {\n            const updatedData = { ...prevData };\n            updatedData.game[team].players.push({});\n            return updatedData;\n        });\n    };\n    const removePlayer = (team, playerIndex) => {\n        switch (team) {\n            case 'teamWhite':\n                if (teamWhitePlayers.length === 1) return;\n                setTeamWhitePlayers((prevPlayers) =>\n                    prevPlayers.filter((player, index) => index !== playerIndex)\n                );\n                break;\n            case 'irAndOut':\n                if (irAndOut.length === 1) return;\n                setIRAndOut((prevPlayers) =>\n                    prevPlayers.filter((player, index) => index !== playerIndex)\n                );\n                break;\n            case 'weekToWeek':\n                if (weekToWeek.length === 1) return;\n                setWeekToWeek((prevPlayers) =>\n                    prevPlayers.filter((player, index) => index !== playerIndex)\n                );\n                break;\n            case 'monthToMonth':\n                if (monthToMonth.length === 1) return;\n                setmonthToMonth((prevPlayers) =>\n                    prevPlayers.filter((player, index) => index !== playerIndex)\n                );\n                break;\n            default:\n                if (teamBlackPlayers.length === 1) return;\n                setTeamBlackPlayers((prevPlayers) =>\n                    prevPlayers.filter((player, index) => index !== playerIndex)\n                );\n                break;\n        }\n    };\n\n\n    // set the input value to the name of the player selected\n    const handleNameSelect = (name, inputType, playerIndex) => {\n        switch (inputType) {\n            case 'teamWhiteGoalie':\n                setTeamWhiteGoalie(name);\n                handlePlayerNameChange('teamWhite', null, name, 'goalie');\n                setFilteredPlayers([]);\n                break;\n\n            case 'teamBlackGoalie':\n                setTeamBlackGoalie(name);\n                handlePlayerNameChange('teamBlack', null, name, 'goalie');\n                setFilteredPlayers([]);\n                break;\n\n            case `teamWhitePlayer-${playerIndex}`:\n                const newTeamWhitePlayers = [...teamWhitePlayers];\n                newTeamWhitePlayers[playerIndex] = { ...newTeamWhitePlayers[playerIndex], name };\n                handlePlayerNameChange('teamWhite', playerIndex, name, 'player');\n                setTeamWhitePlayers(newTeamWhitePlayers);\n                setFilteredPlayers([]);\n                break;\n\n            case `teamBlackPlayer-${playerIndex}`:\n                const newTeamBlackPlayers = [...teamBlackPlayers];\n                newTeamBlackPlayers[playerIndex] = { ...newTeamBlackPlayers[playerIndex], name };\n                handlePlayerNameChange('teamBlack', playerIndex, name, 'player');\n                setTeamBlackPlayers(newTeamBlackPlayers);\n                setFilteredPlayers([]);\n                break;\n\n            case `irAndOut-${playerIndex}`:\n                const newIRAndOut = [...irAndOut];\n                newIRAndOut[playerIndex] = { ...newIRAndOut[playerIndex], name };\n                handlePlayerNameChange('irAndOut', playerIndex, name, 'player');\n                setIRAndOut(newIRAndOut);\n                setFilteredPlayers([]);\n                break;\n\n            case `monthToMonth-${playerIndex}` :\n                const newMonthToMonth = [...monthToMonth];\n                newMonthToMonth[playerIndex] = { ...newMonthToMonth[playerIndex], name };\n                handlePlayerNameChange('monthToMonth', playerIndex, name, 'player');\n                setmonthToMonth(newMonthToMonth);\n                setFilteredPlayers([]);\n\n                break;\n            case `weekToWeek-${playerIndex}`:\n                const newWeekToWeek = [...weekToWeek];\n                newWeekToWeek[playerIndex] = { ...newWeekToWeek[playerIndex], name };\n                handlePlayerNameChange('weekToWeek', playerIndex, name, 'player');\n                setWeekToWeek(newWeekToWeek);\n                setFilteredPlayers([]);\n                break;\n            default:\n                break;\n        }\n    };\n\n    const handleFocus = (fieldName, indexFound) => {\n        let fieldIndex;\n\n        switch (fieldName) {\n            case 'teamWhiteGoalie':\n            case 'teamBlackGoalie':\n                setActiveField(fieldName);\n                break;\n            case 'teamWhitePlayer':\n                fieldIndex = `teamWhitePlayer-${indexFound}`;\n                setActiveField(fieldIndex);\n                break;\n            case 'teamBlackPlayer':\n                fieldIndex = `teamBlackPlayer-${indexFound}`;\n                setActiveField(fieldIndex);\n                break;\n            case 'irAndOut':\n                fieldIndex = `irAndOut-${indexFound}`;\n                setActiveField(fieldIndex);\n                break;\n            case 'monthToMonth':\n                fieldIndex = `monthToMonth-${indexFound}`;\n                setActiveField(fieldIndex);\n                break;\n            case 'weekToWeek':\n                fieldIndex = `weekToWeek-${indexFound}`;\n                setActiveField(fieldIndex);\n                break;\n            default:\n                break;\n        }\n    };\n\n    const handleBlur = () => {\n        setActiveField(null);\n    };\n\n    const handleSubmit = (e) => {\n\n\n        const url = 'https://example.com/api/endpoint'; // Replace with your API endpoint\n        const data = { key: 'value' }; // Replace with your POST data\n\n        fetch(url, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(data),\n        })\n            .then((response) => {\n                if (response.ok) {\n                    return response.json();\n                } else {\n                    throw new Error('POST request failed');\n                }\n            })\n            .then((responseData) => {\n                setFormDataArray((prevDataArray) => [...prevDataArray, responseData])\n            })\n            .catch((error) => {\n                console.error('Error:', error);\n            });\n        // e.preventDefault();\n        // let newWeekNumber = weekNumber >= 1 ? weekNumber + 1 : 1;\n        // setWeekNumber(newWeekNumber);\n        // localStorage.setItem('weekNumber', newWeekNumber.toString());\n        \n        // // Add the current date to the form data\n        // const currentDate = new Date().toLocaleDateString();\n        // console.log(weekNumber)\n        // const updatedFormData = {\n        //     ...formData,\n        //     date: currentDate,\n        //     week: weekNumber,\n        // };\n        // // Save the form data to local storage\n        // localStorage.setItem('formDataArray', JSON.stringify(updatedFormData));\n        // Push the form data into the array\n        setFormDataArray((prevDataArray) => [...prevDataArray, updatedFormData]);\n    };\n    useEffect(() => {\n        const savedWeekNumber = localStorage.getItem('weekNumber');\n        if (savedWeekNumber) {\n            setWeekNumber(Number(savedWeekNumber));\n        }\n    }, []);\n    \n\n    useEffect(() => {\n        // Load the form data array from local storage\n        const savedFormDataArray = JSON.parse(localStorage.getItem('formDataArray')) || [];\n        if (savedFormDataArray.length > 0) {\n            setFormDataArray(savedFormDataArray);\n        }\n    }, );\n\n    return (\n        <>\n            <h1 style={{ textAlign: 'center' }}>FNL Roll Call</h1>\n            <div style={{ display: 'flex', justifyContent: 'center' }}>\n                <form onSubmit={handleSubmit}>\n                    <div\n                        style={{\n                            display: 'flex',\n                            flexDirection: 'row',\n                            gap: '20px',\n                            justifyContent: 'space-around',\n                        }}\n                    >\n                        <div style={{ display: 'flex', flexDirection: 'column', gap: '20px' }}>\n                            <h3>\n                                Team White{' '}\n                                <span role='img' aria-label='White Flag'>\n                                    🏳️\n                                </span>\n                            </h3>\n                            <Input\n                                value={teamWhiteGoalie}\n                                onChange={(e) => {\n                                    setTeamWhiteGoalie(e.target.value);\n                                    handlePlayerNameChange(\n                                        'teamWhite',\n                                        null,\n                                        e.target.value,\n                                        'goalie'\n                                    );\n                                }}\n                                placeholder='Goalie'\n                                onFocus={() => handleFocus('teamWhiteGoalie')}\n                                onBlur={handleBlur}\n                            />\n                            {/* dropdown */}\n                            <Dropdown\n                                data={filteredPlayers}\n                                handleNameSelect={handleNameSelect}\n                                index={null}\n                                nameType={'teamWhiteGoalie'}\n                                activeField={activeField}\n                            />\n\n                            {teamWhitePlayers.map((player, index) => (\n                                <React.Fragment key={index}>\n                                    <InputAndButtons\n                                        value={player.name}\n                                        onChange={(e) => {\n                                            const newPlayers = [...teamWhitePlayers];\n                                            newPlayers[index].name = e.target.value;\n                                            setTeamWhitePlayers(newPlayers);\n                                            handlePlayerNameChange(\n                                                'teamWhite',\n                                                index,\n                                                e.target.value,\n                                                'player'\n                                            );\n                                        }}\n                                        placeholder={`Player ${index + 1}`}\n                                        onAdd={() => handleAddPlayer('teamWhite')}\n                                        onRemove={() => removePlayer('teamWhite', index)}\n                                        onFocus={() => handleFocus('teamWhitePlayer', index)}\n                                        onBlur={handleBlur}\n                                    />\n                                    {/* dropdown */}\n                                    <Dropdown\n                                        data={filteredPlayers}\n                                        handleNameSelect={handleNameSelect}\n                                        index={index}\n                                        nameType={`teamWhitePlayer-${index}`}\n                                        activeField={activeField}\n                                    />\n                                </React.Fragment>\n                            ))}\n                        </div>\n\n                        <div style={{ display: 'flex', flexDirection: 'column', gap: '20px' }}>\n                            <h3>\n                                Team Black{' '}\n                                <span role='img' aria-label='Black Flag'>\n                                    🏴\n                                </span>\n                            </h3>\n                            <Input\n                                value={teamBlackGoalie}\n                                onChange={(e) => {\n                                    setTeamBlackGoalie(e.target.value);\n                                    handlePlayerNameChange(\n                                        'teamBlack',\n                                        null,\n                                        e.target.value,\n                                        'goalie'\n                                    );\n                                }}\n                                placeholder='Goalie'\n                                onFocus={() => handleFocus('teamBlackGoalie')}\n                                onBlur={handleBlur}\n                            />\n                            {/* dropdown */}\n                            <Dropdown\n                                data={filteredPlayers}\n                                handleNameSelect={handleNameSelect}\n                                index={null}\n                                nameType={'teamBlackGoalie'}\n                                activeField={activeField}\n                            />\n\n                            {teamBlackPlayers.map((player, index) => (\n                                <React.Fragment key={index}>\n                                    <InputAndButtons\n                                        value={player.name}\n                                        onChange={(e) => {\n                                            const newPlayers = [...teamBlackPlayers];\n                                            newPlayers[index].name = e.target.value;\n                                            setTeamBlackPlayers(newPlayers);\n                                            handlePlayerNameChange(\n                                                'teamBlack',\n                                                index,\n                                                e.target.value,\n                                                'player'\n                                            );\n                                        }}\n                                        placeholder={`Player ${index + 1}`}\n                                        onAdd={() => handleAddPlayer('teamBlack')}\n                                        onRemove={() => removePlayer('teamBlack', index)}\n                                        onFocus={() => handleFocus('teamBlackPlayer', index)}\n                                        onBlur={handleBlur}\n                                    />\n                                    {/* dropdown */}\n                                    <Dropdown\n                                        data={filteredPlayers}\n                                        handleNameSelect={handleNameSelect}\n                                        index={index}\n                                        nameType={`teamBlackPlayer-${index}`}\n                                        activeField={activeField}\n                                    />\n                                </React.Fragment>\n                            ))}\n                        </div>\n                    </div>\n\n                    <div\n                        style={{\n                            display: 'flex',\n                            flexDirection: 'row',\n                            gap: '20px',\n                            justifyContent: 'center',\n                        }}\n                    >\n                        <div\n                            style={{\n                                display: 'flex',\n                                flexDirection: 'column',\n                                gap: '20px',\n                                marginTop: '50px',\n                            }}\n                        >\n                            <h3>IR/Out</h3>\n                            {irAndOut.map((player, index) => (\n                                <React.Fragment key={index}>\n                                    <InputAndButtons\n                                        value={player.name}\n                                        onChange={(e) => {\n                                            const newPlayers = [...irAndOut];\n                                            newPlayers[index].name = e.target.value;\n                                            setIRAndOut(newPlayers);\n                                            handlePlayerNameChange(\n                                                'irAndOut',\n                                                index,\n                                                e.target.value,\n                                                'player'\n                                            );\n                                        }}\n                                        placeholder={`Player ${index + 1}`}\n                                        onAdd={() => handleAddPlayer('irAndOut')}\n                                        onRemove={() => removePlayer('irAndOut', index)}\n                                        onFocus={() => handleFocus('irAndOut', index)}\n                                        onBlur={handleBlur}\n                                    />\n                                    <Dropdown\n                                        data={filteredPlayers}\n                                        handleNameSelect={handleNameSelect}\n                                        index={index}\n                                        activeField={activeField}\n                                        nameType={`irAndOut-${index}`}\n                                    />\n                                </React.Fragment>\n                            ))}\n                        </div>\n\n                        <div\n                            style={{\n                                display: 'flex',\n                                flexDirection: 'column',\n                                gap: '20px',\n                                marginTop: '50px',\n                            }}\n                        >\n                            <h3>Month to Month</h3>\n                            {monthToMonth.map((player, index) => (\n                                <React.Fragment key={index}>\n                                    <InputAndButtons\n                                        value={player.name}\n                                        onChange={(e) => {\n                                            const newPlayers = [...monthToMonth];\n                                            newPlayers[index].name = e.target.value;\n                                            setmonthToMonth(newPlayers);\n                                            handlePlayerNameChange(\n                                                'monthToMonth',\n                                                index,\n                                                e.target.value,\n                                                'player'\n                                            );\n                                        }}\n                                        placeholder={`Player ${index + 1}`}\n                                        onAdd={() => handleAddPlayer('monthToMonth')}\n                                        onRemove={() => removePlayer('monthToMonth', index)}\n                                        onFocus={() => handleFocus('monthToMonth', index)}\n                                        onBlur={handleBlur}\n                                    />\n                                    <Dropdown\n                                        data={filteredPlayers}\n                                        handleNameSelect={handleNameSelect}\n                                        index={index}\n                                        nameType={`monthToMonth-${index}`}\n                                        activeField={activeField}\n                                    />\n                                </React.Fragment>\n                            ))}\n                        </div>\n                        <div\n                            style={{\n                                display: 'flex',\n                                flexDirection: 'column',\n                                gap: '20px',\n                                marginTop: '50px',\n                            }}\n                        >\n                            <h3>Week to week</h3>\n                            {weekToWeek.map((player, index) => (\n                                <React.Fragment key={index}>\n                                    <InputAndButtons\n                                        value={player.name}\n                                        onChange={(e) => {\n                                            const newPlayers = [...weekToWeek];\n                                            newPlayers[index].name = e.target.value;\n                                            setWeekToWeek(newPlayers);\n                                            handlePlayerNameChange(\n                                                'weekToWeek',\n                                                index,\n                                                e.target.value,\n                                                'player'\n                                            );\n                                        }}\n                                        placeholder={`Player ${index + 1}`}\n                                        onAdd={() => handleAddPlayer('weekToWeek')}\n                                        onRemove={() => removePlayer('weekToWeek', index)}\n                                        onFocus={() => handleFocus('weekToWeek', index)}\n                                        onBlur={handleBlur}\n                                    />\n                                    <Dropdown\n                                        data={filteredPlayers}\n                                        handleNameSelect={handleNameSelect}\n                                        index={index}\n                                        nameType={`weekToWeek-${index}`}\n                                        activeField={activeField}\n                                    />\n                                </React.Fragment>\n                            ))}\n                        </div>\n                    </div>\n                    <div style={{ display: 'flex', marginTop: '50px' }}>\n                        <Button title='Submit' type='submit' color='#2196f3' />\n                    </div>\n                </form>\n            </div>\n        </>\n    );\n};\n\nexport default MatchUp;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}