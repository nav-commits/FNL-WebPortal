{"ast":null,"code":"var _jsxFileName = \"/Users/biomacbook/Documents/fnl-web-portal/src/Views/Game.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport Button from '../Atoms/Button/Button';\nimport MatchResults from './MatchResults';\nimport Input from '../Atoms/Input/Input';\nimport { fnlPlayers } from '../Utils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Game = () => {\n  _s();\n  const [formDataArray, setFormDataArray] = useState([]);\n  const [teamWhiteGoalie, setTeamWhiteGoalie] = useState('');\n  const [teamBlackGoalie, setTeamBlackGoalie] = useState('');\n  const [teamWhitePlayers, setTeamWhitePlayers] = useState([{\n    name: ''\n  }]);\n  const [teamBlackPlayers, setTeamBlackPlayers] = useState([{\n    name: ''\n  }]);\n  const [monthToMonth, setmonthToMonth] = useState([{\n    name: ''\n  }]);\n  const [irAndOut, setIRAndOut] = useState([{\n    name: ''\n  }]);\n  const [weekToWeek, setWeekToWeek] = useState([{\n    name: ''\n  }]);\n  const [players, setPlayers] = useState([]);\n  const [selectedPlayer, setSelectedPlayer] = useState('');\n  const [formData, setFormData] = useState({\n    game: {\n      teamWhite: {\n        Team: 'White',\n        players: [{}],\n        goalie: ''\n      },\n      teamBlack: {\n        Team: 'Black',\n        players: [{}],\n        goalie: ''\n      },\n      irAndOut: {\n        Team: 'irAndOut',\n        players: [{}]\n      },\n      monthToMonth: {\n        Team: 'monthToMonth',\n        players: [{}]\n      },\n      weekToWeek: {\n        Team: 'weekToWeek',\n        players: [{}]\n      }\n    }\n  });\n  const handlePlayerNameChange = (team, playerIndex, newName, playerType) => {\n    setFormData(prevData => {\n      const updatedData = {\n        ...prevData\n      };\n      if (playerType === 'goalie') {\n        updatedData.game[team].goalie = newName;\n      } else {\n        updatedData.game[team].players = updatedData.game[team].players.map((player, index) => {\n          if (index === playerIndex) {\n            player.name = newName;\n          }\n          return player;\n        });\n      }\n      return updatedData;\n    });\n    const filteredPlayers = fnlPlayers.filter(player => player.name.toLowerCase().includes(newName.toLowerCase()));\n    setPlayers(filteredPlayers);\n  };\n  const handleAddPlayer = team => {\n    const newPlayer = {\n      name: ''\n    };\n    switch (team) {\n      case 'teamWhite':\n        setTeamWhitePlayers(prevPlayers => [...prevPlayers, newPlayer]);\n        break;\n      case 'irAndOut':\n        setIRAndOut(prevPlayers => [...prevPlayers, newPlayer]);\n        break;\n      case 'monthToMonth':\n        setmonthToMonth(prevPlayers => [...prevPlayers, newPlayer]);\n        break;\n      case 'weekToWeek':\n        setWeekToWeek(prevPlayers => [...prevPlayers, newPlayer]);\n        break;\n      default:\n        setTeamBlackPlayers(prevPlayers => [...prevPlayers, newPlayer]);\n        break;\n    }\n    setFormData(prevData => {\n      const updatedData = {\n        ...prevData\n      };\n      updatedData.game[team].players.push({});\n      return updatedData;\n    });\n  };\n  const removePlayer = (team, playerIndex) => {\n    switch (team) {\n      case 'teamWhite':\n        setTeamWhitePlayers(prevPlayers => prevPlayers.filter((player, index) => index !== playerIndex));\n        break;\n      case 'irAndOut':\n        setIRAndOut(prevPlayers => prevPlayers.filter((player, index) => index !== playerIndex));\n        break;\n      case 'weekToWeek':\n        setWeekToWeek(prevPlayers => prevPlayers.filter((player, index) => index !== playerIndex));\n        break;\n      case 'monthToMonth':\n        setmonthToMonth(prevPlayers => prevPlayers.filter((player, index) => index !== playerIndex));\n        break;\n      default:\n        setTeamBlackPlayers(prevPlayers => prevPlayers.filter((player, index) => index !== playerIndex));\n        break;\n    }\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    // Add the current date to the form data\n    const currentDate = new Date().toLocaleDateString();\n    const formDataArray = JSON.parse(localStorage.getItem('formDataArray')) || [];\n    const weekNumber = formDataArray.length === 0 ? 1 : formDataArray.length + 1;\n    const updatedFormData = {\n      ...formData,\n      date: currentDate,\n      week: weekNumber\n    };\n    // Save the form data to local storage\n    localStorage.setItem('formDataArray', JSON.stringify(updatedFormData));\n    // Push the form data into the array\n    setFormDataArray(prevDataArray => [...prevDataArray, updatedFormData]);\n  };\n  useEffect(() => {\n    // Load the form data array from local storage\n    const savedFormDataArray = JSON.parse(localStorage.getItem('formDataArray')) || [];\n    if (savedFormDataArray.length > 0) {\n      setFormDataArray(savedFormDataArray);\n    }\n  }, []);\n  console.log(formDataArray);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        textAlign: 'center'\n      },\n      children: \"FNL Roll Call\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'center'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"team\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"Team White\", ' ', /*#__PURE__*/_jsxDEV(\"span\", {\n              role: \"img\",\n              \"aria-label\": \"White Flag\",\n              children: \"\\uD83C\\uDFF3\\uFE0F\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex',\n              flexDirection: 'column',\n              gap: '20px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(Input, {\n              value: teamWhiteGoalie,\n              onChange: e => {\n                setTeamWhiteGoalie(e.target.value);\n                handlePlayerNameChange('teamWhite', null, e.target.value, 'goalie');\n              },\n              placeholder: \"Goalie\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 29\n            }, this), teamWhitePlayers.map((player, index) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(Input, {\n                value: player.name,\n                onChange: e => {\n                  const newPlayers = [...teamWhitePlayers];\n                  newPlayers[index].name = e.target.value;\n                  setTeamWhitePlayers(newPlayers);\n                  handlePlayerNameChange('teamWhite', index, e.target.value, 'player');\n                },\n                placeholder: `Player ${index + 1}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 185,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n                style: {\n                  listStyle: 'none',\n                  border: '1px solid black',\n                  width: '90px'\n                },\n                children: players.length > 0 && players.map(player => /*#__PURE__*/_jsxDEV(React.Fragment, {\n                  children: /*#__PURE__*/_jsxDEV(\"li\", {\n                    onClick: () => handleSelectPlayer(player.name),\n                    children: player.name\n                  }, player, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 203,\n                    columnNumber: 97\n                  }, this)\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 203,\n                  columnNumber: 69\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 201,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Selected player: \", selectedPlayer]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 205,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                color: \"red\",\n                title: \"Remove Player\",\n                type: \"button\",\n                onClick: () => removePlayer('teamWhite', index)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 206,\n                columnNumber: 37\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 33\n            }, this)), /*#__PURE__*/_jsxDEV(Button, {\n              title: \"Add Player\",\n              color: \"#007BFF\",\n              type: \"button\",\n              onClick: () => handleAddPlayer('teamWhite')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"team\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"Team Black\", ' ', /*#__PURE__*/_jsxDEV(\"span\", {\n              role: \"img\",\n              \"aria-label\": \"Black Flag\",\n              children: \"\\uD83C\\uDFF4\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 225,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex',\n              flexDirection: 'column',\n              gap: '20px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(Input, {\n              value: teamBlackGoalie,\n              onChange: e => {\n                setTeamBlackGoalie(e.target.value);\n                handlePlayerNameChange('teamBlack', null, e.target.value, 'goalie');\n              },\n              placeholder: \"Goalie\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              style: {\n                listStyle: 'none',\n                border: '1px solid black',\n                width: '90px'\n              },\n              children: players.length > 0 && players.map(player => /*#__PURE__*/_jsxDEV(\"li\", {\n                children: player.name\n              }, player, false, {\n                fileName: _jsxFileName,\n                lineNumber: 246,\n                columnNumber: 69\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 244,\n              columnNumber: 37\n            }, this), teamBlackPlayers.map((player, index) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(Input, {\n                value: player.name,\n                onChange: e => {\n                  const newPlayers = [...teamBlackPlayers];\n                  newPlayers[index].name = e.target.value;\n                  setTeamBlackPlayers(newPlayers);\n                  handlePlayerNameChange('teamBlack', index, e.target.value, 'player');\n                },\n                placeholder: `Player ${index + 1}`\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 250,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                color: \"red\",\n                title: \"Remove Player\",\n                type: \"button\",\n                onClick: () => removePlayer('teamBlack', index)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 266,\n                columnNumber: 37\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 249,\n              columnNumber: 33\n            }, this)), /*#__PURE__*/_jsxDEV(Button, {\n              title: \"Add Player\",\n              color: \"#007BFF\",\n              type: \"button\",\n              onClick: () => handleAddPlayer('teamBlack')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 275,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            flexDirection: 'row',\n            gap: '20px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex',\n              flexDirection: 'column',\n              gap: '20px',\n              marginTop: '50px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"IR and Out\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 299,\n              columnNumber: 29\n            }, this), irAndOut.map((player, index) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(Input, {\n                value: player.name,\n                onChange: e => {\n                  const newPlayers = [...irAndOut];\n                  newPlayers[index].name = e.target.value;\n                  setIRAndOut(newPlayers);\n                  handlePlayerNameChange('irAndOut', index, e.target.value, 'player');\n                },\n                placeholder: `Player ${index + 1}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 302,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                color: \"red\",\n                title: \"Remove Player\",\n                type: \"button\",\n                onClick: () => removePlayer('irAndOut', index)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 317,\n                columnNumber: 37\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 301,\n              columnNumber: 33\n            }, this)), /*#__PURE__*/_jsxDEV(Button, {\n              title: \"Add Player\",\n              color: \"#007BFF\",\n              type: \"button\",\n              onClick: () => handleAddPlayer('irAndOut')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 326,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex',\n              flexDirection: 'column',\n              gap: '20px',\n              marginTop: '50px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Month to Month\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 342,\n              columnNumber: 29\n            }, this), monthToMonth.map((player, index) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(Input, {\n                value: player.name,\n                onChange: e => {\n                  const newPlayers = [...monthToMonth];\n                  newPlayers[index].name = e.target.value;\n                  setmonthToMonth(newPlayers);\n                  handlePlayerNameChange('monthToMonth', index, e.target.value, 'player');\n                },\n                placeholder: `Player ${index + 1}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 345,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                color: \"red\",\n                title: \"Remove Player\",\n                type: \"button\",\n                onClick: () => removePlayer('monthToMonth', index)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 360,\n                columnNumber: 37\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 344,\n              columnNumber: 33\n            }, this)), /*#__PURE__*/_jsxDEV(Button, {\n              title: \"Add Player\",\n              color: \"#007BFF\",\n              type: \"button\",\n              onClick: () => handleAddPlayer('monthToMonth')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 369,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 334,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex',\n              flexDirection: 'column',\n              gap: '20px',\n              marginTop: '50px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Week to week\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 385,\n              columnNumber: 29\n            }, this), weekToWeek.map((player, index) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(Input, {\n                value: player.name,\n                onChange: e => {\n                  const newPlayers = [...weekToWeek];\n                  newPlayers[index].name = e.target.value;\n                  setWeekToWeek(newPlayers);\n                  handlePlayerNameChange('weekToWeek', index, e.target.value, 'player');\n                },\n                placeholder: `Player ${index + 1}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 388,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                color: \"red\",\n                title: \"Remove Player\",\n                type: \"button\",\n                onClick: () => removePlayer('weekToWeek', index)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 403,\n                columnNumber: 37\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 387,\n              columnNumber: 33\n            }, this)), /*#__PURE__*/_jsxDEV(Button, {\n              title: \"Add Player\",\n              color: \"#007BFF\",\n              type: \"button\",\n              onClick: () => handleAddPlayer('weekToWeek')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 412,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 377,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          title: \"Submit\",\n          type: \"submit\",\n          color: \"#007BFF\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 421,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(MatchResults, {\n      formDataArray: formDataArray\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 424,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_s(Game, \"RGNxYr7ceV8cHI5RD2lZSpX2v3s=\");\n_c = Game;\nexport default Game;\nvar _c;\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["React","useEffect","useState","Button","MatchResults","Input","fnlPlayers","jsxDEV","_jsxDEV","Fragment","_Fragment","Game","_s","formDataArray","setFormDataArray","teamWhiteGoalie","setTeamWhiteGoalie","teamBlackGoalie","setTeamBlackGoalie","teamWhitePlayers","setTeamWhitePlayers","name","teamBlackPlayers","setTeamBlackPlayers","monthToMonth","setmonthToMonth","irAndOut","setIRAndOut","weekToWeek","setWeekToWeek","players","setPlayers","selectedPlayer","setSelectedPlayer","formData","setFormData","game","teamWhite","Team","goalie","teamBlack","handlePlayerNameChange","team","playerIndex","newName","playerType","prevData","updatedData","map","player","index","filteredPlayers","filter","toLowerCase","includes","handleAddPlayer","newPlayer","prevPlayers","push","removePlayer","handleSubmit","e","preventDefault","currentDate","Date","toLocaleDateString","JSON","parse","localStorage","getItem","weekNumber","length","updatedFormData","date","week","setItem","stringify","prevDataArray","savedFormDataArray","console","log","children","style","textAlign","fileName","_jsxFileName","lineNumber","columnNumber","display","justifyContent","onSubmit","className","role","flexDirection","gap","value","onChange","target","placeholder","newPlayers","listStyle","border","width","onClick","handleSelectPlayer","color","title","type","marginTop","_c","$RefreshReg$"],"sources":["/Users/biomacbook/Documents/fnl-web-portal/src/Views/Game.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport Button from '../Atoms/Button/Button';\nimport MatchResults from './MatchResults';\nimport Input from '../Atoms/Input/Input';\nimport { fnlPlayers } from '../Utils';\n\nconst Game = () => {\n    const [formDataArray, setFormDataArray] = useState([]);\n    const [teamWhiteGoalie, setTeamWhiteGoalie] = useState('');\n    const [teamBlackGoalie, setTeamBlackGoalie] = useState('');\n    const [teamWhitePlayers, setTeamWhitePlayers] = useState([{ name: '' }]);\n    const [teamBlackPlayers, setTeamBlackPlayers] = useState([{ name: '' }]);\n    const [monthToMonth, setmonthToMonth] = useState([{ name: '' }]);\n    const [irAndOut, setIRAndOut] = useState([{ name: '' }]);\n    const [weekToWeek, setWeekToWeek] = useState([{ name: '' }]);\n    const [players, setPlayers] = useState([]);\n    const [selectedPlayer, setSelectedPlayer] = useState('');\n\n    const [formData, setFormData] = useState({\n        game: {\n            teamWhite: {\n                Team: 'White',\n                players: [{}],\n                goalie: '',\n            },\n            teamBlack: {\n                Team: 'Black',\n                players: [{}],\n                goalie: '',\n            },\n            irAndOut: {\n                Team: 'irAndOut',\n                players: [{}],\n            },\n            monthToMonth: {\n                Team: 'monthToMonth',\n                players: [{}],\n            },\n            weekToWeek: {\n                Team: 'weekToWeek',\n                players: [{}],\n            },\n        },\n    });\n\n    const handlePlayerNameChange = (team, playerIndex, newName, playerType) => {\n        setFormData((prevData) => {\n            const updatedData = { ...prevData };\n            if (playerType === 'goalie') {\n                updatedData.game[team].goalie = newName;\n            } else {\n                updatedData.game[team].players = updatedData.game[team].players.map(\n                    (player, index) => {\n                        if (index === playerIndex) {\n                            player.name = newName;\n                        }\n                        return player;\n                    }\n                );\n            }\n            return updatedData;\n        });\n\n        const filteredPlayers = fnlPlayers.filter((player) =>\n            player.name.toLowerCase().includes(newName.toLowerCase())\n        );\n\n        setPlayers(filteredPlayers);\n        \n    };\n\n  \n\n    const handleAddPlayer = (team) => {\n        const newPlayer = { name: '' };\n        switch (team) {\n            case 'teamWhite':\n                setTeamWhitePlayers((prevPlayers) => [...prevPlayers, newPlayer]);\n                break;\n            case 'irAndOut':\n                setIRAndOut((prevPlayers) => [...prevPlayers, newPlayer]);\n                break;\n            case 'monthToMonth':\n                setmonthToMonth((prevPlayers) => [...prevPlayers, newPlayer]);\n                break;\n            case 'weekToWeek':\n                setWeekToWeek((prevPlayers) => [...prevPlayers, newPlayer]);\n                break;\n            default:\n                setTeamBlackPlayers((prevPlayers) => [...prevPlayers, newPlayer]);\n                break;\n        }\n        setFormData((prevData) => {\n            const updatedData = { ...prevData };\n            updatedData.game[team].players.push({});\n            return updatedData;\n        });\n    };\n    const removePlayer = (team, playerIndex) => {\n        switch (team) {\n            case 'teamWhite':\n                setTeamWhitePlayers((prevPlayers) =>\n                    prevPlayers.filter((player, index) => index !== playerIndex)\n                );\n                break;\n            case 'irAndOut':\n                setIRAndOut((prevPlayers) =>\n                    prevPlayers.filter((player, index) => index !== playerIndex)\n                );\n                break;\n            case 'weekToWeek':\n                setWeekToWeek((prevPlayers) =>\n                    prevPlayers.filter((player, index) => index !== playerIndex)\n                );\n                break;\n            case 'monthToMonth':\n                setmonthToMonth((prevPlayers) =>\n                    prevPlayers.filter((player, index) => index !== playerIndex)\n                );\n                break;\n            default:\n                setTeamBlackPlayers((prevPlayers) =>\n                    prevPlayers.filter((player, index) => index !== playerIndex)\n                );\n                break;\n        }\n    };\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        // Add the current date to the form data\n        const currentDate = new Date().toLocaleDateString();\n        const formDataArray = JSON.parse(localStorage.getItem('formDataArray')) || [];\n        const weekNumber = formDataArray.length === 0 ? 1 : formDataArray.length + 1;\n        const updatedFormData = {\n            ...formData,\n            date: currentDate,\n            week: weekNumber,\n        };\n        // Save the form data to local storage\n        localStorage.setItem('formDataArray', JSON.stringify(updatedFormData));\n        // Push the form data into the array\n        setFormDataArray((prevDataArray) => [...prevDataArray, updatedFormData]);\n    };\n\n    useEffect(() => {\n        // Load the form data array from local storage\n        const savedFormDataArray = JSON.parse(localStorage.getItem('formDataArray')) || [];\n        if (savedFormDataArray.length > 0) {\n            setFormDataArray(savedFormDataArray);\n        }\n    }, []);\n\n    console.log(formDataArray);\n\n    return (\n        <>\n            <h1 style={{ textAlign: 'center' }}>FNL Roll Call</h1>\n            <div style={{ display: 'flex', justifyContent: 'center' }}>\n                <form onSubmit={handleSubmit}>\n                    <div className='team'>\n                        <h3>\n                            Team White{' '}\n                            <span role='img' aria-label='White Flag'>\n                                🏳️\n                            </span>\n                        </h3>\n                        <div style={{ display: 'flex', flexDirection: 'column', gap: '20px' }}>\n                            <Input\n                                value={teamWhiteGoalie}\n                                onChange={(e) => {\n                                    setTeamWhiteGoalie(e.target.value);\n                                    handlePlayerNameChange(\n                                        'teamWhite',\n                                        null,\n                                        e.target.value,\n                                        'goalie'\n                                    );\n                                }}\n                                placeholder='Goalie'\n                            />\n                           \n                            {teamWhitePlayers.map((player, index) => (\n                                <React.Fragment key={index}>\n                                    <Input\n                                        value={player.name}\n                                        onChange={(e) => {\n                                            const newPlayers = [...teamWhitePlayers];\n                                            newPlayers[index].name = e.target.value;\n                                            setTeamWhitePlayers(newPlayers);\n                                            handlePlayerNameChange(\n                                                'teamWhite',\n                                                index,\n                                                e.target.value,\n                                                'player'\n                                            );\n                                        }}\n                                        placeholder={`Player ${index + 1}`}\n                                    />\n                                    {/* dropdown for players */}\n                                    <ul style={{ listStyle: 'none', border: '1px solid black', width: '90px' }} >\n                                        {players.length > 0 &&\n                                            players.map((player) => <React.Fragment key={index}><li onClick={() => handleSelectPlayer(player.name)} key={player}>{player.name}</li></React.Fragment> )}\n                                    </ul>\n                                    <p>Selected player: {selectedPlayer}</p>\n                                    <Button\n                                        color='red'\n                                        title='Remove Player'\n                                        type='button'\n                                        onClick={() => removePlayer('teamWhite', index)}\n                                    />\n                                </React.Fragment>\n                            ))}\n                            <Button\n                                title='Add Player'\n                                color='#007BFF'\n                                type='button'\n                                onClick={() => handleAddPlayer('teamWhite')}\n                            />\n                        </div>\n                    </div>\n                    <div className='team'>\n                        <h3>\n                            Team Black{' '}\n                            <span role='img' aria-label='Black Flag'>\n                                🏴\n                            </span>\n                        </h3>\n                        <div style={{ display: 'flex', flexDirection: 'column', gap: '20px' }}>\n                            <Input\n                                value={teamBlackGoalie}\n                                onChange={(e) => {\n                                    setTeamBlackGoalie(e.target.value);\n                                    handlePlayerNameChange(\n                                        'teamBlack',\n                                        null,\n                                        e.target.value,\n                                        'goalie'\n                                    );\n                                }}\n                                placeholder='Goalie'\n                            />\n                             {/* dropdown for players */}\n                                    <ul style={{ listStyle: 'none', border: '1px solid black', width: '90px' }}>\n                                        {players.length > 0 &&\n                                            players.map((player) => <li key={player}>{player.name}</li>)}\n                                    </ul>\n                            {teamBlackPlayers.map((player, index) => (\n                                <React.Fragment key={index}>\n                                    <Input\n                                        key={index}\n                                        value={player.name}\n                                        onChange={(e) => {\n                                            const newPlayers = [...teamBlackPlayers];\n                                            newPlayers[index].name = e.target.value;\n                                            setTeamBlackPlayers(newPlayers);\n                                            handlePlayerNameChange(\n                                                'teamBlack',\n                                                index,\n                                                e.target.value,\n                                                'player'\n                                            );\n                                        }}\n                                        placeholder={`Player ${index + 1}`}\n                                    />\n                                    <Button\n                                        color='red'\n                                        title='Remove Player'\n                                        type='button'\n                                        onClick={() => removePlayer('teamBlack', index)}\n                                    />\n                                </React.Fragment>\n                            ))}\n\n                            <Button\n                                title='Add Player'\n                                color='#007BFF'\n                                type='button'\n                                onClick={() => handleAddPlayer('teamBlack')}\n                            />\n                        </div>\n                    </div>\n\n                    <div\n                        style={{\n                            display: 'flex',\n                            flexDirection: 'row',\n                            gap: '20px',\n                        }}\n                    >\n                        <div\n                            style={{\n                                display: 'flex',\n                                flexDirection: 'column',\n                                gap: '20px',\n                                marginTop: '50px',\n                            }}\n                        >\n                            <h2>IR and Out</h2>\n                            {irAndOut.map((player, index) => (\n                                <React.Fragment key={index}>\n                                    <Input\n                                        value={player.name}\n                                        onChange={(e) => {\n                                            const newPlayers = [...irAndOut];\n                                            newPlayers[index].name = e.target.value;\n                                            setIRAndOut(newPlayers);\n                                            handlePlayerNameChange(\n                                                'irAndOut',\n                                                index,\n                                                e.target.value,\n                                                'player'\n                                            );\n                                        }}\n                                        placeholder={`Player ${index + 1}`}\n                                    />\n                                    <Button\n                                        color='red'\n                                        title='Remove Player'\n                                        type='button'\n                                        onClick={() => removePlayer('irAndOut', index)}\n                                    />\n                                </React.Fragment>\n                            ))}\n\n                            <Button\n                                title='Add Player'\n                                color='#007BFF'\n                                type='button'\n                                onClick={() => handleAddPlayer('irAndOut')}\n                            />\n                        </div>\n\n                        <div\n                            style={{\n                                display: 'flex',\n                                flexDirection: 'column',\n                                gap: '20px',\n                                marginTop: '50px',\n                            }}\n                        >\n                            <h2>Month to Month</h2>\n                            {monthToMonth.map((player, index) => (\n                                <React.Fragment key={index}>\n                                    <Input\n                                        value={player.name}\n                                        onChange={(e) => {\n                                            const newPlayers = [...monthToMonth];\n                                            newPlayers[index].name = e.target.value;\n                                            setmonthToMonth(newPlayers);\n                                            handlePlayerNameChange(\n                                                'monthToMonth',\n                                                index,\n                                                e.target.value,\n                                                'player'\n                                            );\n                                        }}\n                                        placeholder={`Player ${index + 1}`}\n                                    />\n                                    <Button\n                                        color='red'\n                                        title='Remove Player'\n                                        type='button'\n                                        onClick={() => removePlayer('monthToMonth', index)}\n                                    />\n                                </React.Fragment>\n                            ))}\n\n                            <Button\n                                title='Add Player'\n                                color='#007BFF'\n                                type='button'\n                                onClick={() => handleAddPlayer('monthToMonth')}\n                            />\n                        </div>\n\n                        <div\n                            style={{\n                                display: 'flex',\n                                flexDirection: 'column',\n                                gap: '20px',\n                                marginTop: '50px',\n                            }}\n                        >\n                            <h2>Week to week</h2>\n                            {weekToWeek.map((player, index) => (\n                                <React.Fragment key={index}>\n                                    <Input\n                                        value={player.name}\n                                        onChange={(e) => {\n                                            const newPlayers = [...weekToWeek];\n                                            newPlayers[index].name = e.target.value;\n                                            setWeekToWeek(newPlayers);\n                                            handlePlayerNameChange(\n                                                'weekToWeek',\n                                                index,\n                                                e.target.value,\n                                                'player'\n                                            );\n                                        }}\n                                        placeholder={`Player ${index + 1}`}\n                                    />\n                                    <Button\n                                        color='red'\n                                        title='Remove Player'\n                                        type='button'\n                                        onClick={() => removePlayer('weekToWeek', index)}\n                                    />\n                                </React.Fragment>\n                            ))}\n\n                            <Button\n                                title='Add Player'\n                                color='#007BFF'\n                                type='button'\n                                onClick={() => handleAddPlayer('weekToWeek')}\n                            />\n                        </div>\n                    </div>\n\n                    <Button title='Submit' type='submit' color='#007BFF' />\n                </form>\n            </div>\n            <MatchResults formDataArray={formDataArray} />\n        </>\n    );\n};\n\nexport default Game;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}