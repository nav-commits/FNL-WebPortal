{"ast":null,"code":"var _jsxFileName = \"/Users/biomacbook/Documents/fnl-web-portal/src/Views/Game.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport Button from '../Atoms/Button/Button';\nimport MatchResults from './MatchResults';\nimport PlayerInput from '../Molecules/PlayerInput/PlayerInput';\nimport Input from '../Atoms/Input/Input';\nimport { fnlPlayers } from '../Utils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Game = () => {\n  _s();\n  const [formDataArray, setFormDataArray] = useState([]);\n  const [teamWhiteGoalie, setTeamWhiteGoalie] = useState('');\n  const [teamBlackGoalie, setTeamBlackGoalie] = useState('');\n  const [teamWhitePlayers, setTeamWhitePlayers] = useState([{\n    name: ''\n  }]);\n  const [teamBlackPlayers, setTeamBlackPlayers] = useState([{\n    name: ''\n  }]);\n  const [monthToMonth, setmonthToMonth] = useState([{\n    name: ''\n  }]);\n  const [irAndOut, setIRAndOut] = useState([{\n    name: ''\n  }]);\n  const [weekToWeek, setWeekToWeek] = useState([{\n    name: ''\n  }]);\n  // need more filtered arrays\n  const [filteredPlayers, setFilteredPlayers] = useState([]);\n  const [formData, setFormData] = useState({\n    game: {\n      teamWhite: {\n        Team: 'White',\n        players: [{}],\n        goalie: ''\n      },\n      teamBlack: {\n        Team: 'Black',\n        players: [{}],\n        goalie: ''\n      },\n      irAndOut: {\n        Team: 'irAndOut',\n        players: [{}]\n      },\n      monthToMonth: {\n        Team: 'monthToMonth',\n        players: [{}]\n      },\n      weekToWeek: {\n        Team: 'weekToWeek',\n        players: [{}]\n      }\n    }\n  });\n  const handlePlayerNameChange = (team, playerIndex, newName, playerType) => {\n    // Filter the players array to find the matching name and set the filtered players\n    const filtered = fnlPlayers.filter(player => player.name.toLowerCase().includes(newName));\n    setFilteredPlayers(filtered);\n\n    // Update the form data with the new name\n    setFormData(prevData => {\n      const updatedData = {\n        ...prevData\n      };\n      if (playerType === 'goalie') {\n        updatedData.game[team].goalie = newName;\n      } else {\n        updatedData.game[team].players = updatedData.game[team].players.map((player, index) => {\n          if (index === playerIndex) {\n            player.name = newName;\n          }\n          return player;\n        });\n      }\n      return updatedData;\n    });\n  };\n  const handleAddPlayer = team => {\n    const newPlayer = {\n      name: ''\n    };\n    switch (team) {\n      case 'teamWhite':\n        setTeamWhitePlayers(prevPlayers => [...prevPlayers, newPlayer]);\n        break;\n      case 'irAndOut':\n        setIRAndOut(prevPlayers => [...prevPlayers, newPlayer]);\n        break;\n      case 'monthToMonth':\n        setmonthToMonth(prevPlayers => [...prevPlayers, newPlayer]);\n        break;\n      case 'weekToWeek':\n        setWeekToWeek(prevPlayers => [...prevPlayers, newPlayer]);\n        break;\n      default:\n        setTeamBlackPlayers(prevPlayers => [...prevPlayers, newPlayer]);\n        break;\n    }\n    setFormData(prevData => {\n      const updatedData = {\n        ...prevData\n      };\n      updatedData.game[team].players.push({});\n      return updatedData;\n    });\n  };\n  const removePlayer = (team, playerIndex) => {\n    switch (team) {\n      case 'teamWhite':\n        if (teamWhitePlayers.length === 1) return;\n        setTeamWhitePlayers(prevPlayers => prevPlayers.filter((player, index) => index !== playerIndex));\n        break;\n      case 'irAndOut':\n        if (irAndOut.length === 1) return;\n        setIRAndOut(prevPlayers => prevPlayers.filter((player, index) => index !== playerIndex));\n        break;\n      case 'weekToWeek':\n        if (weekToWeek.length === 1) return;\n        setWeekToWeek(prevPlayers => prevPlayers.filter((player, index) => index !== playerIndex));\n        break;\n      case 'monthToMonth':\n        if (monthToMonth.length === 1) return;\n        setmonthToMonth(prevPlayers => prevPlayers.filter((player, index) => index !== playerIndex));\n        break;\n      default:\n        if (teamBlackPlayers.length === 1) return;\n        setTeamBlackPlayers(prevPlayers => prevPlayers.filter((player, index) => index !== playerIndex));\n        break;\n    }\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    // Add the current date to the form data\n    const currentDate = new Date().toLocaleDateString();\n    const formDataArray = JSON.parse(localStorage.getItem('formDataArray')) || [];\n    const weekNumber = formDataArray.length === 0 ? 1 : formDataArray.length + 1;\n    const updatedFormData = {\n      ...formData,\n      date: currentDate,\n      week: weekNumber\n    };\n    // Save the form data to local storage\n    localStorage.setItem('formDataArray', JSON.stringify(updatedFormData));\n    // Push the form data into the array\n    setFormDataArray(prevDataArray => [...prevDataArray, updatedFormData]);\n  };\n  useEffect(() => {\n    // Load the form data array from local storage\n    const savedFormDataArray = JSON.parse(localStorage.getItem('formDataArray')) || [];\n    if (savedFormDataArray.length > 0) {\n      setFormDataArray(savedFormDataArray);\n    }\n  }, []);\n  console.log(formDataArray);\n\n  // set the input value to the name of the player selected\n  const handleNameSelect = (name, inputType, playerIndex) => {\n    switch (inputType) {\n      case 'teamWhiteGoalie':\n        setTeamWhiteGoalie(name);\n        handlePlayerNameChange('teamWhite', null, name, 'goalie');\n        break;\n      case 'teamBlackGoalie':\n        setTeamBlackGoalie(name);\n        handlePlayerNameChange('teamBlack', null, name, 'goalie');\n        break;\n      case 'teamWhitePlayer':\n        setTeamWhitePlayers(prevPlayers => prevPlayers.map((players, index) => {\n          const updatedData = {\n            ...prevPlayers\n          };\n          updatedData.game['teamWhite'].players = updatedData.game['teamWhite'].players.map((player, index) => {\n            if (index === playerIndex) {\n              player.name = newName;\n            }\n            return player;\n          });\n          return updatedData;\n        }));\n        setTeamWhitePlayers(name);\n        handlePlayerNameChange('teamWhite', null, name, 'player');\n        break;\n      case 'teamBlackPlayer':\n        setTeamBlackPlayers(name);\n        handlePlayerNameChange('teamBlack', null, name, 'player');\n        break;\n      default:\n        break;\n    }\n    setFilteredPlayers([]);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        textAlign: 'center'\n      },\n      children: \"FNL Roll Call\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'center'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            flexDirection: 'row',\n            gap: '20px',\n            justifyContent: 'space-around'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex',\n              flexDirection: 'column',\n              gap: '20px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: [\"Team White\", ' ', /*#__PURE__*/_jsxDEV(\"span\", {\n                role: \"img\",\n                \"aria-label\": \"White Flag\",\n                children: \"\\uD83C\\uDFF3\\uFE0F\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 217,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 215,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              value: teamWhiteGoalie,\n              onChange: e => {\n                setTeamWhiteGoalie(e.target.value);\n                handlePlayerNameChange('teamWhite', null, e.target.value, 'goalie');\n              },\n              placeholder: \"Goalie\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 29\n            }, this), filteredPlayers.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                width: '50%'\n              },\n              children: /*#__PURE__*/_jsxDEV(\"ul\", {\n                style: {\n                  listStyleType: 'none',\n                  margin: 0,\n                  padding: 0,\n                  border: '1px solid #ccc',\n                  borderRadius: '5px',\n                  boxShadow: '0 2px 4px rgba(0, 0, 0, 0.1)'\n                },\n                children: filteredPlayers.map((name, id) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n                  children: /*#__PURE__*/_jsxDEV(\"li\", {\n                    onClick: () => handleNameSelect(name.name, 'teamWhiteGoalie'),\n                    style: {\n                      cursor: 'pointer',\n                      padding: '5px',\n                      borderBottom: '1px solid #ccc'\n                    },\n                    children: name.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 248,\n                    columnNumber: 49\n                  }, this)\n                }, id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 247,\n                  columnNumber: 45\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 236,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 33\n            }, this), teamWhitePlayers.map((player, index) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n              children: /*#__PURE__*/_jsxDEV(PlayerInput, {\n                value: player.name,\n                onChange: e => {\n                  const newPlayers = [...teamWhitePlayers];\n                  newPlayers[index].name = e.target.value;\n                  setTeamWhitePlayers(newPlayers);\n                  handlePlayerNameChange('teamWhite', index, e.target.value, 'player');\n                },\n                placeholder: `Player ${index + 1}`,\n                onAdd: () => handleAddPlayer('teamWhite'),\n                onRemove: () => removePlayer('teamWhite', index)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 266,\n                columnNumber: 37\n              }, this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 265,\n              columnNumber: 33\n            }, this)), filteredPlayers.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                width: '50%'\n              },\n              children: /*#__PURE__*/_jsxDEV(\"ul\", {\n                style: {\n                  listStyleType: 'none',\n                  margin: 0,\n                  padding: 0,\n                  border: '1px solid #ccc',\n                  borderRadius: '5px',\n                  boxShadow: '0 2px 4px rgba(0, 0, 0, 0.1)'\n                },\n                children: filteredPlayers.map((name, id) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n                  children: /*#__PURE__*/_jsxDEV(\"li\", {\n                    onClick: () => handleNameSelect(name.name, 'teamWhitePlayer'),\n                    style: {\n                      cursor: 'pointer',\n                      padding: '5px',\n                      borderBottom: '1px solid #ccc'\n                    },\n                    children: name.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 300,\n                    columnNumber: 49\n                  }, this)\n                }, id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 299,\n                  columnNumber: 45\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 288,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 287,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex',\n              flexDirection: 'column',\n              gap: '20px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: [\"Team Black\", ' ', /*#__PURE__*/_jsxDEV(\"span\", {\n                role: \"img\",\n                \"aria-label\": \"Black Flag\",\n                children: \"\\uD83C\\uDFF4\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 320,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 318,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              value: teamBlackGoalie,\n              onChange: e => {\n                setTeamBlackGoalie(e.target.value);\n                handlePlayerNameChange('teamBlack', null, e.target.value, 'goalie');\n              },\n              placeholder: \"Goalie\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 324,\n              columnNumber: 29\n            }, this), filteredPlayers.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                width: '50%'\n              },\n              children: /*#__PURE__*/_jsxDEV(\"ul\", {\n                style: {\n                  listStyleType: 'none',\n                  margin: 0,\n                  padding: 0,\n                  border: '1px solid #ccc',\n                  borderRadius: '5px',\n                  boxShadow: '0 2px 4px rgba(0, 0, 0, 0.1)'\n                },\n                children: filteredPlayers.map((name, id) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n                  children: /*#__PURE__*/_jsxDEV(\"li\", {\n                    onClick: () => handleNameSelect(name.name, 'teamBlackGoalie'),\n                    style: {\n                      cursor: 'pointer',\n                      padding: '5px',\n                      borderBottom: '1px solid #ccc'\n                    },\n                    children: name.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 352,\n                    columnNumber: 49\n                  }, this)\n                }, id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 351,\n                  columnNumber: 45\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 340,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 339,\n              columnNumber: 33\n            }, this), teamBlackPlayers.map((player, index) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n              children: /*#__PURE__*/_jsxDEV(PlayerInput, {\n                value: player.name,\n                onChange: e => {\n                  const newPlayers = [...teamBlackPlayers];\n                  newPlayers[index].name = e.target.value;\n                  setTeamBlackPlayers(newPlayers);\n                  handlePlayerNameChange('teamBlack', index, e.target.value, 'player');\n                },\n                placeholder: `Player ${index + 1}`,\n                onAdd: () => handleAddPlayer('teamBlack'),\n                onRemove: () => removePlayer('teamBlack', index)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 370,\n                columnNumber: 37\n              }, this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 369,\n              columnNumber: 33\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 317,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            flexDirection: 'row',\n            gap: '20px',\n            justifyContent: 'center'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex',\n              flexDirection: 'column',\n              gap: '20px',\n              marginTop: '50px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"IR/Out\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 408,\n              columnNumber: 29\n            }, this), irAndOut.map((player, index) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n              children: /*#__PURE__*/_jsxDEV(PlayerInput, {\n                value: player.name,\n                onChange: e => {\n                  const newPlayers = [...irAndOut];\n                  newPlayers[index].name = e.target.value;\n                  setIRAndOut(newPlayers);\n                  handlePlayerNameChange('irAndOut', index, e.target.value, 'player');\n                },\n                placeholder: `Player ${index + 1}`,\n                onAdd: () => handleAddPlayer('irAndOut'),\n                onRemove: () => removePlayer('irAndOut', index)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 411,\n                columnNumber: 37\n              }, this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 410,\n              columnNumber: 33\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 400,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex',\n              flexDirection: 'column',\n              gap: '20px',\n              marginTop: '50px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Month to Month\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 440,\n              columnNumber: 29\n            }, this), monthToMonth.map((player, index) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n              children: /*#__PURE__*/_jsxDEV(PlayerInput, {\n                value: player.name,\n                onChange: e => {\n                  const newPlayers = [...monthToMonth];\n                  newPlayers[index].name = e.target.value;\n                  setmonthToMonth(newPlayers);\n                  handlePlayerNameChange('monthToMonth', index, e.target.value, 'player');\n                },\n                placeholder: `Player ${index + 1}`,\n                onAdd: () => handleAddPlayer('monthToMonth'),\n                onRemove: () => removePlayer('monthToMonth', index)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 443,\n                columnNumber: 37\n              }, this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 442,\n              columnNumber: 33\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 432,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex',\n              flexDirection: 'column',\n              gap: '20px',\n              marginTop: '50px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Week to week\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 471,\n              columnNumber: 29\n            }, this), weekToWeek.map((player, index) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n              children: /*#__PURE__*/_jsxDEV(PlayerInput, {\n                value: player.name,\n                onChange: e => {\n                  const newPlayers = [...weekToWeek];\n                  newPlayers[index].name = e.target.value;\n                  setWeekToWeek(newPlayers);\n                  handlePlayerNameChange('weekToWeek', index, e.target.value, 'player');\n                },\n                placeholder: `Player ${index + 1}`,\n                onAdd: () => handleAddPlayer('weekToWeek'),\n                onRemove: () => removePlayer('weekToWeek', index)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 474,\n                columnNumber: 37\n              }, this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 473,\n              columnNumber: 33\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 463,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 392,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            marginTop: '50px'\n          },\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            title: \"Submit\",\n            type: \"submit\",\n            color: \"#2196f3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 496,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 495,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(MatchResults, {\n      formDataArray: formDataArray\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 500,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_s(Game, \"+i4wiZGB9nY4mpXjpvlk93M6dVA=\");\n_c = Game;\nexport default Game;\nvar _c;\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["React","useEffect","useState","Button","MatchResults","PlayerInput","Input","fnlPlayers","jsxDEV","_jsxDEV","Fragment","_Fragment","Game","_s","formDataArray","setFormDataArray","teamWhiteGoalie","setTeamWhiteGoalie","teamBlackGoalie","setTeamBlackGoalie","teamWhitePlayers","setTeamWhitePlayers","name","teamBlackPlayers","setTeamBlackPlayers","monthToMonth","setmonthToMonth","irAndOut","setIRAndOut","weekToWeek","setWeekToWeek","filteredPlayers","setFilteredPlayers","formData","setFormData","game","teamWhite","Team","players","goalie","teamBlack","handlePlayerNameChange","team","playerIndex","newName","playerType","filtered","filter","player","toLowerCase","includes","prevData","updatedData","map","index","handleAddPlayer","newPlayer","prevPlayers","push","removePlayer","length","handleSubmit","e","preventDefault","currentDate","Date","toLocaleDateString","JSON","parse","localStorage","getItem","weekNumber","updatedFormData","date","week","setItem","stringify","prevDataArray","savedFormDataArray","console","log","handleNameSelect","inputType","children","style","textAlign","fileName","_jsxFileName","lineNumber","columnNumber","display","justifyContent","onSubmit","flexDirection","gap","role","value","onChange","target","placeholder","width","listStyleType","margin","padding","border","borderRadius","boxShadow","id","onClick","cursor","borderBottom","newPlayers","onAdd","onRemove","marginTop","title","type","color","_c","$RefreshReg$"],"sources":["/Users/biomacbook/Documents/fnl-web-portal/src/Views/Game.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport Button from '../Atoms/Button/Button';\nimport MatchResults from './MatchResults';\nimport PlayerInput from '../Molecules/PlayerInput/PlayerInput';\nimport Input from '../Atoms/Input/Input';\nimport { fnlPlayers } from '../Utils';\n\nconst Game = () => {\n    const [formDataArray, setFormDataArray] = useState([]);\n    const [teamWhiteGoalie, setTeamWhiteGoalie] = useState('');\n    const [teamBlackGoalie, setTeamBlackGoalie] = useState('');\n    const [teamWhitePlayers, setTeamWhitePlayers] = useState([{ name: '' }]);\n    const [teamBlackPlayers, setTeamBlackPlayers] = useState([{ name: '' }]);\n    const [monthToMonth, setmonthToMonth] = useState([{ name: '' }]);\n    const [irAndOut, setIRAndOut] = useState([{ name: '' }]);\n    const [weekToWeek, setWeekToWeek] = useState([{ name: '' }]);\n    // need more filtered arrays\n    const [filteredPlayers, setFilteredPlayers] = useState([]);\n\n    const [formData, setFormData] = useState({\n        game: {\n            teamWhite: {\n                Team: 'White',\n                players: [{}],\n                goalie: '',\n            },\n            teamBlack: {\n                Team: 'Black',\n                players: [{}],\n                goalie: '',\n            },\n            irAndOut: {\n                Team: 'irAndOut',\n                players: [{}],\n            },\n            monthToMonth: {\n                Team: 'monthToMonth',\n                players: [{}],\n            },\n            weekToWeek: {\n                Team: 'weekToWeek',\n                players: [{}],\n            },\n        },\n    });\n\n    const handlePlayerNameChange = (team, playerIndex, newName, playerType) => {\n        // Filter the players array to find the matching name and set the filtered players\n        const filtered = fnlPlayers.filter((player) => player.name.toLowerCase().includes(newName));\n        setFilteredPlayers(filtered);\n\n        // Update the form data with the new name\n        setFormData((prevData) => {\n            const updatedData = { ...prevData };\n            if (playerType === 'goalie') {\n                updatedData.game[team].goalie = newName;\n            } else {\n                updatedData.game[team].players = updatedData.game[team].players.map(\n                    (player, index) => {\n                        if (index === playerIndex) {\n                            player.name = newName;\n                        }\n                        return player;\n                    }\n                );\n            }\n            return updatedData;\n        });\n    };\n\n    const handleAddPlayer = (team) => {\n        const newPlayer = { name: '' };\n        switch (team) {\n            case 'teamWhite':\n                setTeamWhitePlayers((prevPlayers) => [...prevPlayers, newPlayer]);\n                break;\n            case 'irAndOut':\n                setIRAndOut((prevPlayers) => [...prevPlayers, newPlayer]);\n                break;\n            case 'monthToMonth':\n                setmonthToMonth((prevPlayers) => [...prevPlayers, newPlayer]);\n                break;\n            case 'weekToWeek':\n                setWeekToWeek((prevPlayers) => [...prevPlayers, newPlayer]);\n                break;\n            default:\n                setTeamBlackPlayers((prevPlayers) => [...prevPlayers, newPlayer]);\n                break;\n        }\n        setFormData((prevData) => {\n            const updatedData = { ...prevData };\n            updatedData.game[team].players.push({});\n            return updatedData;\n        });\n    };\n    const removePlayer = (team, playerIndex) => {\n        switch (team) {\n            case 'teamWhite':\n                if (teamWhitePlayers.length === 1) return;\n                setTeamWhitePlayers((prevPlayers) =>\n                    prevPlayers.filter((player, index) => index !== playerIndex)\n                );\n                break;\n            case 'irAndOut':\n                if (irAndOut.length === 1) return;\n                setIRAndOut((prevPlayers) =>\n                    prevPlayers.filter((player, index) => index !== playerIndex)\n                );\n                break;\n            case 'weekToWeek':\n                if (weekToWeek.length === 1) return;\n                setWeekToWeek((prevPlayers) =>\n                    prevPlayers.filter((player, index) => index !== playerIndex)\n                );\n                break;\n            case 'monthToMonth':\n                if (monthToMonth.length === 1) return;\n                setmonthToMonth((prevPlayers) =>\n                    prevPlayers.filter((player, index) => index !== playerIndex)\n                );\n                break;\n            default:\n                if (teamBlackPlayers.length === 1) return;\n                setTeamBlackPlayers((prevPlayers) =>\n                    prevPlayers.filter((player, index) => index !== playerIndex)\n                );\n                break;\n        }\n    };\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        // Add the current date to the form data\n        const currentDate = new Date().toLocaleDateString();\n        const formDataArray = JSON.parse(localStorage.getItem('formDataArray')) || [];\n        const weekNumber = formDataArray.length === 0 ? 1 : formDataArray.length + 1;\n        const updatedFormData = {\n            ...formData,\n            date: currentDate,\n            week: weekNumber,\n        };\n        // Save the form data to local storage\n        localStorage.setItem('formDataArray', JSON.stringify(updatedFormData));\n        // Push the form data into the array\n        setFormDataArray((prevDataArray) => [...prevDataArray, updatedFormData]);\n    };\n\n    useEffect(() => {\n        // Load the form data array from local storage\n        const savedFormDataArray = JSON.parse(localStorage.getItem('formDataArray')) || [];\n        if (savedFormDataArray.length > 0) {\n            setFormDataArray(savedFormDataArray);\n        }\n    }, []);\n\n    console.log(formDataArray);\n\n    // set the input value to the name of the player selected\n    const handleNameSelect = (name, inputType, playerIndex) => {\n        switch (inputType) {\n            case 'teamWhiteGoalie':\n                setTeamWhiteGoalie(name);\n                handlePlayerNameChange('teamWhite', null, name, 'goalie');\n                break;\n           \n            case 'teamBlackGoalie':\n                setTeamBlackGoalie(name);\n                handlePlayerNameChange('teamBlack', null, name, 'goalie');\n                break;\n            \n            case 'teamWhitePlayer':\n\n                setTeamWhitePlayers((prevPlayers) => prevPlayers.map((players, index) => { \n                    const updatedData = { ...prevPlayers };\n                    updatedData.game['teamWhite'].players = updatedData.game['teamWhite'].players.map(\n                        (player, index) => {\n                            if (index === playerIndex) {\n                                player.name = newName;\n                            }\n                            return player;\n                        }\n                    );\n                    return updatedData;\n                }));\n                    \n               \n                setTeamWhitePlayers(name);\n                handlePlayerNameChange('teamWhite', null, name, 'player');\n                break;\n            \n            case 'teamBlackPlayer':\n                setTeamBlackPlayers(name);\n                handlePlayerNameChange('teamBlack', null, name, 'player');\n                break;\n            default:\n                break;\n        }\n        setFilteredPlayers([]);\n    };\n\n    return (\n        <>\n            <h1 style={{ textAlign: 'center' }}>FNL Roll Call</h1>\n            <div style={{ display: 'flex', justifyContent: 'center' }}>\n                <form onSubmit={handleSubmit}>\n                    <div\n                        style={{\n                            display: 'flex',\n                            flexDirection: 'row',\n                            gap: '20px',\n                            justifyContent: 'space-around',\n                        }}\n                    >\n                        <div style={{ display: 'flex', flexDirection: 'column', gap: '20px' }}>\n                            <h3>\n                                Team White{' '}\n                                <span role='img' aria-label='White Flag'>\n                                    🏳️\n                                </span>\n                            </h3>\n                            <Input\n                                value={teamWhiteGoalie}\n                                onChange={(e) => {\n                                    setTeamWhiteGoalie(e.target.value);\n                                    handlePlayerNameChange(\n                                        'teamWhite',\n                                        null,\n                                        e.target.value,\n                                        'goalie'\n                                    );\n                                }}\n                                placeholder='Goalie'\n                            />\n                            {filteredPlayers.length > 0 && (\n                                <div style={{ width: '50%' }}>\n                                    <ul\n                                        style={{\n                                            listStyleType: 'none',\n                                            margin: 0,\n                                            padding: 0,\n                                            border: '1px solid #ccc',\n                                            borderRadius: '5px',\n                                            boxShadow: '0 2px 4px rgba(0, 0, 0, 0.1)',\n                                        }}\n                                    >\n                                        {filteredPlayers.map((name, id) => (\n                                            <React.Fragment key={id}>\n                                                <li\n                                                    onClick={() => handleNameSelect(name.name , 'teamWhiteGoalie')}\n                                                    style={{\n                                                        cursor: 'pointer',\n                                                        padding: '5px',\n                                                        borderBottom: '1px solid #ccc',\n                                                    }}\n                                                >\n                                                    {name.name}\n                                                </li>\n                                            </React.Fragment>\n                                        ))}\n                                    </ul>\n                                </div>\n                            )}\n\n                            {teamWhitePlayers.map((player, index) => (\n                                <React.Fragment key={index}>\n                                    <PlayerInput\n                                        value={player.name}\n                                        onChange={(e) => {\n                                            const newPlayers = [...teamWhitePlayers];\n                                            newPlayers[index].name = e.target.value;\n                                            setTeamWhitePlayers(newPlayers);\n                                            handlePlayerNameChange(\n                                                'teamWhite',\n                                                index,\n                                                e.target.value,\n                                                'player'\n                                            );\n                                        }}\n                                        placeholder={`Player ${index + 1}`}\n                                        onAdd={() => handleAddPlayer('teamWhite')}\n                                        onRemove={() => removePlayer('teamWhite', index)}\n                                    />\n                                </React.Fragment>\n                            ))}\n\n                            {filteredPlayers.length > 0 && (\n                                <div style={{ width: '50%' }}>\n                                    <ul\n                                        style={{\n                                            listStyleType: 'none',\n                                            margin: 0,\n                                            padding: 0,\n                                            border: '1px solid #ccc',\n                                            borderRadius: '5px',\n                                            boxShadow: '0 2px 4px rgba(0, 0, 0, 0.1)',\n                                        }}\n                                    >\n                                        {filteredPlayers.map((name, id) => (\n                                            <React.Fragment key={id}>\n                                                <li\n                                                    onClick={() => handleNameSelect(name.name, 'teamWhitePlayer')}\n                                                    style={{\n                                                        cursor: 'pointer',\n                                                        padding: '5px',\n                                                        borderBottom: '1px solid #ccc',\n                                                    }}\n                                                >\n                                                    {name.name}\n                                                </li>\n                                            </React.Fragment>\n                                        ))}\n                                    </ul>\n                                </div>\n                            )}\n                        </div>\n\n                        <div style={{ display: 'flex', flexDirection: 'column', gap: '20px' }}>\n                            <h3>\n                                Team Black{' '}\n                                <span role='img' aria-label='Black Flag'>\n                                    🏴\n                                </span>\n                            </h3>\n                            <Input\n                                value={teamBlackGoalie}\n                                onChange={(e) => {\n                                    setTeamBlackGoalie(e.target.value);\n                                    handlePlayerNameChange(\n                                        'teamBlack',\n                                        null,\n                                        e.target.value,\n                                        'goalie'\n                                    );\n                                }}\n                                placeholder='Goalie'\n                            />\n\n                            {filteredPlayers.length > 0 && (\n                                <div style={{ width: '50%' }}>\n                                    <ul\n                                        style={{\n                                            listStyleType: 'none',\n                                            margin: 0,\n                                            padding: 0,\n                                            border: '1px solid #ccc',\n                                            borderRadius: '5px',\n                                            boxShadow: '0 2px 4px rgba(0, 0, 0, 0.1)',\n                                        }}\n                                    >\n                                        {filteredPlayers.map((name, id) => (\n                                            <React.Fragment key={id}>\n                                                <li\n                                                    onClick={() => handleNameSelect(name.name, 'teamBlackGoalie')}\n                                                    style={{\n                                                        cursor: 'pointer',\n                                                        padding: '5px',\n                                                        borderBottom: '1px solid #ccc',\n                                                    }}\n                                                >\n                                                    {name.name}\n                                                </li>\n                                            </React.Fragment>\n                                        ))}\n                                    </ul>\n                                </div>\n                            )}\n\n                            {teamBlackPlayers.map((player, index) => (\n                                <React.Fragment key={index}>\n                                    <PlayerInput\n                                        value={player.name}\n                                        onChange={(e) => {\n                                            const newPlayers = [...teamBlackPlayers];\n                                            newPlayers[index].name = e.target.value;\n                                            setTeamBlackPlayers(newPlayers);\n                                            handlePlayerNameChange(\n                                                'teamBlack',\n                                                index,\n                                                e.target.value,\n                                                'player'\n                                            );\n                                        }}\n                                        placeholder={`Player ${index + 1}`}\n                                        onAdd={() => handleAddPlayer('teamBlack')}\n                                        onRemove={() => removePlayer('teamBlack', index)}\n                                    />\n                                </React.Fragment>\n                            ))}\n                        </div>\n                    </div>\n\n                    <div\n                        style={{\n                            display: 'flex',\n                            flexDirection: 'row',\n                            gap: '20px',\n                            justifyContent: 'center',\n                        }}\n                    >\n                        <div\n                            style={{\n                                display: 'flex',\n                                flexDirection: 'column',\n                                gap: '20px',\n                                marginTop: '50px',\n                            }}\n                        >\n                            <h3>IR/Out</h3>\n                            {irAndOut.map((player, index) => (\n                                <React.Fragment key={index}>\n                                    <PlayerInput\n                                        value={player.name}\n                                        onChange={(e) => {\n                                            const newPlayers = [...irAndOut];\n                                            newPlayers[index].name = e.target.value;\n                                            setIRAndOut(newPlayers);\n                                            handlePlayerNameChange(\n                                                'irAndOut',\n                                                index,\n                                                e.target.value,\n                                                'player'\n                                            );\n                                        }}\n                                        placeholder={`Player ${index + 1}`}\n                                        onAdd={() => handleAddPlayer('irAndOut')}\n                                        onRemove={() => removePlayer('irAndOut', index)}\n                                    />\n                                </React.Fragment>\n                            ))}\n                        </div>\n\n                        <div\n                            style={{\n                                display: 'flex',\n                                flexDirection: 'column',\n                                gap: '20px',\n                                marginTop: '50px',\n                            }}\n                        >\n                            <h3>Month to Month</h3>\n                            {monthToMonth.map((player, index) => (\n                                <React.Fragment key={index}>\n                                    <PlayerInput\n                                        value={player.name}\n                                        onChange={(e) => {\n                                            const newPlayers = [...monthToMonth];\n                                            newPlayers[index].name = e.target.value;\n                                            setmonthToMonth(newPlayers);\n                                            handlePlayerNameChange(\n                                                'monthToMonth',\n                                                index,\n                                                e.target.value,\n                                                'player'\n                                            );\n                                        }}\n                                        placeholder={`Player ${index + 1}`}\n                                        onAdd={() => handleAddPlayer('monthToMonth')}\n                                        onRemove={() => removePlayer('monthToMonth', index)}\n                                    />\n                                </React.Fragment>\n                            ))}\n                        </div>\n                        <div\n                            style={{\n                                display: 'flex',\n                                flexDirection: 'column',\n                                gap: '20px',\n                                marginTop: '50px',\n                            }}\n                        >\n                            <h3>Week to week</h3>\n                            {weekToWeek.map((player, index) => (\n                                <React.Fragment key={index}>\n                                    <PlayerInput\n                                        value={player.name}\n                                        onChange={(e) => {\n                                            const newPlayers = [...weekToWeek];\n                                            newPlayers[index].name = e.target.value;\n                                            setWeekToWeek(newPlayers);\n                                            handlePlayerNameChange(\n                                                'weekToWeek',\n                                                index,\n                                                e.target.value,\n                                                'player'\n                                            );\n                                        }}\n                                        placeholder={`Player ${index + 1}`}\n                                        onAdd={() => handleAddPlayer('weekToWeek')}\n                                        onRemove={() => removePlayer('weekToWeek', index)}\n                                    />\n                                </React.Fragment>\n                            ))}\n                        </div>\n                    </div>\n                    <div style={{ display: 'flex', marginTop: '50px' }}>\n                        <Button title='Submit' type='submit' color='#2196f3' />\n                    </div>\n                </form>\n            </div>\n            <MatchResults formDataArray={formDataArray} />\n        </>\n    );\n};\n\nexport default Game;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}