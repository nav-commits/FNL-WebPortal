{"ast":null,"code":"var _jsxFileName = \"/Users/biomacbook/Documents/fnl-web-portal/src/Views/Game.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport Button from '../Atoms/Button/Button';\nimport MatchResults from './MatchResults';\nimport Input from '../Atoms/Input/Input';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Game = () => {\n  _s();\n  const [formDataArray, setFormDataArray] = useState([]);\n  const [teamWhiteGoalie, setTeamWhiteGoalie] = useState('');\n  const [teamBlackGoalie, setTeamBlackGoalie] = useState('');\n  const [teamWhitePlayers, setTeamWhitePlayers] = useState([{\n    name: ''\n  }]);\n  const [teamBlackPlayers, setTeamBlackPlayers] = useState([{\n    name: ''\n  }]);\n  const [monthToMonth, setmonthToMonth] = useState([{\n    name: ''\n  }]);\n  const [irAndOut, setIRAndOut] = useState([{\n    name: ''\n  }]);\n  const [weekToWeek, setWeekToWeek] = useState([{\n    name: ''\n  }]);\n  const [formData, setFormData] = useState({\n    game: {\n      teamWhite: {\n        Team: 'White',\n        players: [{}],\n        goalie: ''\n      },\n      teamBlack: {\n        Team: 'Black',\n        players: [{}],\n        goalie: ''\n      },\n      irAndOut: {\n        Team: 'irAndOut',\n        players: [{}]\n      },\n      monthToMonth: {\n        Team: 'monthToMonth',\n        players: [{}]\n      },\n      weekToWeek: {\n        Team: 'weekToWeek',\n        players: [{}]\n      }\n    }\n  });\n  const handlePlayerNameChange = (team, playerIndex, newName, playerType) => {\n    setFormData(prevData => {\n      const updatedData = {\n        ...prevData\n      };\n      if (playerType === 'goalie') {\n        updatedData.game[team].goalie = newName;\n      } else if (playerType === 'irAndOut') {\n        updatedData.game[team].players = updatedData.game[team].players.map((player, index) => {\n          if (index === playerIndex) {\n            player.name = newName;\n          }\n          return player;\n        });\n      } else if (playerType === 'weekToWeek') {\n        updatedData.game[team].players = updatedData.game[team].players.map((player, index) => {\n          if (index === playerIndex) {\n            player.name = newName;\n          }\n          return player;\n        });\n      } else if (playerType === 'monthToMonth') {\n        updatedData.game[team].players = updatedData.game[team].players.map((player, index) => {\n          if (index === playerIndex) {\n            player.name = newName;\n          }\n          return player;\n        });\n      } else {\n        updatedData.game[team].players = updatedData.game[team].players.map((player, index) => {\n          if (index === playerIndex) {\n            player.name = newName;\n          }\n          return player;\n        });\n      }\n      return updatedData;\n    });\n  };\n  const handleAddPlayer = team => {\n    if (team === 'teamWhite') {\n      setTeamWhitePlayers(prevPlayers => [...prevPlayers, {\n        name: ''\n      }]);\n    } else if (team === 'irAndOut') {\n      setIRAndOut(prevPlayers => [...prevPlayers, {\n        name: ''\n      }]);\n    } else if (team === 'monthToMonth') {\n      setmonthToMonth(prevPlayers => [...prevPlayers, {\n        name: ''\n      }]);\n    } else if (team === 'weekToWeek') {\n      setWeekToWeek(prevPlayers => [...prevPlayers, {\n        name: ''\n      }]);\n    } else {\n      setTeamBlackPlayers(prevPlayers => [...prevPlayers, {\n        name: ''\n      }]);\n    }\n    setFormData(prevData => {\n      const updatedData = {\n        ...prevData\n      };\n      updatedData.game[team].players.push({});\n      return updatedData;\n    });\n  };\n  const removePlayer = (team, playerIndex) => {\n    if (team === 'teamWhite') {\n      setTeamWhitePlayers(prevPlayers => prevPlayers.filter((player, index) => index !== playerIndex));\n    } else if (team === 'irAndOut') {\n      setIRAndOut(prevPlayers => prevPlayers.filter((player, index) => index !== playerIndex));\n    } else if (team === 'weekToWeek') {\n      setWeekToWeek(prevPlayers => prevPlayers.filter((player, index) => index !== playerIndex));\n    } else if (team === 'monthToMonth') {\n      setmonthToMonth(prevPlayers => prevPlayers.filter((player, index) => index !== playerIndex));\n    } else {\n      setTeamBlackPlayers(prevPlayers => prevPlayers.filter((player, index) => index !== playerIndex));\n    }\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    // Add the current date to the form data\n    const currentDate = new Date().toLocaleDateString();\n    const formDataArray = JSON.parse(localStorage.getItem('formDataArray')) || [];\n    const weekNumber = formDataArray.length + 1;\n    if (formDataArray.length === 0) {\n      q;\n    }\n    const updatedFormData = {\n      ...formData,\n      date: currentDate,\n      week: weekNumber\n    };\n\n    // Save the form data to local storage\n    localStorage.setItem('formDataArray', JSON.stringify(updatedFormData));\n    // Push the form data into the array\n    setFormDataArray(prevDataArray => [...prevDataArray, updatedFormData]);\n  };\n  useEffect(() => {\n    // Load the form data array from local storage\n    const savedFormDataArray = JSON.parse(localStorage.getItem('formDataArray')) || [];\n    if (savedFormDataArray.length > 0) {\n      setFormDataArray(savedFormDataArray);\n    }\n  }, []);\n  console.log(formDataArray);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        textAlign: 'center'\n      },\n      children: \"FNL Roll Call\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'center'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"team\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"Team White   \", /*#__PURE__*/_jsxDEV(\"span\", {\n              role: \"img\",\n              \"aria-label\": \"White Flag\",\n              children: \"\\uD83C\\uDFF3\\uFE0F\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 42\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex',\n              flexDirection: 'column',\n              gap: '20px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(Input, {\n              value: teamWhiteGoalie,\n              onChange: e => {\n                setTeamWhiteGoalie(e.target.value);\n                handlePlayerNameChange('teamWhite', null, e.target.value, 'goalie');\n              },\n              placeholder: \"Goalie\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 29\n            }, this), teamWhitePlayers.map((player, index) => /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(Input, {\n                value: player.name,\n                onChange: e => {\n                  const newPlayers = [...teamWhitePlayers];\n                  newPlayers[index].name = e.target.value;\n                  setTeamWhitePlayers(newPlayers);\n                  handlePlayerNameChange('teamWhite', index, e.target.value, 'player');\n                },\n                placeholder: `Player ${index + 1}`\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 199,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                color: \"red\",\n                title: \"Remove Player\",\n                type: \"button\",\n                onClick: () => removePlayer('teamWhite', index)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 215,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true)), /*#__PURE__*/_jsxDEV(Button, {\n              title: \"Add Player\",\n              color: \"#007BFF\",\n              type: \"button\",\n              onClick: () => handleAddPlayer('teamWhite')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"team\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"Team Black \", /*#__PURE__*/_jsxDEV(\"span\", {\n              role: \"img\",\n              \"aria-label\": \"Black Flag\",\n              children: \"\\uD83C\\uDFF4\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 40\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex',\n              flexDirection: 'column',\n              gap: '20px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(Input, {\n              value: teamBlackGoalie,\n              onChange: e => {\n                setTeamBlackGoalie(e.target.value);\n                handlePlayerNameChange('teamBlack', null, e.target.value, 'goalie');\n              },\n              placeholder: \"Goalie\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 234,\n              columnNumber: 29\n            }, this), teamBlackPlayers.map((player, index) => /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(Input, {\n                value: player.name,\n                onChange: e => {\n                  const newPlayers = [...teamBlackPlayers];\n                  newPlayers[index].name = e.target.value;\n                  setTeamBlackPlayers(newPlayers);\n                  handlePlayerNameChange('teamBlack', index, e.target.value, 'player');\n                },\n                placeholder: `Player ${index + 1}`\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 249,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                color: \"red\",\n                title: \"Remove Player\",\n                type: \"button\",\n                onClick: () => removePlayer('teamBlack', index)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 265,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true)), /*#__PURE__*/_jsxDEV(Button, {\n              title: \"Add Player\",\n              color: \"#007BFF\",\n              type: \"button\",\n              onClick: () => handleAddPlayer('teamBlack')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 274,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            flexDirection: 'column',\n            gap: '20px',\n            marginTop: '50px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"IR and Out\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 285,\n            columnNumber: 25\n          }, this), irAndOut.map((player, index) => /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Input, {\n              value: player.name,\n              onChange: e => {\n                const newPlayers = [...irAndOut];\n                newPlayers[index].name = e.target.value;\n                setIRAndOut(newPlayers);\n                handlePlayerNameChange('irAndOut', index, e.target.value, 'player');\n              },\n              placeholder: `Player ${index + 1}`\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 288,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              color: \"red\",\n              title: \"Remove Player\",\n              type: \"button\",\n              onClick: () => removePlayer('irAndOut', index)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 304,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true)), /*#__PURE__*/_jsxDEV(Button, {\n            title: \"Add Player\",\n            color: \"#007BFF\",\n            type: \"button\",\n            onClick: () => handleAddPlayer('irAndOut')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 313,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            flexDirection: 'column',\n            gap: '20px',\n            marginTop: '50px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Month to Month\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 323,\n            columnNumber: 25\n          }, this), monthToMonth.map((player, index) => /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Input, {\n              value: player.name,\n              onChange: e => {\n                const newPlayers = [...monthToMonth];\n                newPlayers[index].name = e.target.value;\n                setmonthToMonth(newPlayers);\n                handlePlayerNameChange('monthToMonth', index, e.target.value, 'player');\n              },\n              placeholder: `Player ${index + 1}`\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 326,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              color: \"red\",\n              title: \"Remove Player\",\n              type: \"button\",\n              onClick: () => removePlayer('monthToMonth', index)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 342,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true)), /*#__PURE__*/_jsxDEV(Button, {\n            title: \"Add Player\",\n            color: \"#007BFF\",\n            type: \"button\",\n            onClick: () => handleAddPlayer('monthToMonth')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 351,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            flexDirection: 'column',\n            gap: '20px',\n            marginTop: '50px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Week to week\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 361,\n            columnNumber: 25\n          }, this), weekToWeek.map((player, index) => /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Input, {\n              value: player.name,\n              onChange: e => {\n                const newPlayers = [...weekToWeek];\n                newPlayers[index].name = e.target.value;\n                setWeekToWeek(newPlayers);\n                handlePlayerNameChange('weekToWeek', index, e.target.value, 'player');\n              },\n              placeholder: `Player ${index + 1}`\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 364,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              color: \"red\",\n              title: \"Remove Player\",\n              type: \"button\",\n              onClick: () => removePlayer('weekToWeek', index)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 380,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true)), /*#__PURE__*/_jsxDEV(Button, {\n            title: \"Add Player\",\n            color: \"#007BFF\",\n            type: \"button\",\n            onClick: () => handleAddPlayer('weekToWeek')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 389,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 360,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          title: \"Submit\",\n          type: \"submit\",\n          color: \"#007BFF\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 397,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(MatchResults, {\n      formDataArray: formDataArray\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 400,\n      columnNumber: 14\n    }, this)]\n  }, void 0, true);\n};\n_s(Game, \"q9wjtHh6149uY2pzG+3Kz0oni4M=\");\n_c = Game;\nexport default Game;\nvar _c;\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["React","useEffect","useState","Button","MatchResults","Input","jsxDEV","_jsxDEV","Fragment","_Fragment","Game","_s","formDataArray","setFormDataArray","teamWhiteGoalie","setTeamWhiteGoalie","teamBlackGoalie","setTeamBlackGoalie","teamWhitePlayers","setTeamWhitePlayers","name","teamBlackPlayers","setTeamBlackPlayers","monthToMonth","setmonthToMonth","irAndOut","setIRAndOut","weekToWeek","setWeekToWeek","formData","setFormData","game","teamWhite","Team","players","goalie","teamBlack","handlePlayerNameChange","team","playerIndex","newName","playerType","prevData","updatedData","map","player","index","handleAddPlayer","prevPlayers","push","removePlayer","filter","handleSubmit","e","preventDefault","currentDate","Date","toLocaleDateString","JSON","parse","localStorage","getItem","weekNumber","length","q","updatedFormData","date","week","setItem","stringify","prevDataArray","savedFormDataArray","console","log","children","style","textAlign","fileName","_jsxFileName","lineNumber","columnNumber","display","justifyContent","onSubmit","className","role","flexDirection","gap","value","onChange","target","placeholder","newPlayers","color","title","type","onClick","marginTop","_c","$RefreshReg$"],"sources":["/Users/biomacbook/Documents/fnl-web-portal/src/Views/Game.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport Button from '../Atoms/Button/Button';\nimport MatchResults from './MatchResults';\nimport Input from '../Atoms/Input/Input';\n\nconst Game = () => {\n    const [formDataArray, setFormDataArray] = useState([]);\n    const [teamWhiteGoalie, setTeamWhiteGoalie] = useState('');\n    const [teamBlackGoalie, setTeamBlackGoalie] = useState('');\n    const [teamWhitePlayers, setTeamWhitePlayers] = useState([{ name: '' }]);\n    const [teamBlackPlayers, setTeamBlackPlayers] = useState([{ name: '' }]);\n    const [monthToMonth, setmonthToMonth] = useState([{ name: '' }]);\n    const [irAndOut, setIRAndOut] = useState([{ name: '' }]);\n    const [weekToWeek, setWeekToWeek] = useState([{ name: '' }]);\n\n    const [formData, setFormData] = useState({\n        game: {\n            teamWhite: {\n                Team: 'White',\n                players: [{}],\n                goalie: '',\n            },\n            teamBlack: {\n                Team: 'Black',\n                players: [{}],\n                goalie: '',\n            },\n            irAndOut: {\n                Team: 'irAndOut',\n                players: [{}],\n            },\n            monthToMonth: {\n                Team: 'monthToMonth',\n                players: [{}],\n            },\n            weekToWeek: {\n                Team: 'weekToWeek',\n                players: [{}],\n            },\n        },\n    });\n\n    const handlePlayerNameChange = (team, playerIndex, newName, playerType) => {\n        setFormData((prevData) => {\n            const updatedData = { ...prevData };\n            if (playerType === 'goalie') {\n                updatedData.game[team].goalie = newName;\n            }\n            else if (playerType === 'irAndOut') {\n                updatedData.game[team].players = updatedData.game[team].players.map(\n                    (player, index) => {\n                        if (index === playerIndex) {\n                            player.name = newName;\n                        }\n                        return player;\n                    }\n                );\n            }\n            else if (playerType === 'weekToWeek') {\n                updatedData.game[team].players = updatedData.game[team].players.map(\n                    (player, index) => {\n                        if (index === playerIndex) {\n                            player.name = newName;\n                        }\n                        return player;\n                    }\n                );\n            }\n            else if (playerType === 'monthToMonth') {\n                updatedData.game[team].players = updatedData.game[team].players.map(\n                    (player, index) => {\n                        if (index === playerIndex) {\n                            player.name = newName;\n                        }\n                        return player;\n                    }\n                );\n            }\n            else {\n                updatedData.game[team].players = updatedData.game[team].players.map(\n                    (player, index) => {\n                        if (index === playerIndex) {\n                            player.name = newName;\n                        }\n                        return player;\n                    }\n                );\n            }\n            return updatedData;\n        });\n    };\n\n    const handleAddPlayer = (team) => {\n        if (team === 'teamWhite') {\n            setTeamWhitePlayers((prevPlayers) => [...prevPlayers, { name: '' }]);\n        }\n        else if (team === 'irAndOut') {\n            setIRAndOut((prevPlayers) => [...prevPlayers, { name: '' }]);\n        }\n        else if (team === 'monthToMonth') {\n            setmonthToMonth((prevPlayers) => [...prevPlayers, { name: '' }]);\n        }\n        else if (team === 'weekToWeek') {\n            setWeekToWeek((prevPlayers) => [...prevPlayers, { name: '' }]);\n        }\n        else {\n            setTeamBlackPlayers((prevPlayers) => [...prevPlayers, { name: '' }]);\n        }\n        setFormData((prevData) => {\n            const updatedData = { ...prevData };\n            updatedData.game[team].players.push({});\n            return updatedData;\n        });\n    };\n    const removePlayer = (team, playerIndex) => {\n        if (team === 'teamWhite') {\n            setTeamWhitePlayers((prevPlayers) =>\n                prevPlayers.filter((player, index) => index !== playerIndex)\n            );\n        }\n        else if (team === 'irAndOut') {\n            setIRAndOut((prevPlayers) =>\n                prevPlayers.filter((player, index) => index !== playerIndex)\n            );\n        }\n        else if (team === 'weekToWeek') {\n            setWeekToWeek((prevPlayers) =>\n                prevPlayers.filter((player, index) => index !== playerIndex)\n            );\n        }\n        else if (team === 'monthToMonth') {\n            setmonthToMonth((prevPlayers) =>\n                prevPlayers.filter((player, index) => index !== playerIndex)\n            );\n        }\n        else {\n            setTeamBlackPlayers((prevPlayers) =>\n                prevPlayers.filter((player, index) => index !== playerIndex)\n            );\n        }\n    };\n\n   \n        const handleSubmit = (e) => {\n            e.preventDefault();\n            // Add the current date to the form data\n            const currentDate = new Date().toLocaleDateString();\n            const formDataArray = JSON.parse(localStorage.getItem('formDataArray')) || [];\n            const weekNumber = formDataArray.length + 1;\n            if (formDataArray.length === 0) {\n                q\n            }\n                const updatedFormData = {\n                    ...formData,\n                    date: currentDate,\n                    week: weekNumber,\n                };\n            \n            // Save the form data to local storage\n            localStorage.setItem('formDataArray', JSON.stringify(updatedFormData));\n            // Push the form data into the array\n            setFormDataArray((prevDataArray) => [...prevDataArray, updatedFormData]);\n        };\n    \n\n    useEffect(() => {\n        // Load the form data array from local storage\n        const savedFormDataArray = JSON.parse(localStorage.getItem('formDataArray')) || [];\n        if (savedFormDataArray.length > 0) {\n            setFormDataArray(savedFormDataArray);\n        }\n    }, []);\n\n    console.log(formDataArray)\n\n    return (\n        <>\n            <h1 style={{ textAlign: 'center' }}>FNL Roll Call</h1>\n            <div style={{ display: 'flex', justifyContent: 'center' }}>\n                <form onSubmit={handleSubmit}>\n                    <div className='team'>\n                        <h3>Team White   <span role=\"img\" aria-label=\"White Flag\">🏳️</span></h3>\n                        <div style={{ display: 'flex', flexDirection: 'column', gap: '20px' }}>\n                            <Input\n                                value={teamWhiteGoalie}\n                                onChange={(e) => {\n                                    setTeamWhiteGoalie(e.target.value);\n                                    handlePlayerNameChange(\n                                        'teamWhite',\n                                        null,\n                                        e.target.value,\n                                        'goalie'\n                                    );\n                                }}\n                                placeholder='Goalie'\n                            />\n                            {teamWhitePlayers.map((player, index) => (\n                                <>\n                                    <Input\n                                        key={index}\n                                        value={player.name}\n                                        onChange={(e) => {\n                                            const newPlayers = [...teamWhitePlayers];\n                                            newPlayers[index].name = e.target.value;\n                                            setTeamWhitePlayers(newPlayers);\n                                            handlePlayerNameChange(\n                                                'teamWhite',\n                                                index,\n                                                e.target.value,\n                                                'player'\n                                            );\n                                        }}\n                                        placeholder={`Player ${index + 1}`}\n                                    />\n                                    <Button\n                                        color='red'\n                                        title='Remove Player'\n                                        type='button'\n                                        onClick={() => removePlayer('teamWhite', index)}\n                                    />\n                                </>\n                            ))}\n                            <Button\n                                title='Add Player'\n                                color='#007BFF'\n                                type='button'\n                                onClick={() => handleAddPlayer('teamWhite')}\n                            />\n                        </div>\n                    </div>\n                    <div className='team'>\n                        <h3>Team Black <span role=\"img\" aria-label=\"Black Flag\">🏴</span></h3>\n                        <div style={{ display: 'flex', flexDirection: 'column', gap: '20px' }}>\n                            <Input\n                                value={teamBlackGoalie}\n                                onChange={(e) => {\n                                    setTeamBlackGoalie(e.target.value);\n                                    handlePlayerNameChange(\n                                        'teamBlack',\n                                        null,\n                                        e.target.value,\n                                        'goalie'\n                                    );\n                                }}\n                                placeholder='Goalie'\n                            />\n                            {teamBlackPlayers.map((player, index) => (\n                                <>\n                                    <Input\n                                        key={index}\n                                        value={player.name}\n                                        onChange={(e) => {\n                                            const newPlayers = [...teamBlackPlayers];\n                                            newPlayers[index].name = e.target.value;\n                                            setTeamBlackPlayers(newPlayers);\n                                            handlePlayerNameChange(\n                                                'teamBlack',\n                                                index,\n                                                e.target.value,\n                                                'player'\n                                            );\n                                        }}\n                                        placeholder={`Player ${index + 1}`}\n                                    />\n                                    <Button\n                                        color='red'\n                                        title='Remove Player'\n                                        type='button'\n                                        onClick={() => removePlayer('teamBlack', index)}\n                                    />\n                                </>\n                            ))}\n\n                            <Button\n                                title='Add Player'\n                                color='#007BFF'\n                                type='button'\n                                onClick={() => handleAddPlayer('teamBlack')}\n                            />\n                        </div>\n                    \n                    </div>\n\n                    <div style={{ display: 'flex', flexDirection: 'column', gap: '20px', marginTop: '50px' }}>\n                        <h2>IR and Out</h2>\n                        {irAndOut.map((player, index) => (\n                            <>\n                                <Input\n                                    key={index}\n                                    value={player.name}\n                                    onChange={(e) => {\n                                        const newPlayers = [...irAndOut];\n                                        newPlayers[index].name = e.target.value;\n                                        setIRAndOut(newPlayers);\n                                        handlePlayerNameChange(\n                                            'irAndOut',\n                                            index,\n                                            e.target.value,\n                                            'player'\n                                        );\n                                    }}\n                                    placeholder={`Player ${index + 1}`}\n                                />\n                                <Button\n                                    color='red'\n                                    title='Remove Player'\n                                    type='button'\n                                    onClick={() => removePlayer('irAndOut', index)}\n                                />\n                            </>\n                        ))}\n\n                        <Button\n                            title='Add Player'\n                            color='#007BFF'\n                            type='button'\n                            onClick={() => handleAddPlayer('irAndOut')}\n                        />\n                    </div>\n\n\n                    <div style={{ display: 'flex', flexDirection: 'column', gap: '20px', marginTop: '50px' }}>\n                        <h2>Month to Month</h2>\n                        {monthToMonth.map((player, index) => (\n                            <>\n                                <Input\n                                    key={index}\n                                    value={player.name}\n                                    onChange={(e) => {\n                                        const newPlayers = [...monthToMonth];\n                                        newPlayers[index].name = e.target.value;\n                                        setmonthToMonth(newPlayers);\n                                        handlePlayerNameChange(\n                                            'monthToMonth',\n                                            index,\n                                            e.target.value,\n                                            'player'\n                                        );\n                                    }}\n                                    placeholder={`Player ${index + 1}`}\n                                />\n                                <Button\n                                    color='red'\n                                    title='Remove Player'\n                                    type='button'\n                                    onClick={() => removePlayer('monthToMonth', index)}\n                                />\n                            </>\n                        ))}\n\n                        <Button\n                            title='Add Player'\n                            color='#007BFF'\n                            type='button'\n                            onClick={() => handleAddPlayer('monthToMonth')}\n                        />\n                    </div>\n\n\n                    <div style={{ display: 'flex', flexDirection: 'column', gap: '20px', marginTop: '50px' }}>\n                        <h2>Week to week</h2>\n                        {weekToWeek.map((player, index) => (\n                            <>\n                                <Input\n                                    key={index}\n                                    value={player.name}\n                                    onChange={(e) => {\n                                        const newPlayers = [...weekToWeek];\n                                        newPlayers[index].name = e.target.value;\n                                        setWeekToWeek(newPlayers);\n                                        handlePlayerNameChange(\n                                            'weekToWeek',\n                                            index,\n                                            e.target.value,\n                                            'player'\n                                        );\n                                    }}\n                                    placeholder={`Player ${index + 1}`}\n                                />\n                                <Button\n                                    color='red'\n                                    title='Remove Player'\n                                    type='button'\n                                    onClick={() => removePlayer('weekToWeek', index)}\n                                />\n                            </>\n                        ))}\n\n                        <Button\n                            title='Add Player'\n                            color='#007BFF'\n                            type='button'\n                            onClick={() => handleAddPlayer('weekToWeek')}\n                        />\n                    </div>\n\n                    <Button title='Submit' type='submit' color='#007BFF' />\n                </form>\n            </div>\n             <MatchResults formDataArray={formDataArray} /> \n        </>\n    );\n};\n\nexport default Game;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}