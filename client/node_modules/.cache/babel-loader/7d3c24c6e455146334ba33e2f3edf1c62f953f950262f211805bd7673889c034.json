{"ast":null,"code":"var _jsxFileName = \"/Users/biomacbook/Documents/fnl-web-portal/src/Views/Game.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport Button from '../Atoms/Button/Button';\nimport Input from '../Atoms/Input/Input';\nimport MatchResults from './MatchResults';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst PlayerList = () => {\n  _s();\n  let maxInputs = 10;\n  const [inputs, setInputs] = useState([]);\n  const [newInput, setNewInput] = useState('');\n  const [isMaxReached, setIsMaxReached] = useState(false);\n  const handleAddInput = () => {\n    if (inputs.length < maxInputs) {\n      setInputs([...inputs, newInput]);\n      setNewInput('');\n      setIsMaxReached(inputs.length + 1 >= maxInputs);\n    }\n  };\n  // const [formData, setFormData] = useState({\n  //     game: {\n  //         teamWhite: {\n  //             Team: 'White',\n  //             goalie: '',\n  //             player1: '',\n  //             player2: '',\n  //             player3: '',\n  //             player4: '',\n  //             player5: '',\n  //             player6: '',\n  //         },\n  //         teamBlack: {\n  //             Team: 'Black',\n  //             goalie: '',\n  //             player1: '',\n  //             player2: '',\n  //             player3: '',\n  //             player4: '',\n  //             player5: '',\n  //             player6: '',\n  //         },\n  //     },\n  // });\n\n  // const [formDataArray, setFormDataArray] = useState([]);\n\n  // const handlePlayerNameChange = (game, team, player, newName) => {\n  //     setFormData((prevData) => {\n  //         const updatedData = { ...prevData };\n  //         updatedData[game][team][player] = newName;\n  //         return updatedData;\n  //     });\n  // };\n\n  // const handleSubmit = (e) => {\n  //     e.preventDefault();\n  //     // Add the current date to the form data\n  //     const currentDate = new Date().toLocaleDateString();\n  //     const updatedFormData = {\n  //         ...formData,\n  //         date: currentDate,\n  //         week: formDataArray.length + 1,\n  //     };\n  //     // Save the form data to local storage\n  //     localStorage.setItem('formData', JSON.stringify(updatedFormData));\n  //     // Push the form data into the array\n  //     setFormDataArray((prevDataArray) => [...prevDataArray, updatedFormData]);\n  //     // Clear the form data\n  //     setFormData({\n  //         game: {\n  //             teamWhite: {\n  //                 Team: 'White',\n  //                 goalie: '',\n  //                 player1: '',\n  //                 player2: '',\n  //                 player3: '',\n  //                 player4: '',\n  //                 player5: '',\n  //                 player6: '',\n  //             },\n  //             teamBlack: {\n  //                 Team: 'Black',\n  //                 goalie: '',\n  //                 player1: '',\n  //                 player2: '',\n  //                 player3: '',\n  //                 player4: '',\n  //                 player5: '',\n  //                 player6: '',\n  //             },\n  //         },\n  //     });\n  // };\n\n  // useEffect(() => {\n  //     // Load the form data array from local storage\n  //     const savedFormDataArray = JSON.parse(localStorage.getItem('formDataArray'));\n  //     if (savedFormDataArray) {\n  //         setFormDataArray(savedFormDataArray);\n  //     }\n  // }, []);\n\n  // console.log(formDataArray);\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        textAlign: 'center'\n      },\n      children: \"FNL Roll Call\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Input\",\n          value: newInput,\n          onChange: e => setNewInput(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleAddInput,\n          disabled: isMaxReached,\n          children: \"Add Input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 17\n      }, this), isMaxReached && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Maximum inputs reached (\", maxInputs, \").\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 34\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: inputs.map((input, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: input\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_s(PlayerList, \"9XNSzC0YgSYOzvxh9gCtt/w5lNE=\");\n_c = PlayerList;\nexport default PlayerList;\nvar _c;\n$RefreshReg$(_c, \"PlayerList\");","map":{"version":3,"names":["React","useEffect","useState","Button","Input","MatchResults","jsxDEV","_jsxDEV","Fragment","_Fragment","PlayerList","_s","maxInputs","inputs","setInputs","newInput","setNewInput","isMaxReached","setIsMaxReached","handleAddInput","length","children","style","textAlign","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","disabled","map","input","index","_c","$RefreshReg$"],"sources":["/Users/biomacbook/Documents/fnl-web-portal/src/Views/Game.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport Button from '../Atoms/Button/Button';\nimport Input from '../Atoms/Input/Input';\nimport MatchResults from './MatchResults';\nconst PlayerList = () => {\n  let maxInputs = 10;\n    const [inputs, setInputs] = useState([]);\n    const [newInput, setNewInput] = useState('');\n    const [isMaxReached, setIsMaxReached] = useState(false);\n    const handleAddInput = () => {\n        if (inputs.length < maxInputs) {\n            setInputs([...inputs, newInput]);\n            setNewInput('');\n            setIsMaxReached(inputs.length + 1 >= maxInputs);\n        }\n    };\n    // const [formData, setFormData] = useState({\n    //     game: {\n    //         teamWhite: {\n    //             Team: 'White',\n    //             goalie: '',\n    //             player1: '',\n    //             player2: '',\n    //             player3: '',\n    //             player4: '',\n    //             player5: '',\n    //             player6: '',\n    //         },\n    //         teamBlack: {\n    //             Team: 'Black',\n    //             goalie: '',\n    //             player1: '',\n    //             player2: '',\n    //             player3: '',\n    //             player4: '',\n    //             player5: '',\n    //             player6: '',\n    //         },\n    //     },\n    // });\n\n    // const [formDataArray, setFormDataArray] = useState([]);\n\n    // const handlePlayerNameChange = (game, team, player, newName) => {\n    //     setFormData((prevData) => {\n    //         const updatedData = { ...prevData };\n    //         updatedData[game][team][player] = newName;\n    //         return updatedData;\n    //     });\n    // };\n\n    // const handleSubmit = (e) => {\n    //     e.preventDefault();\n    //     // Add the current date to the form data\n    //     const currentDate = new Date().toLocaleDateString();\n    //     const updatedFormData = {\n    //         ...formData,\n    //         date: currentDate,\n    //         week: formDataArray.length + 1,\n    //     };\n    //     // Save the form data to local storage\n    //     localStorage.setItem('formData', JSON.stringify(updatedFormData));\n    //     // Push the form data into the array\n    //     setFormDataArray((prevDataArray) => [...prevDataArray, updatedFormData]);\n    //     // Clear the form data\n    //     setFormData({\n    //         game: {\n    //             teamWhite: {\n    //                 Team: 'White',\n    //                 goalie: '',\n    //                 player1: '',\n    //                 player2: '',\n    //                 player3: '',\n    //                 player4: '',\n    //                 player5: '',\n    //                 player6: '',\n    //             },\n    //             teamBlack: {\n    //                 Team: 'Black',\n    //                 goalie: '',\n    //                 player1: '',\n    //                 player2: '',\n    //                 player3: '',\n    //                 player4: '',\n    //                 player5: '',\n    //                 player6: '',\n    //             },\n    //         },\n    //     });\n    // };\n\n    // useEffect(() => {\n    //     // Load the form data array from local storage\n    //     const savedFormDataArray = JSON.parse(localStorage.getItem('formDataArray'));\n    //     if (savedFormDataArray) {\n    //         setFormDataArray(savedFormDataArray);\n    //     }\n    // }, []);\n\n    // console.log(formDataArray);\n\n    return (\n        <>\n            <h1 style={{ textAlign: 'center' }}>FNL Roll Call</h1>\n            {/* <div style={{ display: 'flex', justifyContent: 'center' }}>\n                <form onSubmit={handleSubmit}>\n                    <div className='team'>\n                        <h3>Team White</h3>\n                        <div style={{ display: 'flex', flexDirection: 'column', gap: '20px' }}>\n                            <Input\n                                value={formData.game.teamWhite.goalie}\n                                onChange={(e) =>\n                                    handlePlayerNameChange('game', 'teamWhite', 'goalie', e.target.value)\n                                }\n                                placeholder='Goalie'\n                            />\n                            <Input\n                                value={formData.game.teamWhite.player1}\n                                onChange={(e) =>\n                                    handlePlayerNameChange('game', 'teamWhite', 'player1', e.target.value)\n                                }\n                                placeholder='Player 1'\n                            />\n                            <Input\n                                value={formData.game.teamWhite.player2}\n                                onChange={(e) =>\n                                    handlePlayerNameChange('game', 'teamWhite', 'player2', e.target.value)\n                                }\n                                placeholder='Player 2'\n                            />\n                            <Input\n                                value={formData.game.teamWhite.player3}\n                                onChange={(e) =>\n                                    handlePlayerNameChange('game', 'teamWhite', 'player3', e.target.value)\n                                }\n                                placeholder='Player 3'\n                            />\n                            <Input\n                                value={formData.game.teamWhite.player4}\n                                onChange={(e) =>\n                                    handlePlayerNameChange('game', 'teamWhite', 'player4', e.target.value)\n                                }\n                                placeholder='Player 4'\n                            />\n                            <Input\n                                value={formData.game.teamWhite.player5}\n                                onChange={(e) =>\n                                    handlePlayerNameChange('game', 'teamWhite', 'player5', e.target.value)\n                                }\n                                placeholder='Player 5'\n                            />\n                            <Input\n                                value={formData.game.teamWhite.player6}\n                                onChange={(e) =>\n                                    handlePlayerNameChange('game', 'teamWhite', 'player6', e.target.value)\n                                }\n                                placeholder='Player 6'\n                            />\n                        </div>\n                    </div>\n                    <div className='team'>\n                        <h3>Team Black</h3>\n                        <div style={{ display: 'flex', flexDirection: 'column', gap: '20px' }}>\n                            <Input\n                                value={formData.game.teamBlack.goalie}\n                                onChange={(e) =>\n                                    handlePlayerNameChange('game', 'teamBlack', 'goalie', e.target.value)\n                                }\n                                placeholder='Goalie'\n                            />\n                            <Input\n                                value={formData.game.teamBlack.player1}\n                                onChange={(e) =>\n                                    handlePlayerNameChange('game', 'teamBlack', 'player1', e.target.value)\n                                }\n                                placeholder='Player 1'\n                            />\n                            <Input\n                                value={formData.game.teamBlack.player2}\n                                onChange={(e) =>\n                                    handlePlayerNameChange('game', 'teamBlack', 'player2', e.target.value)\n                                }\n                                placeholder='Player 2'\n                            />\n                            <Input\n                                value={formData.game.teamBlack.player3}\n                                onChange={(e) =>\n                                    handlePlayerNameChange('game', 'teamBlack', 'player3', e.target.value)\n                                }\n                                placeholder='Player 3'\n                            />\n                            <Input\n                                value={formData.game.teamBlack.player4}\n                                onChange={(e) =>\n                                    handlePlayerNameChange('game', 'teamBlack', 'player4', e.target.value)\n                                }\n                                placeholder='Player 4'\n                            />\n                            <Input\n                                value={formData.game.teamBlack.player5}\n                                onChange={(e) =>\n                                    handlePlayerNameChange('game', 'teamBlack', 'player5', e.target.value)\n                                }\n                                placeholder='Player 5'\n                            />\n                            <Input\n                                value={formData.game.teamBlack.player6}\n                                onChange={(e) =>\n                                    handlePlayerNameChange('game', 'teamBlack', 'player6', e.target.value)\n                                }\n                                placeholder='Player 6'\n                            />\n                        </div>\n                    </div>\n\n                    <Button title='Submit' />\n                </form>\n            </div>\n            {/* create context for the game results */}\n            {/* <MatchResults formDataArray={formDataArray} /> */} \n\n            <div>\n                <div>\n                    <input\n                        type=\"text\"\n                        placeholder=\"Input\"\n                        value={newInput}\n                        onChange={(e) => setNewInput(e.target.value)}\n                    />\n                    <button onClick={handleAddInput} disabled={isMaxReached}>\n                        Add Input\n                    </button>\n                </div>\n                {isMaxReached && <p>Maximum inputs reached ({maxInputs}).</p>}\n                <ul>\n                    {inputs.map((input, index) => (\n                        <div key={index}>\n                            {input}\n                        </div>\n                        \n                    ))}\n                </ul>\n            </div>\n        </>\n    );\n};\n\nexport default PlayerList;\n\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}