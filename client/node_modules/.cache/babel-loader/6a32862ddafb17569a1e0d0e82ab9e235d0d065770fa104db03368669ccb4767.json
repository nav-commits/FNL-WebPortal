{"ast":null,"code":"var _jsxFileName = \"/Users/biomacbook/Documents/fnl-web-portal/src/Views/Game.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport Button from '../Atoms/Button/Button';\nimport Input from '../Atoms/Input/Input';\nimport MatchResults from './MatchResults';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst PlayerList = () => {\n  _s();\n  const [inputList, setInputList] = useState([{\n    id: 0,\n    value: ''\n  }]);\n  const [nextId, setNextId] = useState(1);\n  const handleAddInput = () => {\n    const newInputList = [...inputList, {\n      id: nextId,\n      value: ''\n    }];\n    setNextId(nextId + 1);\n    setInputList(newInputList);\n  };\n  const handleInputChange = (id, value) => {\n    const updatedInputList = inputList.map(input => input.id === id ? {\n      ...input,\n      value\n    } : input);\n    setInputList(updatedInputList);\n  };\n  const handleRemoveInput = id => {\n    const filteredInputList = inputList.filter(input => input.id !== id);\n    setInputList(filteredInputList);\n  };\n\n  // const [formData, setFormData] = useState({\n  //     game: {\n  //         teamWhite: {\n  //             Team: 'White',\n  //             goalie: '',\n  //             player1: '',\n  //             player2: '',\n  //             player3: '',\n  //             player4: '',\n  //             player5: '',\n  //             player6: '',\n  //         },\n  //         teamBlack: {\n  //             Team: 'Black',\n  //             goalie: '',\n  //             player1: '',\n  //             player2: '',\n  //             player3: '',\n  //             player4: '',\n  //             player5: '',\n  //             player6: '',\n  //         },\n  //     },\n  // });\n\n  // const [formDataArray, setFormDataArray] = useState([]);\n\n  // const handlePlayerNameChange = (game, team, player, newName) => {\n  //     setFormData((prevData) => {\n  //         const updatedData = { ...prevData };\n  //         updatedData[game][team][player] = newName;\n  //         return updatedData;\n  //     });\n  // };\n\n  // const handleSubmit = (e) => {\n  //     e.preventDefault();\n  //     // Add the current date to the form data\n  //     const currentDate = new Date().toLocaleDateString();\n  //     const updatedFormData = {\n  //         ...formData,\n  //         date: currentDate,\n  //         week: formDataArray.length + 1,\n  //     };\n  //     // Save the form data to local storage\n  //     localStorage.setItem('formData', JSON.stringify(updatedFormData));\n  //     // Push the form data into the array\n  //     setFormDataArray((prevDataArray) => [...prevDataArray, updatedFormData]);\n  //     // Clear the form data\n  //     setFormData({\n  //         game: {\n  //             teamWhite: {\n  //                 Team: 'White',\n  //                 goalie: '',\n  //                 player1: '',\n  //                 player2: '',\n  //                 player3: '',\n  //                 player4: '',\n  //                 player5: '',\n  //                 player6: '',\n  //             },\n  //             teamBlack: {\n  //                 Team: 'Black',\n  //                 goalie: '',\n  //                 player1: '',\n  //                 player2: '',\n  //                 player3: '',\n  //                 player4: '',\n  //                 player5: '',\n  //                 player6: '',\n  //             },\n  //         },\n  //     });\n  // };\n\n  // useEffect(() => {\n  //     // Load the form data array from local storage\n  //     const savedFormDataArray = JSON.parse(localStorage.getItem('formDataArray'));\n  //     if (savedFormDataArray) {\n  //         setFormDataArray(savedFormDataArray);\n  //     }\n  // }, []);\n\n  // console.log(formDataArray);\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        textAlign: 'center'\n      },\n      children: \"FNL Roll Call\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n_s(PlayerList, \"imd04dSnRoVMfm1bJWOpwWut8Mg=\");\n_c = PlayerList;\nexport default PlayerList;\nvar _c;\n$RefreshReg$(_c, \"PlayerList\");","map":{"version":3,"names":["React","useEffect","useState","Button","Input","MatchResults","jsxDEV","_jsxDEV","Fragment","_Fragment","PlayerList","_s","inputList","setInputList","id","value","nextId","setNextId","handleAddInput","newInputList","handleInputChange","updatedInputList","map","input","handleRemoveInput","filteredInputList","filter","children","style","textAlign","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/biomacbook/Documents/fnl-web-portal/src/Views/Game.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport Button from '../Atoms/Button/Button';\nimport Input from '../Atoms/Input/Input';\nimport MatchResults from './MatchResults';\nconst PlayerList = () => {\n    const [inputList, setInputList] = useState([{ id: 0, value: '' }]);\n    const [nextId, setNextId] = useState(1);\n    const handleAddInput = () => {\n        const newInputList = [...inputList, { id: nextId, value: '' }];\n        setNextId(nextId + 1);\n        setInputList(newInputList);\n    };\n    const handleInputChange = (id, value) => {\n        const updatedInputList = inputList.map((input) =>\n            input.id === id ? { ...input, value } : input\n        );\n        setInputList(updatedInputList);\n    };\n    const handleRemoveInput = (id) => {\n        const filteredInputList = inputList.filter((input) => input.id !== id);\n        setInputList(filteredInputList);\n    };\n    \n    // const [formData, setFormData] = useState({\n    //     game: {\n    //         teamWhite: {\n    //             Team: 'White',\n    //             goalie: '',\n    //             player1: '',\n    //             player2: '',\n    //             player3: '',\n    //             player4: '',\n    //             player5: '',\n    //             player6: '',\n    //         },\n    //         teamBlack: {\n    //             Team: 'Black',\n    //             goalie: '',\n    //             player1: '',\n    //             player2: '',\n    //             player3: '',\n    //             player4: '',\n    //             player5: '',\n    //             player6: '',\n    //         },\n    //     },\n    // });\n\n    // const [formDataArray, setFormDataArray] = useState([]);\n\n    // const handlePlayerNameChange = (game, team, player, newName) => {\n    //     setFormData((prevData) => {\n    //         const updatedData = { ...prevData };\n    //         updatedData[game][team][player] = newName;\n    //         return updatedData;\n    //     });\n    // };\n\n    // const handleSubmit = (e) => {\n    //     e.preventDefault();\n    //     // Add the current date to the form data\n    //     const currentDate = new Date().toLocaleDateString();\n    //     const updatedFormData = {\n    //         ...formData,\n    //         date: currentDate,\n    //         week: formDataArray.length + 1,\n    //     };\n    //     // Save the form data to local storage\n    //     localStorage.setItem('formData', JSON.stringify(updatedFormData));\n    //     // Push the form data into the array\n    //     setFormDataArray((prevDataArray) => [...prevDataArray, updatedFormData]);\n    //     // Clear the form data\n    //     setFormData({\n    //         game: {\n    //             teamWhite: {\n    //                 Team: 'White',\n    //                 goalie: '',\n    //                 player1: '',\n    //                 player2: '',\n    //                 player3: '',\n    //                 player4: '',\n    //                 player5: '',\n    //                 player6: '',\n    //             },\n    //             teamBlack: {\n    //                 Team: 'Black',\n    //                 goalie: '',\n    //                 player1: '',\n    //                 player2: '',\n    //                 player3: '',\n    //                 player4: '',\n    //                 player5: '',\n    //                 player6: '',\n    //             },\n    //         },\n    //     });\n    // };\n\n    // useEffect(() => {\n    //     // Load the form data array from local storage\n    //     const savedFormDataArray = JSON.parse(localStorage.getItem('formDataArray'));\n    //     if (savedFormDataArray) {\n    //         setFormDataArray(savedFormDataArray);\n    //     }\n    // }, []);\n\n    // console.log(formDataArray);\n\n    return (\n        <>\n            <h1 style={{ textAlign: 'center' }}>FNL Roll Call</h1>\n            {/* <div style={{ display: 'flex', justifyContent: 'center' }}>\n                <form onSubmit={handleSubmit}>\n                    <div className='team'>\n                        <h3>Team White</h3>\n                        <div style={{ display: 'flex', flexDirection: 'column', gap: '20px' }}>\n                            <Input\n                                value={formData.game.teamWhite.goalie}\n                                onChange={(e) =>\n                                    handlePlayerNameChange('game', 'teamWhite', 'goalie', e.target.value)\n                                }\n                                placeholder='Goalie'\n                            />\n                            <Input\n                                value={formData.game.teamWhite.player1}\n                                onChange={(e) =>\n                                    handlePlayerNameChange('game', 'teamWhite', 'player1', e.target.value)\n                                }\n                                placeholder='Player 1'\n                            />\n                            <Input\n                                value={formData.game.teamWhite.player2}\n                                onChange={(e) =>\n                                    handlePlayerNameChange('game', 'teamWhite', 'player2', e.target.value)\n                                }\n                                placeholder='Player 2'\n                            />\n                            <Input\n                                value={formData.game.teamWhite.player3}\n                                onChange={(e) =>\n                                    handlePlayerNameChange('game', 'teamWhite', 'player3', e.target.value)\n                                }\n                                placeholder='Player 3'\n                            />\n                            <Input\n                                value={formData.game.teamWhite.player4}\n                                onChange={(e) =>\n                                    handlePlayerNameChange('game', 'teamWhite', 'player4', e.target.value)\n                                }\n                                placeholder='Player 4'\n                            />\n                            <Input\n                                value={formData.game.teamWhite.player5}\n                                onChange={(e) =>\n                                    handlePlayerNameChange('game', 'teamWhite', 'player5', e.target.value)\n                                }\n                                placeholder='Player 5'\n                            />\n                            <Input\n                                value={formData.game.teamWhite.player6}\n                                onChange={(e) =>\n                                    handlePlayerNameChange('game', 'teamWhite', 'player6', e.target.value)\n                                }\n                                placeholder='Player 6'\n                            />\n                        </div>\n                    </div>\n                    <div className='team'>\n                        <h3>Team Black</h3>\n                        <div style={{ display: 'flex', flexDirection: 'column', gap: '20px' }}>\n                            <Input\n                                value={formData.game.teamBlack.goalie}\n                                onChange={(e) =>\n                                    handlePlayerNameChange('game', 'teamBlack', 'goalie', e.target.value)\n                                }\n                                placeholder='Goalie'\n                            />\n                            <Input\n                                value={formData.game.teamBlack.player1}\n                                onChange={(e) =>\n                                    handlePlayerNameChange('game', 'teamBlack', 'player1', e.target.value)\n                                }\n                                placeholder='Player 1'\n                            />\n                            <Input\n                                value={formData.game.teamBlack.player2}\n                                onChange={(e) =>\n                                    handlePlayerNameChange('game', 'teamBlack', 'player2', e.target.value)\n                                }\n                                placeholder='Player 2'\n                            />\n                            <Input\n                                value={formData.game.teamBlack.player3}\n                                onChange={(e) =>\n                                    handlePlayerNameChange('game', 'teamBlack', 'player3', e.target.value)\n                                }\n                                placeholder='Player 3'\n                            />\n                            <Input\n                                value={formData.game.teamBlack.player4}\n                                onChange={(e) =>\n                                    handlePlayerNameChange('game', 'teamBlack', 'player4', e.target.value)\n                                }\n                                placeholder='Player 4'\n                            />\n                            <Input\n                                value={formData.game.teamBlack.player5}\n                                onChange={(e) =>\n                                    handlePlayerNameChange('game', 'teamBlack', 'player5', e.target.value)\n                                }\n                                placeholder='Player 5'\n                            />\n                            <Input\n                                value={formData.game.teamBlack.player6}\n                                onChange={(e) =>\n                                    handlePlayerNameChange('game', 'teamBlack', 'player6', e.target.value)\n                                }\n                                placeholder='Player 6'\n                            />\n                        </div>\n                    </div>\n\n                    <Button title='Submit' />\n                </form>\n            </div>\n            {/* create context for the game results */}\n            {/* <MatchResults formDataArray={formDataArray} /> */}\n            \n        </>\n    );\n};\n\nexport default PlayerList;\n\n\n\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,MAAM,MAAM,wBAAwB;AAC3C,OAAOC,KAAK,MAAM,sBAAsB;AACxC,OAAOC,YAAY,MAAM,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAC1C,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGX,QAAQ,CAAC,CAAC;IAAEY,EAAE,EAAE,CAAC;IAAEC,KAAK,EAAE;EAAG,CAAC,CAAC,CAAC;EAClE,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGf,QAAQ,CAAC,CAAC,CAAC;EACvC,MAAMgB,cAAc,GAAGA,CAAA,KAAM;IACzB,MAAMC,YAAY,GAAG,CAAC,GAAGP,SAAS,EAAE;MAAEE,EAAE,EAAEE,MAAM;MAAED,KAAK,EAAE;IAAG,CAAC,CAAC;IAC9DE,SAAS,CAACD,MAAM,GAAG,CAAC,CAAC;IACrBH,YAAY,CAACM,YAAY,CAAC;EAC9B,CAAC;EACD,MAAMC,iBAAiB,GAAGA,CAACN,EAAE,EAAEC,KAAK,KAAK;IACrC,MAAMM,gBAAgB,GAAGT,SAAS,CAACU,GAAG,CAAEC,KAAK,IACzCA,KAAK,CAACT,EAAE,KAAKA,EAAE,GAAG;MAAE,GAAGS,KAAK;MAAER;IAAM,CAAC,GAAGQ,KAC5C,CAAC;IACDV,YAAY,CAACQ,gBAAgB,CAAC;EAClC,CAAC;EACD,MAAMG,iBAAiB,GAAIV,EAAE,IAAK;IAC9B,MAAMW,iBAAiB,GAAGb,SAAS,CAACc,MAAM,CAAEH,KAAK,IAAKA,KAAK,CAACT,EAAE,KAAKA,EAAE,CAAC;IACtED,YAAY,CAACY,iBAAiB,CAAC;EACnC,CAAC;;EAED;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;;EAEA,oBACIlB,OAAA,CAAAE,SAAA;IAAAkB,QAAA,eACIpB,OAAA;MAAIqB,KAAK,EAAE;QAAEC,SAAS,EAAE;MAAS,CAAE;MAAAF,QAAA,EAAC;IAAa;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI;EAAC,gBAsHxD,CAAC;AAEX,CAAC;AAACtB,EAAA,CAlOID,UAAU;AAAAwB,EAAA,GAAVxB,UAAU;AAoOhB,eAAeA,UAAU;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}